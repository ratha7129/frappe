{
  "version": 3,
  "sources": ["../../../../../apps/frappe/frappe/public/js/frappe/views/treeview.js", "frappe-html:/home/server/pro-bench/apps/frappe/frappe/public/js/frappe/ui/listing.html", "../../../../../apps/frappe/frappe/public/js/frappe/model/indicator.js", "../../../../../apps/frappe/frappe/public/js/frappe/ui/filters/filter.js", "../../../../../apps/frappe/frappe/public/js/frappe/ui/filters/filter_list.js", "../../../../../apps/frappe/frappe/public/js/frappe/ui/filters/field_select.js", "frappe-html:/home/server/pro-bench/apps/frappe/frappe/public/js/frappe/ui/filters/edit_filter.html", "../../../../../apps/frappe/frappe/public/js/frappe/ui/tags.js", "../../../../../apps/frappe/frappe/public/js/frappe/ui/tag_editor.js", "../../../../../apps/frappe/frappe/public/js/frappe/ui/like.js", "frappe-html:/home/server/pro-bench/apps/frappe/frappe/public/html/print_template.html", "../../../../../apps/frappe/frappe/public/js/frappe/list/base_list.js", "../../../../../apps/frappe/frappe/public/js/frappe/list/bulk_operations.js", "../../../../../apps/frappe/frappe/public/js/frappe/list/list_settings.js", "../../../../../apps/frappe/frappe/public/js/frappe/list/list_view.js", "../../../../../apps/frappe/frappe/public/js/frappe/list/list_factory.js", "../../../../../apps/frappe/frappe/public/js/frappe/list/list_view_select.js", "../../../../../apps/frappe/frappe/public/js/frappe/list/list_filter.js", "../../../../../apps/frappe/frappe/public/js/frappe/list/list_sidebar.js", "frappe-html:/home/server/pro-bench/apps/frappe/frappe/public/js/frappe/list/list_sidebar.html", "frappe-html:/home/server/pro-bench/apps/frappe/frappe/public/js/frappe/list/list_sidebar_stat.html", "../../../../../apps/frappe/frappe/public/js/frappe/list/list_sidebar_group_by.js", "frappe-html:/home/server/pro-bench/apps/frappe/frappe/public/js/frappe/list/list_view_permission_restrictions.html", "../../../../../apps/frappe/frappe/public/js/frappe/views/gantt/gantt_view.js", "../../../../../apps/frappe/frappe/public/js/frappe/views/calendar/calendar.js", "../../../../../apps/frappe/frappe/public/js/frappe/views/dashboard/dashboard_view.js", "../../../../../apps/frappe/frappe/public/js/frappe/views/image/image_view.js", "../../../../../apps/frappe/frappe/public/js/frappe/views/map/map_view.js", "../../../../../apps/frappe/frappe/public/js/frappe/views/kanban/kanban_settings.js", "../../../../../apps/frappe/frappe/public/js/frappe/views/kanban/kanban_view.js", "../../../../../apps/frappe/frappe/public/js/frappe/views/inbox/inbox_view.js", "../../../../../apps/frappe/frappe/public/js/frappe/views/file/file_view.js", "../../../../../apps/frappe/frappe/public/js/list.bundle.js", "../../../../../apps/frappe/frappe/public/js/frappe/views/interaction.js", "frappe-html:/home/server/pro-bench/apps/frappe/frappe/public/js/frappe/views/image/image_view_item_row.html", "frappe-html:/home/server/pro-bench/apps/frappe/frappe/public/js/frappe/views/image/photoswipe_dom.html", "frappe-html:/home/server/pro-bench/apps/frappe/frappe/public/js/frappe/views/kanban/kanban_board.html", "frappe-html:/home/server/pro-bench/apps/frappe/frappe/public/js/frappe/views/kanban/kanban_column.html", "frappe-html:/home/server/pro-bench/apps/frappe/frappe/public/js/frappe/views/kanban/kanban_card.html"],
  "sourcesContent": ["// Copyright (c) 2015, Frappe Technologies Pvt. Ltd. and Contributors\n// MIT License. See license.txt\n\nfrappe.provide(\"frappe.treeview_settings\");\nfrappe.provide('frappe.views.trees');\nwindow.cur_tree = null;\n\nfrappe.views.TreeFactory = class TreeFactory extends frappe.views.Factory {\n\tmake(route) {\n\t\tfrappe.model.with_doctype(route[1], function() {\n\t\t\tvar options = {\n\t\t\t\tdoctype: route[1],\n\t\t\t\tmeta: frappe.get_meta(route[1])\n\t\t\t};\n\n\t\t\tif (!frappe.treeview_settings[route[1]] && !frappe.meta.get_docfield(route[1], \"is_group\")) {\n\t\t\t\tfrappe.msgprint(__(\"Tree view is not available for {0}\", [route[1]] ));\n\t\t\t\treturn false;\n\t\t\t}\n\t\t\t$.extend(options, frappe.treeview_settings[route[1]] || {});\n\t\t\tfrappe.views.trees[options.doctype] = new frappe.views.TreeView(options);\n\t\t});\n\t}\n\n\ton_show() {\n\t\t/**\n\t\t * When the the treeview is visited using the previous button,\n\t\t * the framework just show the treeview element that is hidden.\n\t\t * Due to this, the data of the tree can be old.\n\t\t * To deal with this, the tree will be refreshed whenever the\n\t\t * treeview is visible.\n\t\t */\n\t\tlet route = frappe.get_route();\n\t\tlet treeview = frappe.views.trees[route[1]];\n\t\ttreeview && treeview.make_tree();\n\t}\n}\n\nfrappe.views.TreeView = class TreeView {\n\tconstructor(opts) {\n\t\tvar me = this;\n\n\t\tthis.opts = {};\n\t\tthis.opts.get_tree_root = true;\n\t\tthis.opts.show_expand_all = true;\n\t\t$.extend(this.opts, opts);\n\t\tthis.doctype = opts.doctype;\n\t\tthis.args = {doctype: me.doctype};\n\t\tthis.page_name = frappe.get_route_str();\n\t\tthis.get_tree_nodes =  me.opts.get_tree_nodes || \"frappe.desk.treeview.get_children\";\n\n\t\tthis.get_permissions();\n\t\tthis.make_page();\n\t\tthis.make_filters();\n\t\tthis.root_value = null;\n\n\t\tif (me.opts.get_tree_root) {\n\t\t\tthis.get_root();\n\t\t}\n\n\t\tthis.onload();\n\t\tthis.set_menu_item();\n\t\tthis.set_primary_action();\n\t}\n\tget_permissions(){\n\t\tthis.can_read = frappe.model.can_read(this.doctype);\n\t\tthis.can_create = frappe.boot.user.can_create.indexOf(this.doctype) !== -1 ||\n\t\t\t\t\tfrappe.boot.user.in_create.indexOf(this.doctype) !== -1;\n\t\tthis.can_write = frappe.model.can_write(this.doctype);\n\t\tthis.can_delete = frappe.model.can_delete(this.doctype);\n\t}\n\tmake_page() {\n\t\tvar me = this;\n\t\tthis.parent = frappe.container.add_page(this.page_name);\n\t\tfrappe.ui.make_app_page({parent:this.parent, single_column:true});\n\n\t\tthis.page = this.parent.page;\n\t\tfrappe.container.change_to(this.page_name);\n\t\tfrappe.breadcrumbs.add(me.opts.breadcrumb || locals.DocType[me.doctype].module, me.doctype);\n\n\t\tthis.set_title();\n\n\t\tthis.page.main.css({\n\t\t\t\"min-height\": \"300px\",\n\t\t});\n\n\t\tthis.page.main.addClass('frappe-card');\n\n\t\tif(this.opts.show_expand_all) {\n\t\t\tthis.page.add_inner_button(__('Expand All'), function() {\n\t\t\t\tme.tree.load_children(me.tree.root_node, true);\n\t\t\t});\n\t\t}\n\n\t\tif(this.opts.view_template) {\n\t\t\tvar row = $('<div class=\"row\"><div>').appendTo(this.page.main);\n\t\t\tthis.body = $('<div class=\"col-sm-6 col-xs-12\"></div>').appendTo(row);\n\t\t\tthis.node_view = $('<div class=\"col-sm-6 hidden-xs\"></div>').appendTo(row);\n\t\t} else {\n\t\t\tthis.body = this.page.main;\n\t\t}\n\t}\n\tset_title() {\n\t\tthis.page.set_title(this.opts.title || __('{0} Tree', [__(this.doctype)]));\n\t}\n\tonload() {\n\t\tvar me = this;\n\t\tthis.opts.onload && this.opts.onload(me);\n\t}\n\tmake_filters() {\n\t\tvar me = this;\n\t\tfrappe.treeview_settings.filters = []\n\t\t$.each(this.opts.filters || [], function(i, filter) {\n\t\t\tif (frappe.route_options && frappe.route_options[filter.fieldname]) {\n\t\t\t\tfilter.default = frappe.route_options[filter.fieldname];\n\t\t\t}\n\n\t\t\tif (!filter.disable_onchange) {\n\t\t\t\tfilter.change = function() {\n\t\t\t\t\tfilter.onchange && filter.onchange();\n\t\t\t\t\tvar val = this.get_value();\n\t\t\t\t\tme.args[filter.fieldname] = val;\n\t\t\t\t\tif (val) {\n\t\t\t\t\t\tme.root_label = val;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tme.root_label = me.opts.root_label;\n\t\t\t\t\t}\n\t\t\t\t\tme.set_title();\n\t\t\t\t\tme.make_tree();\n\t\t\t\t};\n\t\t\t}\n\n\t\t\tme.page.add_field(filter);\n\n\t\t\tif (filter.default) {\n\t\t\t\t$(\"[data-fieldname='\"+filter.fieldname+\"']\").trigger(\"change\");\n\t\t\t}\n\t\t});\n\t}\n\tget_root() {\n\t\tvar me = this;\n\t\tfrappe.call({\n\t\t\tmethod: me.get_tree_nodes,\n\t\t\targs: me.args,\n\t\t\tcallback: function(r) {\n\t\t\t\tif (r.message) {\n\t\t\t\t\tif (r.message.length > 1) {\n\t\t\t\t\t\tme.root_label = me.doctype;\n\t\t\t\t\t\tme.root_value = \"\";\n\t\t\t\t\t} else {\n\t\t\t\t\t\tme.root_label = r.message[0][\"value\"];\n\t\t\t\t\t\tme.root_value = me.root_label;\n\t\t\t\t\t}\n\t\t\t\t\tme.make_tree();\n\t\t\t\t}\n\t\t\t}\n\t\t})\n\t}\n\tmake_tree() {\n\t\t$(this.parent).find(\".tree\").remove();\n\n\t\tvar use_label = this.args[this.opts.root_label] || this.root_label || this.opts.root_label;\n\t\tvar use_value = this.root_value;\n\t\tif (use_value == null) {\n\t\t\tuse_value = use_label;\n\t\t}\n\t\tthis.tree = new frappe.ui.Tree({\n\t\t\tparent: this.body,\n\t\t\tlabel: use_label,\n\t\t\troot_value: use_value,\n\t\t\texpandable: true,\n\n\t\t\targs: this.args,\n\t\t\tmethod: this.get_tree_nodes,\n\n\t\t\t// array of button props: {label, condition, click, btnClass}\n\t\t\ttoolbar: this.get_toolbar(),\n\n\t\t\tget_label: this.opts.get_label,\n\t\t\ton_render: this.opts.onrender,\n\t\t\ton_get_node: this.opts.on_get_node,\n\t\t\ton_click: (node) => { this.select_node(node); },\n\t\t});\n\n\t\tcur_tree = this.tree;\n\t\tthis.post_render();\n\t}\n\n\trebuild_tree() {\n\t\tlet me = this;\n\n\t\tfrappe.call({\n\t\t\t\"method\": \"frappe.utils.nestedset.rebuild_tree\",\n\t\t\t\"args\": {\n\t\t\t\t'doctype': me.doctype,\n\t\t\t\t'parent_field': \"parent_\"+me.doctype.toLowerCase().replace(/ /g, '_'),\n\t\t\t},\n\t\t\t\"callback\": function(r) {\n\t\t\t\tif (!r.exc) {\n\t\t\t\t\tme.make_tree();\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\t}\n\n\tpost_render() {\n\t\tvar me = this;\n\t\tme.opts.post_render && me.opts.post_render(me);\n\t}\n\n\tselect_node(node) {\n\t\tvar me = this;\n\t\tif(this.opts.click) {\n\t\t\tthis.opts.click(node);\n\t\t}\n\t\tif(this.opts.view_template) {\n\t\t\tthis.node_view.empty();\n\t\t\t$(frappe.render_template(me.opts.view_template,\n\t\t\t\t{data:node.data, doctype:me.doctype})).appendTo(this.node_view);\n\t\t}\n\t}\n\tget_toolbar() {\n\t\tvar me = this;\n\n\t\tvar toolbar = [\n\t\t\t{\n\t\t\t\tlabel:__(me.can_write? \"Edit\": \"Details\"),\n\t\t\t\tcondition: function(node) {\n\t\t\t\t\treturn !node.is_root && me.can_read;\n\t\t\t\t},\n\t\t\t\tclick: function(node) {\n\t\t\t\t\tfrappe.set_route(\"Form\", me.doctype, node.label);\n\t\t\t\t}\n\t\t\t},\n\t\t\t{\n\t\t\t\tlabel:__(\"Add Child\"),\n\t\t\t\tcondition: function(node) {\n\t\t\t\t\treturn me.can_create && node.expandable && !node.hide_add;\n\t\t\t\t},\n\t\t\t\tclick: function(node) {\n\t\t\t\t\tme.new_node();\n\t\t\t\t},\n\t\t\t\tbtnClass: \"hidden-xs\"\n\t\t\t},\n\t\t\t{\n\t\t\t\tlabel:__(\"Rename\"),\n\t\t\t\tcondition: function(node) {\n\t\t\t\t\tlet allow_rename = true;\n\t\t\t\t\tif (me.doctype && frappe.get_meta(me.doctype)) {\n\t\t\t\t\t\tif(!frappe.get_meta(me.doctype).allow_rename) allow_rename = false;\n\t\t\t\t\t}\n\t\t\t\t\treturn !node.is_root && me.can_write && allow_rename;\n\t\t\t\t},\n\t\t\t\tclick: function(node) {\n\t\t\t\t\tfrappe.model.rename_doc(me.doctype, node.label, function(new_name) {\n\t\t\t\t\t\tnode.$tree_link.find('a').text(new_name);\n\t\t\t\t\t\tnode.label = new_name;\n\t\t\t\t\t\tme.tree.refresh();\n\t\t\t\t\t});\n\t\t\t\t},\n\t\t\t\tbtnClass: \"hidden-xs\"\n\t\t\t},\n\t\t\t{\n\t\t\t\tlabel:__(\"Delete\"),\n\t\t\t\tcondition: function(node) { return !node.is_root && me.can_delete; },\n\t\t\t\tclick: function(node) {\n\t\t\t\t\tfrappe.model.delete_doc(me.doctype, node.label, function() {\n\t\t\t\t\t\tnode.parent.remove();\n\t\t\t\t\t});\n\t\t\t\t},\n\t\t\t\tbtnClass: \"hidden-xs\"\n\t\t\t}\n\t\t]\n\n\t\tif(this.opts.toolbar && this.opts.extend_toolbar) {\n\t\t\ttoolbar = toolbar.filter(btn => {\n\t\t\t\treturn !me.opts.toolbar.find(d => d[\"label\"]==btn[\"label\"]);\n\t\t\t});\n\t\t\treturn toolbar.concat(this.opts.toolbar)\n\t\t} else if (this.opts.toolbar && !this.opts.extend_toolbar) {\n\t\t\treturn this.opts.toolbar\n\t\t} else {\n\t\t\treturn toolbar\n\t\t}\n\t}\n\tnew_node() {\n\t\tvar me = this;\n\t\tvar node = me.tree.get_selected_node();\n\n\t\tif(!(node && node.expandable)) {\n\t\t\tfrappe.msgprint(__(\"Select a group node first.\"));\n\t\t\treturn;\n\t\t}\n\n\t\tthis.prepare_fields();\n\n\t\t// the dialog\n\t\tvar d = new frappe.ui.Dialog({\n\t\t\ttitle: __('New {0}',[__(me.doctype)]),\n\t\t\tfields: me.fields\n\t\t});\n\n\t\tvar args = $.extend({}, me.args);\n\t\targs[\"parent_\"+me.doctype.toLowerCase().replace(/ /g,'_')] = me.args[\"parent\"];\n\n\t\td.set_value(\"is_group\", 0);\n\t\td.set_values(args);\n\n\t\t// create\n\t\td.set_primary_action(__(\"Create New\"), function() {\n\t\t\tvar btn = this;\n\t\t\tvar v = d.get_values();\n\t\t\tif(!v) return;\n\n\t\t\tv.parent = node.label;\n\t\t\tv.doctype = me.doctype;\n\n\t\t\tif(node.is_root){\n\t\t\t\tv['is_root'] = node.is_root;\n\t\t\t}\n\t\t\telse{\n\t\t\t\tv['is_root'] = false;\n\t\t\t}\n\n\t\t\td.hide();\n\t\t\tfrappe.dom.freeze(__('Creating {0}', [me.doctype]));\n\n\t\t\t$.extend(args, v)\n\t\t\treturn frappe.call({\n\t\t\t\tmethod: me.opts.add_tree_node || \"frappe.desk.treeview.add_node\",\n\t\t\t\targs: args,\n\t\t\t\tcallback: function(r) {\n\t\t\t\t\tif(!r.exc) {\n\t\t\t\t\t\tme.tree.load_children(node);\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\talways: function() {\n\t\t\t\t\tfrappe.dom.unfreeze();\n\t\t\t\t},\n\t\t\t});\n\t\t});\n\t\td.show();\n\t}\n\tprepare_fields(){\n\t\tvar me = this;\n\n\t\tthis.fields = [\n\t\t\t{fieldtype:'Check', fieldname:'is_group', label:__('Group Node'),\n\t\t\t\tdescription: __(\"Further nodes can be only created under 'Group' type nodes\")}\n\t\t]\n\n\t\tif (this.opts.fields) {\n\t\t\tthis.fields = this.opts.fields;\n\t\t}\n\n\t\tthis.ignore_fields = this.opts.ignore_fields || [];\n\n\t\tvar mandatory_fields = $.map(me.opts.meta.fields, function(d) {\n\t\t\treturn (d.reqd || d.bold && !d.read_only && !!d.is_virtual) ? d : null });\n\n\t\tvar opts_field_names = this.fields.map(function(d) {\n\t\t\treturn d.fieldname\n\t\t})\n\n\t\tmandatory_fields.map(function(d) {\n\t\t\tif($.inArray(d.fieldname, me.ignore_fields) === -1 && $.inArray(d.fieldname, opts_field_names) === -1) {\n\t\t\t\tme.fields.push(d)\n\t\t\t}\n\t\t})\n\t}\n\tprint_tree() {\n\t\tif(!frappe.model.can_print(this.doctype)) {\n\t\t\tfrappe.msgprint(__(\"You are not allowed to print this report\"));\n\t\t\treturn false;\n\t\t}\n\t\tvar tree = $(\".tree:visible\").html();\n\t\tvar me = this;\n\t\tfrappe.ui.get_print_settings(false, function(print_settings) {\n\t\t\tvar title =  __(me.docname || me.doctype);\n\t\t\tfrappe.render_tree({title: title, tree: tree, print_settings:print_settings});\n\t\t\tfrappe.call({\n\t\t\t\tmethod: \"frappe.core.doctype.access_log.access_log.make_access_log\",\n\t\t\t\targs: {\n\t\t\t\t\tdoctype: me.doctype,\n\t\t\t\t\treport_name: me.page_name,\n\t\t\t\t\tpage: tree,\n\t\t\t\t\tmethod: 'Print'\n\t\t\t\t}\n\t\t\t});\n\t\t});\n\t}\n\tset_primary_action() {\n\t\tvar me = this;\n\t\tif (!this.opts.disable_add_node && this.can_create) {\n\t\t\tme.page.set_primary_action(__(\"New\"), function() {\n\t\t\t\tme.new_node();\n\t\t\t}, \"add\");\n\t\t}\n\t}\n\tset_menu_item() {\n\t\tvar me = this;\n\n\t\tthis.menu_items = [\n\t\t\t{\n\t\t\t\tlabel: __('View List'),\n\t\t\t\taction: function() {\n\t\t\t\t\tfrappe.set_route('List', me.doctype);\n\t\t\t\t}\n\t\t\t},\n\t\t\t{\n\t\t\t\tlabel: __('Print'),\n\t\t\t\taction: function() {\n\t\t\t\t\tme.print_tree();\n\t\t\t\t}\n\n\t\t\t},\n\t\t\t{\n\t\t\t\tlabel: __('Refresh'),\n\t\t\t\taction: function() {\n\t\t\t\t\tme.make_tree();\n\t\t\t\t}\n\t\t\t},\n\t\t];\n\n\t\tif (frappe.user.has_role('System Manager') &&\n\t\t\tfrappe.meta.has_field(me.doctype, \"lft\") &&\n\t\t\tfrappe.meta.has_field(me.doctype, \"rgt\")) {\n\t\t\tthis.menu_items.push(\n\t\t\t\t{\n\t\t\t\t\tlabel: __('Rebuild Tree'),\n\t\t\t\t\taction: function() {\n\t\t\t\t\t\tme.rebuild_tree();\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t);\n\t\t}\n\n\t\tif (me.opts.menu_items) {\n\t\t\tme.menu_items.push.apply(me.menu_items, me.opts.menu_items)\n\t\t}\n\n\t\t$.each(me.menu_items, function(i, menu_item){\n\t\t\tvar has_perm = true;\n\t\t\tif(menu_item[\"condition\"]) {\n\t\t\t\thas_perm = eval(menu_item[\"condition\"]);\n\t\t\t}\n\n\t\t\tif (has_perm) {\n\t\t\t\tme.page.add_menu_item(menu_item[\"label\"], menu_item[\"action\"]);\n\t\t\t}\n\t\t});\n\t}\n};\n\n\n\n\n\n\n\n\n", "\n\tfrappe.templates['listing'] = `<div class=\"frappe-list\">\n\t<div class=\"list-filters\" style=\"display: none;\">\n\t</div>\n\n\t<div style=\"margin-bottom:9px\" class=\"list-toolbar-wrapper hide\">\n\t\t<div class=\"list-toolbar btn-group\" style=\"display:inline-block; margin-right: 10px;\">\n\t\t</div>\n\t</div>\n    <div style=\"clear:both\"></div>\n\t<div class=\"no-result text-center\" style=\"display: none;\">\n\t\t{%= no_result_message %}\n\t</div>\n\t<div class=\"result\">\n\t\t<div class=\"list-headers\"></div>\n        <div class=\"list-loading text-center\">\n        \t{%= frappe.messages.get_waiting_message(__(\"Loading\") + \"...\" ) %}\n        </div>\n\t\t<div class=\"result-list\"></div>\n\t</div>\n\t<div class=\"list-paging-area\">\n\t\t<div class=\"row\">\n\t\t\t<div class=\"col-xs-6\">\n\t\t\t\t<div class=\"btn-group btn-group-paging\">\n\t\t\t\t\t<button type=\"button\" class=\"btn btn-default btn-sm btn-info\" data-value=\"20\">20</button>\n\t\t\t\t\t<button type=\"button\" class=\"btn btn-default btn-sm\" data-value=\"100\">100</button>\n\t\t\t\t\t<button type=\"button\" class=\"btn btn-default btn-sm\" data-value=\"500\">500</button>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t\t<div class=\"col-xs-6 text-right\">\n\t\t\t\t<button class=\"btn btn-default btn-more btn-sm\">{%= _more %}...</button>\n\t\t\t</div>\n\t\t</div>\n\t</div>\n</div>\n`;\n", "// Copyright (c) 2015, Frappe Technologies Pvt. Ltd. and Contributors\n\nfrappe.has_indicator = function(doctype) {\n\t// returns true if indicator is present\n\tif(frappe.model.is_submittable(doctype)) {\n\t\treturn true;\n\t} else if((frappe.listview_settings[doctype] || {}).get_indicator\n\t\t|| frappe.workflow.get_state_fieldname(doctype)) {\n\t\treturn true;\n\t} else if(frappe.meta.has_field(doctype, 'enabled')\n\t\t|| frappe.meta.has_field(doctype, 'disabled')) {\n\t\treturn true;\n\t} else if (frappe.meta.has_field(doctype, 'status') && frappe.get_meta(doctype).states.length) {\n\t\treturn true;\n\t}\n\treturn false;\n}\n\nfrappe.get_indicator = function(doc, doctype) {\n\tif(doc.__unsaved) {\n\t\treturn [__(\"Not Saved\"), \"orange\"];\n\t}\n\n\tif(!doctype) doctype = doc.doctype;\n\n\tlet meta = frappe.get_meta(doctype);\n\tvar workflow = frappe.workflow.workflows[doctype];\n\tvar without_workflow = workflow ? workflow['override_status'] : true;\n\n\tvar settings = frappe.listview_settings[doctype] || {};\n\n\tvar is_submittable = frappe.model.is_submittable(doctype),\n\t\tworkflow_fieldname = frappe.workflow.get_state_fieldname(doctype);\n\n\t// workflow\n\tif(workflow_fieldname && !without_workflow) {\n\t\tvar value = doc[workflow_fieldname];\n\t\tif(value) {\n\t\t\tvar colour = \"\";\n\n\t\t\tif(locals[\"Workflow State\"][value] && locals[\"Workflow State\"][value].style) {\n\t\t\t\tvar colour = {\n\t\t\t\t\t\"Success\": \"green\",\n\t\t\t\t\t\"Warning\": \"orange\",\n\t\t\t\t\t\"Danger\": \"red\",\n\t\t\t\t\t\"Primary\": \"blue\",\n\t\t\t\t\t\"Inverse\": \"black\",\n\t\t\t\t\t\"Info\": \"light-blue\",\n\t\t\t\t}[locals[\"Workflow State\"][value].style];\n\t\t\t}\n\t\t\tif (!colour) colour = \"gray\";\n\n\t\t\treturn [__(value), colour, workflow_fieldname + ',=,' + value];\n\t\t}\n\t}\n\n\t// draft if document is submittable\n\tif(is_submittable && doc.docstatus==0 && !settings.has_indicator_for_draft) {\n\t\treturn [__(\"Draft\"), \"red\", \"docstatus,=,0\"];\n\t}\n\n\t// cancelled\n\tif(is_submittable && doc.docstatus==2 && !settings.has_indicator_for_cancelled) {\n\t\treturn [__(\"Cancelled\"), \"red\", \"docstatus,=,2\"];\n\t}\n\n\t// based on document state\n\tif (doc.status && meta && meta.states && meta.states.find(d => d.title === doc.status)) {\n\t\tlet state = meta.states.find(d => d.title === doc.status);\n\t\tlet color_class = frappe.scrub(state.color, '-');\n\t\treturn [__(doc.status), color_class, \"status,=,\" + doc.status];\n\t}\n\n\tif(settings.get_indicator) {\n\t\tvar indicator = settings.get_indicator(doc);\n\t\tif(indicator) return indicator;\n\t}\n\n\t// if submittable\n\tif(is_submittable && doc.docstatus==1) {\n\t\treturn [__(\"Submitted\"), \"blue\", \"docstatus,=,1\"];\n\t}\n\n\t// based on status\n\tif(doc.status) {\n\t\treturn [__(doc.status), frappe.utils.guess_colour(doc.status)];\n\t}\n\n\t// based on enabled\n\tif(frappe.meta.has_field(doctype, 'enabled')) {\n\t\tif(doc.enabled) {\n\t\t\treturn [__('Enabled'), 'blue', 'enabled,=,1'];\n\t\t} else {\n\t\t\treturn [__('Disabled'), 'grey', 'enabled,=,0'];\n\t\t}\n\t}\n\n\t// based on disabled\n\tif(frappe.meta.has_field(doctype, 'disabled')) {\n\t\tif(doc.disabled) {\n\t\t\treturn [__('Disabled'), 'grey', 'disabled,=,1'];\n\t\t} else {\n\t\t\treturn [__('Enabled'), 'blue', 'disabled,=,0'];\n\t\t}\n\t}\n}\n", "frappe.ui.Filter = class {\n\tconstructor(opts) {\n\t\t$.extend(this, opts);\n\t\tif (this.value === null || this.value === undefined) {\n\t\t\tthis.value = '';\n\t\t}\n\n\t\tthis.utils = frappe.ui.filter_utils;\n\t\tthis.set_conditions();\n\t\tthis.set_conditions_from_config();\n\t\tthis.make();\n\t}\n\n\tset_conditions() {\n\t\tthis.conditions = [\n\t\t\t['=', __('Equals')],\n\t\t\t['!=', __('Not Equals')],\n\t\t\t['like', __('Like')],\n\t\t\t['not like', __('Not Like')],\n\t\t\t['in', __('In')],\n\t\t\t['not in', __('Not In')],\n\t\t\t['is', __('Is')],\n\t\t\t['>', '>'],\n\t\t\t['<', '<'],\n\t\t\t['>=', '>='],\n\t\t\t['<=', '<='],\n\t\t\t['Between', __('Between')],\n\t\t\t['Timespan', __('Timespan')],\n\t\t];\n\n\t\tthis.nested_set_conditions = [\n\t\t\t['descendants of', __('Descendants Of')],\n\t\t\t['not descendants of', __('Not Descendants Of')],\n\t\t\t['ancestors of', __('Ancestors Of')],\n\t\t\t['not ancestors of', __('Not Ancestors Of')],\n\t\t];\n\n\t\tthis.conditions.push(...this.nested_set_conditions);\n\n\t\tthis.invalid_condition_map = {\n\t\t\tDate: ['like', 'not like'],\n\t\t\tDatetime: ['like', 'not like'],\n\t\t\tData: ['Between', 'Timespan'],\n\t\t\tSelect: ['like', 'not like', 'Between', 'Timespan'],\n\t\t\tLink: ['Between', 'Timespan', '>', '<', '>=', '<='],\n\t\t\tCurrency: ['Between', 'Timespan'],\n\t\t\tColor: ['Between', 'Timespan'],\n\t\t\tCheck: this.conditions.map((c) => c[0]).filter((c) => c !== '='),\n\t\t};\n\t}\n\n\tset_conditions_from_config() {\n\t\tif (frappe.boot.additional_filters_config) {\n\t\t\tthis.filters_config = frappe.boot.additional_filters_config;\n\t\t\tfor (let key of Object.keys(this.filters_config)) {\n\t\t\t\tconst filter = this.filters_config[key];\n\t\t\t\tthis.conditions.push([key, __(filter.label)]);\n\t\t\t\tfor (let fieldtype of Object.keys(this.invalid_condition_map)) {\n\t\t\t\t\tif (!filter.valid_for_fieldtypes.includes(fieldtype)) {\n\t\t\t\t\t\tthis.invalid_condition_map[fieldtype].push(key);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\tmake() {\n\t\tthis.filter_edit_area = $(\n\t\t\tfrappe.render_template('edit_filter', {\n\t\t\t\tconditions: this.conditions,\n\t\t\t})\n\t\t);\n\t\tthis.parent && this.filter_edit_area.appendTo(this.parent.find('.filter-edit-area'));\n\t\tthis.make_select();\n\t\tthis.set_events();\n\t\tthis.setup();\n\t}\n\n\tmake_select() {\n\t\tthis.fieldselect = new frappe.ui.FieldSelect({\n\t\t\tparent: this.filter_edit_area.find('.fieldname-select-area'),\n\t\t\tdoctype: this.parent_doctype,\n\t\t\tparent_doctype: this._parent_doctype,\n\t\t\tfilter_fields: this.filter_fields,\n\t\t\tinput_class: 'input-xs',\n\t\t\tselect: (doctype, fieldname) => {\n\t\t\t\tthis.set_field(doctype, fieldname);\n\t\t\t},\n\t\t});\n\n\t\tif (this.fieldname) {\n\t\t\tthis.fieldselect.set_value(this.doctype, this.fieldname);\n\t\t}\n\t}\n\n\tset_events() {\n\t\tthis.filter_edit_area.find('.remove-filter').on('click', () => {\n\t\t\tthis.remove();\n\t\t\tthis.on_change();\n\t\t});\n\n\t\tthis.filter_edit_area.find('.condition').change(() => {\n\t\t\tif (!this.field) return;\n\n\t\t\tlet condition = this.get_condition();\n\t\t\tlet fieldtype = null;\n\n\t\t\tif (['in', 'like', 'not in', 'not like'].includes(condition)) {\n\t\t\t\tfieldtype = 'Data';\n\t\t\t\tthis.add_condition_help(condition);\n\t\t\t} else {\n\t\t\t\tthis.filter_edit_area.find('.filter-description').empty();\n\t\t\t}\n\n\t\t\tif (\n\t\t\t\t['Select', 'MultiSelect'].includes(this.field.df.fieldtype) &&\n\t\t\t\t['in', 'not in'].includes(condition)\n\t\t\t) {\n\t\t\t\tfieldtype = 'MultiSelect';\n\t\t\t}\n\n\t\t\tthis.set_field(\n\t\t\t\tthis.field.df.parent,\n\t\t\t\tthis.field.df.fieldname,\n\t\t\t\tfieldtype,\n\t\t\t\tcondition\n\t\t\t);\n\t\t});\n\t}\n\n\tsetup() {\n\t\tconst fieldname = this.fieldname || 'name';\n\t\t// set the field\n\t\treturn this.set_values(this.doctype, fieldname, this.condition, this.value);\n\t}\n\n\tsetup_state(is_new) {\n\t\tlet promise = Promise.resolve();\n\t\tif (is_new) {\n\t\t\tthis.filter_edit_area.addClass('new-filter');\n\t\t} else {\n\t\t\tpromise = this.update_filter_tag();\n\t\t}\n\n\t\tif (this.hidden) {\n\t\t\tpromise.then(() => this.$filter_tag.hide());\n\t\t}\n\t}\n\n\tfreeze() {\n\t\tthis.update_filter_tag();\n\t}\n\n\tupdate_filter_tag() {\n\t\tif (this._filter_value_set) {\n\t\t\treturn this._filter_value_set.then(() => {\n\t\t\t\t!this.$filter_tag ? this.make_tag() : this.set_filter_button_text();\n\t\t\t\tthis.filter_edit_area.hide();\n\t\t\t});\n\t\t} else {\n\t\t\treturn Promise.resolve();\n\t\t}\n\t}\n\n\tremove() {\n\t\tthis.filter_edit_area.remove();\n\t\tthis.field = null;\n\t\t// this.on_change(true);\n\t}\n\n\tset_values(doctype, fieldname, condition, value) {\n\t\t// presents given (could be via tags!)\n\t\tif (this.set_field(doctype, fieldname) === false) {\n\t\t\treturn;\n\t\t}\n\n\t\tif (this.field.df.original_type === 'Check') {\n\t\t\tvalue = value == 1 ? 'Yes' : 'No';\n\t\t}\n\t\tif (condition) this.set_condition(condition, true);\n\n\t\t// set value can be asynchronous, so update_filter_tag should happen after field is set\n\t\tthis._filter_value_set = Promise.resolve();\n\n\t\tif (['in', 'not in'].includes(condition) && Array.isArray(value)) {\n\t\t\tvalue = value.join(',');\n\t\t}\n\n\t\tif (Array.isArray(value)) {\n\t\t\tthis._filter_value_set = this.field.set_value(value);\n\t\t} else if (value !== undefined || value !== null) {\n\t\t\tthis._filter_value_set = this.field.set_value((value + '').trim());\n\t\t}\n\t\treturn this._filter_value_set;\n\t}\n\n\tset_field(doctype, fieldname, fieldtype, condition) {\n\t\t// set in fieldname (again)\n\t\tlet cur = {};\n\t\tif (this.field) for (let k in this.field.df) cur[k] = this.field.df[k];\n\n\t\tlet original_docfield = (this.fieldselect.fields_by_name[doctype] || {})[\n\t\t\tfieldname\n\t\t];\n\n\t\tif (!original_docfield) {\n\t\t\tconsole.warn(`Field ${fieldname} is not selectable.`);\n\t\t\tthis.remove();\n\t\t\treturn false;\n\t\t}\n\n\t\tlet df = copy_dict(original_docfield);\n\n\t\t// filter field shouldn't be read only or hidden\n\t\tdf.read_only = 0;\n\t\tdf.hidden = 0;\n\t\tdf.is_filter = true;\n\t\tdelete df.hidden_due_to_dependency;\n\n\t\tlet c = condition ? condition : this.utils.get_default_condition(df);\n\t\tthis.set_condition(c);\n\n\t\tthis.utils.set_fieldtype(df, fieldtype, this.get_condition());\n\n\t\t// called when condition is changed,\n\t\t// don't change if all is well\n\t\tif (\n\t\t\tthis.field &&\n\t\t\tcur.fieldname == fieldname &&\n\t\t\tdf.fieldtype == cur.fieldtype &&\n\t\t\tdf.parent == cur.parent &&\n\t\t\tdf.options == cur.options\n\t\t) {\n\t\t\treturn;\n\t\t}\n\n\t\t// clear field area and make field\n\t\tthis.fieldselect.selected_doctype = doctype;\n\t\tthis.fieldselect.selected_fieldname = fieldname;\n\n\t\tif (\n\t\t\tthis.filters_config &&\n\t\t\tthis.filters_config[condition] &&\n\t\t\tthis.filters_config[condition].valid_for_fieldtypes.includes(df.fieldtype)\n\t\t) {\n\t\t\tlet args = {};\n\t\t\tif (this.filters_config[condition].depends_on) {\n\t\t\t\tconst field_name = this.filters_config[condition].depends_on;\n\t\t\t\tconst filter_value = this.filter_list.get_filter_value(fieldname);\n\t\t\t\targs[field_name] = filter_value;\n\t\t\t}\n\t\t\tlet setup_field = (field) => {\n\t\t\t\tdf.fieldtype = field.fieldtype;\n\t\t\t\tdf.options = field.options;\n\t\t\t\tdf.fieldname = fieldname;\n\t\t\t\tthis.make_field(df, cur.fieldtype);\n\t\t\t}\n\t\t\tif (this.filters_config[condition].data) {\n\t\t\t\tlet field = this.filters_config[condition].data;\n\t\t\t\tsetup_field(field);\n\t\t\t} else {\n\t\t\t\tfrappe.xcall(this.filters_config[condition].get_field, args).then(field => {\n\t\t\t\t\tthis.filters_config[condition].data = field;\n\t\t\t\t\tsetup_field(field);\n\t\t\t\t});\n\t\t\t}\n\t\t} else {\n\t\t\tthis.make_field(df, cur.fieldtype);\n\t\t}\n\t}\n\n\tmake_field(df, old_fieldtype) {\n\t\tlet old_text = this.field ? this.field.get_value() : null;\n\t\tthis.hide_invalid_conditions(df.fieldtype, df.original_type);\n\t\tthis.toggle_nested_set_conditions(df);\n\t\tlet field_area = this.filter_edit_area\n\t\t\t.find('.filter-field')\n\t\t\t.empty()\n\t\t\t.get(0);\n\t\tdf.input_class = 'input-xs';\n\t\tlet f = frappe.ui.form.make_control({\n\t\t\tdf: df,\n\t\t\tparent: field_area,\n\t\t\tonly_input: true,\n\t\t});\n\t\tf.refresh();\n\n\t\tthis.field = f;\n\t\tif (old_text && f.fieldtype === old_fieldtype) {\n\t\t\tthis.field.set_value(old_text);\n\t\t}\n\n\t\tthis.bind_filter_field_events();\n\t}\n\n\tbind_filter_field_events() {\n\t\t// Apply filter on input focus out\n\t\tthis.field.$input.on('focusout', () => this.on_change());\n\n\t\t// run on enter\n\t\t$(this.field.wrapper)\n\t\t\t.find(':input')\n\t\t\t.keydown(e => {\n\t\t\t\tif (e.which == 13 && this.field.df.fieldtype !== 'MultiSelect') {\n\t\t\t\t\tthis.on_change();\n\t\t\t\t}\n\t\t\t});\n\t}\n\n\tget_value() {\n\t\treturn [\n\t\t\tthis.fieldselect.selected_doctype,\n\t\t\tthis.field.df.fieldname,\n\t\t\tthis.get_condition(),\n\t\t\tthis.get_selected_value(),\n\t\t\tthis.hidden,\n\t\t];\n\t}\n\n\tget_selected_value() {\n\t\treturn this.utils.get_selected_value(this.field, this.get_condition());\n\t}\n\n\tget_selected_label() {\n\t\treturn this.utils.get_selected_label(this.field);\n\t}\n\n\tget_condition() {\n\t\treturn this.filter_edit_area.find('.condition').val();\n\t}\n\n\tset_condition(condition, trigger_change = false) {\n\t\tlet $condition_field = this.filter_edit_area.find('.condition');\n\t\t$condition_field.val(condition);\n\t\tif (trigger_change) $condition_field.change();\n\t}\n\n\tadd_condition_help(condition) {\n\t\tconst description = ['in', 'not in'].includes(condition)\n\t\t\t? __('values separated by commas')\n\t\t\t: __('use % as wildcard');\n\n\t\tthis.filter_edit_area.find('.filter-description').html(description);\n\t}\n\n\tmake_tag() {\n\t\tif (!this.field) return;\n\t\tthis.$filter_tag = this.get_filter_tag_element().insertAfter(\n\t\t\tthis.parent.find('.active-tag-filters .clear-filters')\n\t\t);\n\t\tthis.set_filter_button_text();\n\t\tthis.bind_tag();\n\t}\n\n\tbind_tag() {\n\t\tthis.$filter_tag.find('.remove-filter').on('click', this.remove.bind(this));\n\n\t\tlet filter_button = this.$filter_tag.find('.toggle-filter');\n\t\tfilter_button.on('click', () => {\n\t\t\tfilter_button\n\t\t\t\t.closest('.tag-filters-area')\n\t\t\t\t.find('.filter-edit-area')\n\t\t\t\t.show();\n\t\t\tthis.filter_edit_area.toggle();\n\t\t});\n\t}\n\n\tset_filter_button_text() {\n\t\tthis.$filter_tag.find('.toggle-filter').html(this.get_filter_button_text());\n\t}\n\n\tget_filter_button_text() {\n\t\tlet value = this.utils.get_formatted_value(\n\t\t\tthis.field,\n\t\t\tthis.get_selected_label() || this.get_selected_value()\n\t\t);\n\t\treturn `${__(this.field.df.label)} ${__(this.get_condition())} ${__(\n\t\t\tvalue\n\t\t)}`;\n\t}\n\n\tget_filter_tag_element() {\n\t\treturn $(`<div class=\"filter-tag btn-group\">\n\t\t\t<button class=\"btn btn-default btn-xs toggle-filter\"\n\t\t\t\ttitle=\"${__('Edit Filter')}\">\n\t\t\t</button>\n\t\t\t<button class=\"btn btn-default btn-xs remove-filter\"\n\t\t\t\ttitle=\"${__('Remove Filter')}\">\n\t\t\t\t${frappe.utils.icon('close')}\n\t\t\t</button>\n\t\t</div>`);\n\t}\n\n\thide_invalid_conditions(fieldtype, original_type) {\n\t\tlet invalid_conditions =\n\t\t\tthis.invalid_condition_map[original_type] ||\n\t\t\tthis.invalid_condition_map[fieldtype] ||\n\t\t\t[];\n\n\t\tfor (let condition of this.conditions) {\n\t\t\tthis.filter_edit_area\n\t\t\t\t.find(`.condition option[value=\"${condition[0]}\"]`)\n\t\t\t\t.toggle(!invalid_conditions.includes(condition[0]));\n\t\t}\n\t}\n\n\ttoggle_nested_set_conditions(df) {\n\t\tlet show_condition =\n\t\t\tdf.fieldtype === 'Link' &&\n\t\t\tfrappe.boot.nested_set_doctypes.includes(df.options);\n\t\tthis.nested_set_conditions.forEach((condition) => {\n\t\t\tthis.filter_edit_area\n\t\t\t\t.find(`.condition option[value=\"${condition[0]}\"]`)\n\t\t\t\t.toggle(show_condition);\n\t\t});\n\t}\n};\n\nfrappe.ui.filter_utils = {\n\tget_formatted_value(field, value) {\n\t\tif (field.df.fieldname === 'docstatus') {\n\t\t\tvalue = { 0: 'Draft', 1: 'Submitted', 2: 'Cancelled' }[value] || value;\n\t\t} else if (field.df.original_type === 'Check') {\n\t\t\tvalue = { 0: 'No', 1: 'Yes' }[cint(value)];\n\t\t}\n\t\treturn frappe.format(value, field.df, { only_value: 1 });\n\t},\n\n\tget_selected_value(field, condition) {\n\t\tif (!field) return;\n\n\t\tlet val = field.get_value();\n\n\t\tif (typeof val === 'string') {\n\t\t\tval = strip(val);\n\t\t}\n\n\t\tif (condition == 'is' && !val) {\n\t\t\tval = field.df.options[0].value;\n\t\t}\n\n\t\tif (field.df.original_type == 'Check') {\n\t\t\tval = val == 'Yes' ? 1 : 0;\n\t\t}\n\n\t\tif (['like', 'not like'].includes(condition)) {\n\t\t\t// automatically append wildcards\n\t\t\tif (val && !(val.startsWith('%') || val.endsWith('%'))) {\n\t\t\t\tval = '%' + val + '%';\n\t\t\t}\n\t\t} else if (['in', 'not in'].includes(condition)) {\n\t\t\tif (val) {\n\t\t\t\tval = val.split(',').map((v) => strip(v));\n\t\t\t}\n\t\t} else if (frappe.boot.additional_filters_config[condition]) {\n\t\t\tval = field.value || val;\n\t\t}\n\t\tif (val === '%') {\n\t\t\tval = '';\n\t\t}\n\n\t\treturn val;\n\t},\n\n\tget_selected_label(field) {\n\t\tif (in_list([\"Link\", \"Dynamic Link\"], field.df.fieldtype)) {\n\t\t\treturn field.get_label_value();\n\t\t}\n\t},\n\n\tget_default_condition(df) {\n\t\tif (df.fieldtype == 'Data') {\n\t\t\treturn 'like';\n\t\t} else if (df.fieldtype == 'Date' || df.fieldtype == 'Datetime') {\n\t\t\treturn 'Between';\n\t\t} else {\n\t\t\treturn '=';\n\t\t}\n\t},\n\n\tset_fieldtype(df, fieldtype, condition) {\n\t\t// reset\n\t\tif (df.original_type) df.fieldtype = df.original_type;\n\t\telse df.original_type = df.fieldtype;\n\n\t\tdf.description = '';\n\t\tdf.reqd = 0;\n\t\tdf.ignore_link_validation = true;\n\n\t\t// given\n\t\tif (fieldtype) {\n\t\t\tdf.fieldtype = fieldtype;\n\t\t\treturn;\n\t\t}\n\n\t\t// scrub\n\t\tif (df.fieldname == 'docstatus') {\n\t\t\tdf.fieldtype = 'Select';\n\t\t\tdf.options = [\n\t\t\t\t{ value: 0, label: __('Draft') },\n\t\t\t\t{ value: 1, label: __('Submitted') },\n\t\t\t\t{ value: 2, label: __('Cancelled') },\n\t\t\t];\n\t\t} else if (df.fieldtype == 'Check') {\n\t\t\tdf.fieldtype = 'Select';\n\t\t\tdf.options = 'No\\nYes';\n\t\t} else if (\n\t\t\t[\n\t\t\t\t'Text',\n\t\t\t\t'Small Text',\n\t\t\t\t'Text Editor',\n\t\t\t\t'Code',\n\t\t\t\t'Markdown Editor',\n\t\t\t\t'HTML Editor',\n\t\t\t\t'Tag',\n\t\t\t\t'Comments',\n\t\t\t\t'Dynamic Link',\n\t\t\t\t'Read Only',\n\t\t\t\t'Assign',\n\t\t\t\t'Color',\n\t\t\t].indexOf(df.fieldtype) != -1\n\t\t) {\n\t\t\tdf.fieldtype = 'Data';\n\t\t} else if (\n\t\t\tdf.fieldtype == 'Link' &&\n\t\t\t[\n\t\t\t\t'=',\n\t\t\t\t'!=',\n\t\t\t\t'descendants of',\n\t\t\t\t'ancestors of',\n\t\t\t\t'not descendants of',\n\t\t\t\t'not ancestors of',\n\t\t\t].indexOf(condition) == -1\n\t\t) {\n\t\t\tdf.fieldtype = 'Data';\n\t\t}\n\t\tif (\n\t\t\tdf.fieldtype === 'Data' &&\n\t\t\t(df.options || '').toLowerCase() === 'email'\n\t\t) {\n\t\t\tdf.options = null;\n\t\t}\n\t\tif (\n\t\t\tcondition == 'Between' &&\n\t\t\t(df.fieldtype == 'Date' || df.fieldtype == 'Datetime')\n\t\t) {\n\t\t\tdf.fieldtype = 'DateRange';\n\t\t}\n\t\tif (\n\t\t\tcondition == 'Timespan' &&\n\t\t\t['Date', 'Datetime', 'DateRange', 'Select'].includes(df.fieldtype)\n\t\t) {\n\t\t\tdf.fieldtype = 'Select';\n\t\t\tdf.options = this.get_timespan_options(['Last', 'Yesterday', 'Today', 'Tomorrow', 'This', 'Next']);\n\t\t}\n\t\tif (condition === 'is') {\n\t\t\tdf.fieldtype = 'Select';\n\t\t\tdf.options = [\n\t\t\t\t{ label: __('Set', null, 'Field value is set'), value: 'set' },\n\t\t\t\t{ label: __('Not Set', null, 'Field value is not set'), value: 'not set' },\n\t\t\t];\n\t\t}\n\t\treturn;\n\t},\n\n\tget_timespan_options(periods) {\n\t\tconst period_map = {\n\t\t\tLast: ['Week', 'Month', 'Quarter', '6 months', 'Year'],\n\t\t\tThis: ['Week', 'Month', 'Quarter', 'Year'],\n\t\t\tNext: ['Week', 'Month', 'Quarter', '6 months', 'Year'],\n\t\t};\n\t\tlet options = [];\n\t\tperiods.forEach((period) => {\n\t\t\tif (period_map[period]) {\n\t\t\t\tperiod_map[period].forEach((p) => {\n\t\t\t\t\toptions.push({\n\t\t\t\t\t\tlabel: `${period} ${p}`,\n\t\t\t\t\t\tvalue: `${period.toLowerCase()} ${p.toLowerCase()}`,\n\t\t\t\t\t});\n\t\t\t\t});\n\t\t\t} else {\n\t\t\t\toptions.push({\n\t\t\t\t\tlabel: __(period),\n\t\t\t\t\tvalue: `${period.toLowerCase()}`,\n\t\t\t\t});\n\t\t\t}\n\t\t});\n\t\treturn options;\n\t},\n};\n", "frappe.ui.FilterGroup = class {\n\tconstructor(opts) {\n\t\t$.extend(this, opts);\n\t\tthis.filters = [];\n\t\twindow.fltr = this;\n\t\tif (!this.filter_button) {\n\t\t\tthis.wrapper = this.parent;\n\t\t\tthis.wrapper.append(this.get_filter_area_template());\n\t\t\tthis.set_filter_events();\n\t\t} else {\n\t\t\tthis.make_popover();\n\t\t}\n\t}\n\n\tmake_popover() {\n\t\tthis.init_filter_popover();\n\t\tthis.set_popover_events();\n\t}\n\n\tinit_filter_popover() {\n\t\tthis.filter_button.popover({\n\t\t\tcontent: this.get_filter_area_template(),\n\t\t\ttemplate: `\n\t\t\t\t<div class=\"filter-popover popover\">\n\t\t\t\t\t<div class=\"arrow\"></div>\n\t\t\t\t\t<div class=\"popover-body popover-content\">\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t`,\n\t\t\thtml: true,\n\t\t\ttrigger: 'manual',\n\t\t\tcontainer: 'body',\n\t\t\tplacement: 'bottom',\n\t\t\toffset: '-100px 0'\n\t\t});\n\t}\n\n\ttoggle_empty_filters(show) {\n\t\tthis.wrapper &&\n\t\t\tthis.wrapper.find('.empty-filters').toggle(show);\n\t}\n\n\tset_popover_events() {\n\t\t$(document.body).on('click', (e) => {\n\t\t\tif (this.wrapper && this.wrapper.is(':visible')) {\n\t\t\t\tconst in_datepicker = $(e.target).is('.datepicker--cell')\n\t\t\t\t\t|| $(e.target).closest('.datepicker--nav-title').length !== 0\n\t\t\t\t\t|| $(e.target).parents('.datepicker--nav-action').length !== 0;\n\n\t\t\t\tif (\n\t\t\t\t\t$(e.target).parents('.filter-popover').length === 0\n\t\t\t\t\t&& $(e.target).parents('.filter-box').length === 0\n\t\t\t\t\t&& this.filter_button.find($(e.target)).length === 0\n\t\t\t\t\t&& !$(e.target).is(this.filter_button)\n\t\t\t\t\t&& !in_datepicker\n\t\t\t\t) {\n\t\t\t\t\tthis.wrapper && this.filter_button.popover('hide');\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\n\t\tthis.filter_button.on('click', () => {\n\t\t\tthis.filter_button.popover('toggle');\n\t\t});\n\n\t\tthis.filter_button.on('shown.bs.popover', () => {\n\t\t\tlet hide_empty_filters = this.filters && this.filters.length > 0;\n\n\t\t\tif (!this.wrapper) {\n\t\t\t\tthis.wrapper = $('.filter-popover');\n\t\t\t\tif (hide_empty_filters) {\n\t\t\t\t\tthis.toggle_empty_filters(false);\n\t\t\t\t\tthis.add_filters_to_popover(this.filters);\n\t\t\t\t}\n\t\t\t\tthis.set_filter_events();\n\t\t\t}\n\t\t\tthis.toggle_empty_filters(false);\n\t\t\t!hide_empty_filters && this.add_filter(this.doctype, 'name');\n\t\t});\n\n\t\tthis.filter_button.on('hidden.bs.popover', () => {\n\t\t\tthis.apply();\n\t\t});\n\n\t\t// REDESIGN-TODO: (Temporary) Review and find best solution for this\n\t\tfrappe.router.on('change', () => {\n\t\t\tif (this.wrapper && this.wrapper.is(':visible')) {\n\t\t\t\tthis.filter_button.popover('hide');\n\t\t\t}\n\t\t});\n\t}\n\n\tadd_filters_to_popover(filters) {\n\t\tfilters.forEach(filter => {\n\t\t\tfilter.parent = this.wrapper;\n\t\t\tfilter.field = null;\n\t\t\tfilter.make();\n\t\t});\n\t}\n\n\tapply() {\n\t\tthis.update_filters();\n\t\tthis.on_change();\n\t}\n\n\tupdate_filter_button() {\n\t\tconst filters_applied = this.filters.length > 0;\n\t\tconst button_label = filters_applied\n\t\t\t? this.filters.length > 1\n\t\t\t\t? __(\"{0} filters\", [this.filters.length])\n\t\t\t\t: __(\"{0} filter\", [this.filters.length])\n\t\t\t: __('Filter');\n\n\n\t\tthis.filter_button\n\t\t\t.toggleClass('btn-default', !filters_applied)\n\t\t\t.toggleClass('btn-primary-light', filters_applied);\n\n\t\tthis.filter_button.find('.filter-icon')\n\t\t\t.toggleClass('active', filters_applied);\n\n\t\tthis.filter_button.find('.button-label').html(button_label);\n\t}\n\n\tset_filter_events() {\n\t\tthis.wrapper.find('.add-filter').on('click', () => {\n\t\t\tthis.toggle_empty_filters(false);\n\t\t\tthis.add_filter(this.doctype, 'name');\n\t\t});\n\n\t\tthis.wrapper.find('.clear-filters').on('click', () => {\n\t\t\tthis.toggle_empty_filters(true);\n\t\t\tthis.clear_filters();\n\t\t\tthis.on_change();\n\t\t});\n\n\t\tthis.wrapper.find('.apply-filters').on('click', () => {\n\t\t\tthis.filter_button.popover('hide');\n\t\t});\n\t}\n\n\tadd_filters(filters) {\n\t\tlet promises = [];\n\n\t\tfor (const filter of filters) {\n\t\t\tpromises.push(() => this.add_filter(...filter));\n\t\t}\n\n\t\treturn frappe.run_serially(promises).then(() => this.update_filters());\n\t}\n\n\tadd_filter(doctype, fieldname, condition, value, hidden) {\n\t\tif (!fieldname) return Promise.resolve();\n\t\t// adds a new filter, returns true if filter has been added\n\n\t\t// {}: Add in page filter by fieldname if exists ('=' => 'like')\n\n\t\tif (!this.validate_args(doctype, fieldname)) return false;\n\t\tconst is_new_filter = arguments.length < 2;\n\t\tif (is_new_filter && this.wrapper.find('.new-filter:visible').length) {\n\t\t\t// only allow 1 new filter at a time!\n\t\t\treturn Promise.resolve();\n\t\t} else {\n\t\t\tlet args = [doctype, fieldname, condition, value, hidden];\n\t\t\tconst promise = this.push_new_filter(args, is_new_filter);\n\t\t\treturn (promise && promise.then) ? promise : Promise.resolve();\n\t\t}\n\t}\n\n\tvalidate_args(doctype, fieldname) {\n\t\tif (doctype && fieldname\n\t\t\t&& !frappe.meta.has_field(doctype, fieldname)\n\t\t\t&& frappe.model.is_non_std_field(fieldname)) {\n\n\t\t\tfrappe.msgprint({\n\t\t\t\tmessage: __('Invalid filter: {0}', [fieldname.bold()]),\n\t\t\t\tindicator: 'red',\n\t\t\t});\n\n\t\t\treturn false;\n\t\t}\n\t\treturn true;\n\t}\n\n\tpush_new_filter(args) {\n\t\t// args: [doctype, fieldname, condition, value]\n\t\tif (this.filter_exists(args)) return;\n\n\t\t// {}: Clear page filter fieldname field\n\n\t\tlet filter = this._push_new_filter(...args);\n\n\t\tif (filter && filter.value) {\n\t\t\t// filter.setup_state(is_new_filter);\n\t\t\treturn filter._filter_value_set; // internal promise\n\t\t}\n\t}\n\n\t_push_new_filter(doctype, fieldname, condition, value, hidden = false) {\n\t\tlet args = {\n\t\t\tparent: this.wrapper,\n\t\t\tparent_doctype: this.doctype,\n\t\t\tdoctype: doctype,\n\t\t\t_parent_doctype: this.parent_doctype,\n\t\t\tfieldname: fieldname,\n\t\t\tcondition: condition,\n\t\t\tvalue: value,\n\t\t\thidden: hidden,\n\t\t\tindex: this.filters.length + 1,\n\t\t\ton_change: (update) => {\n\t\t\t\tif (update) this.update_filters();\n\t\t\t\tthis.on_change();\n\t\t\t},\n\t\t\tfilter_items: (doctype, fieldname) => {\n\t\t\t\treturn !this.filter_exists([doctype, fieldname]);\n\t\t\t},\n\t\t\tfilter_list: this.base_list || this,\n\t\t};\n\t\tlet filter = new frappe.ui.Filter(args);\n\t\tthis.filters.push(filter);\n\t\treturn filter;\n\t}\n\n\tget_filter_value(fieldname) {\n\t\tlet filter_obj = this.filters.find(f => f.fieldname == fieldname) || {};\n\t\treturn filter_obj.value;\n\t}\n\n\tfilter_exists(filter_value) {\n\t\t// filter_value of form: [doctype, fieldname, condition, value]\n\t\tlet exists = false;\n\t\tthis.filters\n\t\t\t.filter((f) => f.field)\n\t\t\t.map((f) => {\n\t\t\t\tlet f_value = f.get_value();\n\t\t\t\tif (filter_value.length === 2) {\n\t\t\t\t\texists =\n\t\t\t\t\t\tfilter_value[0] === f_value[0] && filter_value[1] === f_value[1];\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tlet value = filter_value[3];\n\t\t\t\tlet equal = frappe.utils.arrays_equal;\n\n\t\t\t\tif (\n\t\t\t\t\tequal(f_value.slice(0, 4), filter_value.slice(0, 4)) ||\n\t\t\t\t\t(Array.isArray(value) && equal(value, f_value[3]))\n\t\t\t\t) {\n\t\t\t\t\texists = true;\n\t\t\t\t}\n\t\t\t});\n\t\treturn exists;\n\t}\n\n\tget_filters() {\n\t\treturn this.filters\n\t\t\t.filter((f) => f.field)\n\t\t\t.map((f) => {\n\t\t\t\treturn f.get_value();\n\t\t\t});\n\t\t// {}: this.list.update_standard_filters(values);\n\t}\n\n\tupdate_filters() {\n\t\t// remove hidden filters and undefined filters\n\t\tconst filter_exists = (f) => ![undefined, null].includes(f.get_selected_value());\n\t\tthis.filters.map(f => !filter_exists(f) && f.remove());\n\t\tthis.filters = this.filters.filter(f => filter_exists(f) && f.field);\n\t\tthis.update_filter_button();\n\t\tthis.filters.length === 0 &&\n\t\t\tthis.toggle_empty_filters(true);\n\t}\n\n\tclear_filters() {\n\t\tthis.filters.map((f) => f.remove(true));\n\t\t// {}: Clear page filters, .date-range-picker (called list run())\n\t\tthis.filters = [];\n\t}\n\n\tget_filter(fieldname) {\n\t\treturn this.filters.filter((f) => {\n\t\t\treturn f.field && f.field.df.fieldname == fieldname;\n\t\t})[0];\n\t}\n\n\tget_filter_area_template() {\n\t\t/* eslint-disable indent */\n\t\treturn $(`\n\t\t\t<div class=\"filter-area\">\n\t\t\t\t<div class=\"filter-edit-area\">\n\t\t\t\t\t<div class=\"text-muted empty-filters text-center\">\n\t\t\t\t\t\t${__('No filters selected')}\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t\t<hr class=\"divider\"></hr>\n\t\t\t\t<div class=\"filter-action-buttons mt-2\">\n\t\t\t\t\t<button class=\"text-muted add-filter btn btn-xs\">\n\t\t\t\t\t\t+ ${__('Add a Filter')}\n\t\t\t\t\t</button>\n\t\t\t\t\t<div>\n\t\t\t\t\t\t<button class=\"btn btn-secondary btn-xs clear-filters\">\n\t\t\t\t\t\t\t${__('Clear Filters')}\n\t\t\t\t\t\t</button>\n\t\t\t\t\t\t${this.filter_button ?\n\t\t\t\t\t\t\t`<button class=\"btn btn-primary btn-xs apply-filters\">\n\t\t\t\t\t\t\t\t${__('Apply Filters')}\n\t\t\t\t\t\t\t</button>`\n\t\t\t\t\t\t\t: ''\n\t\t\t\t\t\t}\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</div>`\n\t\t);\n\t\t/* eslint-disable indent */\n\t}\n\n\tget_filters_as_object() {\n\t\tlet filters = this.get_filters().reduce((acc, filter) => {\n\t\t\treturn Object.assign(acc, {\n\t\t\t\t[filter[1]]: [filter[2], filter[3]],\n\t\t\t});\n\t\t}, {});\n\t\treturn filters;\n\t}\n\n\tadd_filters_to_filter_group(filters) {\n\t\tif (filters && filters.length) {\n\t\t\tthis.toggle_empty_filters(false);\n\t\t\tfilters.forEach((filter) => {\n\t\t\t\tthis.add_filter(filter[0], filter[1], filter[2], filter[3]);\n\t\t\t});\n\t\t}\n\t}\n\n\tadd(filters, refresh = true) {\n\t\tif (!filters || (Array.isArray(filters) && filters.length === 0))\n\t\t\treturn Promise.resolve();\n\n\t\tif (typeof filters[0] === \"string\") {\n\t\t\t// passed in the format of doctype, field, condition, value\n\t\t\tconst filter = Array.from(arguments);\n\t\t\tfilters = [filter];\n\t\t}\n\n\t\tfilters = filters.filter((f) => {\n\t\t\treturn !this.exists(f);\n\t\t});\n\n\t\tconst { non_standard_filters, promise } = this.set_standard_filter(\n\t\t\tfilters\n\t\t);\n\n\t\treturn promise\n\t\t\t.then(() => {\n\t\t\t\treturn (\n\t\t\t\t\tnon_standard_filters.length > 0 &&\n\t\t\t\t\tthis.filter_list.add_filters(non_standard_filters)\n\t\t\t\t);\n\t\t\t})\n\t\t\t.then(() => {\n\t\t\t\trefresh && this.list_view.refresh();\n\t\t\t});\n\t}\n};\n", "// <select> widget with all fields of a doctype as options\nfrappe.ui.FieldSelect = class FieldSelect {\n\t// opts parent, doctype, filter_fields, with_blank, select\n\tconstructor(opts) {\n\t\tvar me = this;\n\t\t$.extend(this, opts);\n\t\tthis.fields_by_name = {};\n\t\tthis.options = [];\n\t\tthis.$input = $('<input class=\"form-control\">')\n\t\t\t.appendTo(this.parent)\n\t\t\t.on(\"click\", function () { $(this).select(); });\n\t\tthis.input_class && this.$input.addClass(this.input_class);\n\t\tthis.select_input = this.$input.get(0);\n\t\tthis.awesomplete = new Awesomplete(this.select_input, {\n\t\t\tminChars: 0,\n\t\t\tmaxItems: 99,\n\t\t\tautoFirst: true,\n\t\t\tlist: me.options,\n\t\t\titem(item) {\n\t\t\t\treturn $(repl('<li class=\"filter-field-select\"><p>%(label)s</p></li>', item))\n\t\t\t\t\t.data(\"item.autocomplete\", item)\n\t\t\t\t\t.get(0);\n\t\t\t}\n\t\t});\n\t\tthis.$input.on(\"awesomplete-select\", function(e) {\n\t\t\tvar o = e.originalEvent;\n\t\t\tvar value = o.text.value;\n\t\t\tvar item = me.awesomplete.get_item(value);\n\t\t\tme.selected_doctype = item.doctype;\n\t\t\tme.selected_fieldname = item.fieldname;\n\t\t\tif(me.select) me.select(item.doctype, item.fieldname);\n\t\t});\n\t\tthis.$input.on(\"awesomplete-selectcomplete\", function(e) {\n\t\t\tvar o = e.originalEvent;\n\t\t\tvar value = o.text.value;\n\t\t\tvar item = me.awesomplete.get_item(value);\n\t\t\tme.$input.val(item.label);\n\t\t});\n\n\t\tif(this.filter_fields) {\n\t\t\tfor(var i in this.filter_fields)\n\t\t\t\tthis.add_field_option(this.filter_fields[i]);\n\t\t} else {\n\t\t\tthis.build_options();\n\t\t}\n\t\tthis.set_value(this.doctype, \"name\");\n\t}\n\tget_value() {\n\t\treturn this.selected_doctype ? this.selected_doctype + \".\" + this.selected_fieldname : null;\n\t}\n\tval(value) {\n\t\tif(value===undefined) {\n\t\t\treturn this.get_value();\n\t\t} else {\n\t\t\tthis.set_value(value);\n\t\t}\n\t}\n\tclear() {\n\t\tthis.selected_doctype = null;\n\t\tthis.selected_fieldname = null;\n\t\tthis.$input.val(\"\");\n\t}\n\tset_value(doctype, fieldname) {\n\t\tvar me = this;\n\t\tthis.clear();\n\t\tif(!doctype) return;\n\n\t\t// old style\n\t\tif(doctype.indexOf(\".\")!==-1) {\n\t\t\tvar parts = doctype.split(\".\");\n\t\t\tdoctype = parts[0];\n\t\t\tfieldname = parts[1];\n\t\t}\n\n\t\t$.each(this.options, function(i, v) {\n\t\t\tif(v.doctype===doctype && v.fieldname===fieldname) {\n\t\t\t\tme.selected_doctype = doctype;\n\t\t\t\tme.selected_fieldname = fieldname;\n\t\t\t\tme.$input.val(v.label);\n\t\t\t\treturn false;\n\t\t\t}\n\t\t});\n\t}\n\tbuild_options() {\n\t\tvar me = this;\n\t\tme.table_fields = [];\n\t\tvar std_filters = $.map(frappe.model.std_fields, function(d) {\n\t\t\tvar opts = {parent: me.doctype};\n\t\t\tif(d.fieldname==\"name\") opts.options = me.doctype;\n\t\t\treturn $.extend(copy_dict(d), opts);\n\t\t});\n\n\t\t// add parenttype column\n\t\tvar doctype_obj = locals['DocType'][me.doctype];\n\t\tif(doctype_obj && cint(doctype_obj.istable)) {\n\t\t\tstd_filters = std_filters.concat([{\n\t\t\t\tfieldname: 'parent',\n\t\t\t\tfieldtype: 'Data',\n\t\t\t\tlabel: 'Parent',\n\t\t\t\tparent: me.doctype,\n\t\t\t}]);\n\t\t}\n\n\t\t// blank\n\t\tif(this.with_blank) {\n\t\t\tthis.options.push({\n\t\t\t\tlabel:\"\",\n\t\t\t\tvalue:\"\",\n\t\t\t});\n\t\t}\n\n\t\t// main table\n\t\tvar main_table_fields = std_filters.concat(frappe.meta.docfield_list[me.doctype]);\n\t\t$.each(frappe.utils.sort(main_table_fields, \"label\", \"string\"), function(i, df) {\n\t\t\tlet doctype = frappe.get_meta(me.doctype).istable && me.parent_doctype ?\n\t\t\t\tme.parent_doctype : me.doctype;\n\n\t\t\t// show fields where user has read access and if report hide flag is not set\n\t\t\tif (frappe.perm.has_perm(doctype, df.permlevel, \"read\"))\n\t\t\t\tme.add_field_option(df);\n\t\t});\n\n\t\t// child tables\n\t\t$.each(me.table_fields, function(i, table_df) {\n\t\t\tif(table_df.options) {\n\t\t\t\tlet child_table_fields = [].concat(frappe.meta.docfield_list[table_df.options]);\n\n\t\t\t\tif (table_df.fieldtype === \"Table MultiSelect\") {\n\t\t\t\t\tconst link_field = frappe.meta.get_docfields(table_df.options)\n\t\t\t\t\t\t.find(df => df.fieldtype === 'Link');\n\t\t\t\t\tchild_table_fields = link_field ? [link_field] : [];\n\t\t\t\t}\n\n\t\t\t\t$.each(frappe.utils.sort(child_table_fields, \"label\", \"string\"), function(i, df) {\n\t\t\t\t\tlet doctype = frappe.get_meta(me.doctype).istable && me.parent_doctype ?\n\t\t\t\t\t\tme.parent_doctype : me.doctype;\n\n\t\t\t\t\t// show fields where user has read access and if report hide flag is not set\n\t\t\t\t\tif (frappe.perm.has_perm(doctype, df.permlevel, \"read\"))\n\t\t\t\t\t\tme.add_field_option(df);\n\t\t\t\t});\n\t\t\t}\n\t\t});\n\t}\n\n\tadd_field_option(df) {\n\t\tlet me = this;\n\n\t\tif (df.fieldname == 'docstatus' && !frappe.model.is_submittable(me.doctype))\n\t\t\treturn;\n\n\t\tif (frappe.model.table_fields.includes(df.fieldtype)) {\n\t\t\tme.table_fields.push(df);\n\t\t\treturn;\n\t\t}\n\n\t\tlet label = null;\n\t\tlet table = null;\n\n\t\tif(me.doctype && df.parent==me.doctype) {\n\t\t\tlabel = __(df.label);\n\t\t\ttable = me.doctype;\n\t\t} else {\n\t\t\tlabel = __(df.label) + ' (' + __(df.parent) + ')';\n\t\t\ttable = df.parent;\n\t\t}\n\n\t\tif(frappe.model.no_value_type.indexOf(df.fieldtype) == -1 &&\n\t\t\t!(me.fields_by_name[df.parent] && me.fields_by_name[df.parent][df.fieldname])) {\n\t\t\tthis.options.push({\n\t\t\t\tlabel: label,\n\t\t\t\tvalue: table + \".\" + df.fieldname,\n\t\t\t\tfieldname: df.fieldname,\n\t\t\t\tdoctype: df.parent\n\t\t\t});\n\t\t\tif(!me.fields_by_name[df.parent]) me.fields_by_name[df.parent] = {};\n\t\t\tme.fields_by_name[df.parent][df.fieldname] = df;\n\t\t}\n\t}\n};\n", "\n\tfrappe.templates['edit_filter'] = `<div class=\"filter-box\">\n\t<div class=\"visible-xs flex justify-flex-end\">\n\t\t<span class=\"remove-filter\">\n\t\t\t{{ __(\"Remove\") }}\n\t\t</span>\n\t</div>\n\t<div class=\"list_filter row\">\n\t\t<div class=\"fieldname-select-area col-sm-4 ui-front form-group\"></div>\n\t\t<div class=\"col-sm-3 form-group\">\n\t\t\t<select class=\"condition form-control input-xs\">\n\t\t\t\t{% for condition in conditions %}\n\t\t\t\t<option value=\"{{condition[0]}}\">{{ condition[1] }}</option>\n\t\t\t\t{% endfor %}\n\t\t\t</select>\n\t\t</div>\n\t\t<div class=\"col-sm-4 form-group\">\n\t\t\t<div class=\"filter-field\"></div>\n\t\t\t<div class=\"text-muted small filter-description\"></div>\n\t\t</div>\n\t\t<div class=\"remove-filter col-sm-1 text-center hidden-xs\">\n\t\t\t<svg class=\"icon icon-sm\">\n\t\t\t\t<use href=\"#icon-close\" class=\"close\"></use>\n\t\t\t</svg>\n\t\t</div>\n\t</div>\n</div>\n`;\n", "// Copyright (c) 2015, Frappe Technologies Pvt. Ltd. and Contributors\n// MIT License. See license.txt\n\nfrappe.ui.Tags = class {\n\tconstructor({\n\t\tparent, placeholder, tagsList,\n\t\tonTagAdd,\n\t\tonTagRemove,\n\t\tonTagClick,\n\t\tonChange\n\t}) {\n\t\tthis.tagsList = tagsList || [];\n\t\tthis.onTagAdd = onTagAdd;\n\t\tthis.onTagRemove = onTagRemove;\n\t\tthis.onTagClick = onTagClick;\n\t\tthis.onChange = onChange;\n\n\t\tthis.setup(parent, placeholder);\n\t}\n\n\tsetup(parent, placeholder) {\n\t\tthis.$ul = parent;\n\t\tthis.$input = $(`<input class=\"tags-input form-control\"></input>`);\n\n\t\tthis.$inputWrapper = this.get_list_element(this.$input);\n\t\tthis.$placeholder = this.get_list_element($(`<span class=\"tags-placeholder text-muted\">${placeholder}</span>`));\n\t\tthis.$inputWrapper.appendTo(this.$ul);\n\t\tthis.$placeholder.appendTo(this.$ul);\n\n\t\tthis.deactivate();\n\t\tthis.bind();\n\t\tthis.boot();\n\t}\n\n\tbind() {\n\t\tconst me = this;\n\t\tconst select_tag = function() {\n\t\t\tconst tagValue = frappe.utils.xss_sanitise(me.$input.val());\n\t\t\tme.addTag(tagValue);\n\t\t\tme.$input.val('');\n\t\t};\n\n\t\tthis.$input.keypress((e) => {\n\t\t\tif (e.which == 13 || e.keyCode == 13) select_tag();\n\t\t});\n\t\tthis.$input.focusout(select_tag);\n\n\t\tthis.$input.on('blur', () => {\n\t\t\tthis.deactivate();\n\t\t});\n\n\t\tthis.$placeholder.on('click', () => {\n\t\t\tthis.activate();\n\t\t\tthis.$input.focus(); // focus only when clicked\n\t\t});\n\t}\n\n\tboot() {\n\t\tthis.addTags(this.tagsList);\n\t}\n\n\tactivate() {\n\t\tthis.$placeholder.hide();\n\t\tthis.$inputWrapper.show();\n\t}\n\n\tdeactivate() {\n\t\tthis.$inputWrapper.hide();\n\t\tthis.$placeholder.show();\n\t}\n\n\taddTag(label) {\n\t\tif (label && label!== '' && !this.tagsList.includes(label)) {\n\t\t\tlet $tag = this.get_tag(label);\n\t\t\tlet row = this.get_list_element($tag, 'form-tag-row');\n\t\t\trow.insertBefore(this.$inputWrapper);\n\t\t\tthis.tagsList.push(label);\n\t\t\tthis.onTagAdd && this.onTagAdd(label);\n\t\t}\n\t}\n\n\tremoveTag(label) {\n\t\tlabel = frappe.utils.xss_sanitise(label);\n\t\tif(this.tagsList.includes(label)) {\n\t\t\tthis.tagsList.splice(this.tagsList.indexOf(label), 1);\n\t\t\tthis.onTagRemove && this.onTagRemove(label);\n\t\t}\n\t}\n\n\taddTags(labels) {\n\t\tlabels.map(this.addTag.bind(this));\n\t}\n\n\tclearTags() {\n\t\tthis.$ul.find('.form-tag-row').remove();\n\t\tthis.tagsList = [];\n\t}\n\n\tget_list_element($element, class_name=\"\") {\n\t\tlet $li = $(`<li class=\"${class_name}\"></li>`);\n\t\t$element.appendTo($li);\n\t\treturn $li;\n\t}\n\n\tget_tag(label) {\n\t\tlet $tag = frappe.get_data_pill(label, label, (target, pill_wrapper) => {\n\t\t\tthis.removeTag(target);\n\t\t\tpill_wrapper.closest('.form-tag-row').remove();\n\t\t});\n\n\t\tif (this.onTagClick) {\n\t\t\t$tag.on('click', '.pill-label', () => {\n\t\t\t\tthis.onTagClick(label);\n\t\t\t});\n\t\t}\n\n\t\treturn $tag;\n\t}\n}\n", "frappe.ui.TagEditor = class TagEditor {\n\tconstructor(opts) {\n\t\t/* docs:\n\t\tArguments\n\n\t\t- parent\n\t\t- user_tags\n\t\t- doctype\n\t\t- docname\n\t\t*/\n\t\t$.extend(this, opts);\n\n\t\tthis.setup_tags();\n\n\t\tif (!this.user_tags) {\n\t\t\tthis.user_tags = \"\";\n\t\t}\n\t\tthis.initialized = true;\n\t\tthis.refresh(this.user_tags);\n\t}\n\tsetup_tags() {\n\t\tvar me = this;\n\n\t\t// hidden form, does not have parent\n\t\tif (!this.parent) {\n\t\t\treturn;\n\t\t}\n\n\t\tthis.wrapper = this.parent;\n\t\tif (!this.wrapper.length) return;\n\n\t\tthis.tags = new frappe.ui.Tags({\n\t\t\tparent: this.wrapper,\n\t\t\tplaceholder: __(\"Add a tag ...\"),\n\t\t\tonTagAdd: (tag) => {\n\t\t\t\tif(me.initialized && !me.refreshing) {\n\t\t\t\t\treturn frappe.call({\n\t\t\t\t\t\tmethod: \"frappe.desk.doctype.tag.tag.add_tag\",\n\t\t\t\t\t\targs: me.get_args(tag),\n\t\t\t\t\t\tcallback: function(r) {\n\t\t\t\t\t\t\tvar user_tags = me.user_tags ? me.user_tags.split(\",\") : [];\n\t\t\t\t\t\t\tuser_tags.push(tag)\n\t\t\t\t\t\t\tme.user_tags = user_tags.join(\",\");\n\t\t\t\t\t\t\tme.on_change && me.on_change(me.user_tags);\n\t\t\t\t\t\t\tfrappe.tags.utils.fetch_tags();\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t},\n\t\t\tonTagRemove: (tag) => {\n\t\t\t\tif(!me.refreshing) {\n\t\t\t\t\treturn frappe.call({\n\t\t\t\t\t\tmethod: \"frappe.desk.doctype.tag.tag.remove_tag\",\n\t\t\t\t\t\targs: me.get_args(tag),\n\t\t\t\t\t\tcallback: function(r) {\n\t\t\t\t\t\t\tvar user_tags = me.user_tags.split(\",\");\n\t\t\t\t\t\t\tuser_tags.splice(user_tags.indexOf(tag), 1);\n\t\t\t\t\t\t\tme.user_tags = user_tags.join(\",\");\n\t\t\t\t\t\t\tme.on_change && me.on_change(me.user_tags);\n\t\t\t\t\t\t\tfrappe.tags.utils.fetch_tags();\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\t\tthis.setup_awesomplete();\n\t\tthis.setup_complete = true;\n\t}\n\tsetup_awesomplete() {\n\t\tvar me = this;\n\t\tvar $input = this.wrapper.find(\"input.tags-input\");\n\t\tvar input = $input.get(0);\n\t\tthis.awesomplete = new Awesomplete(input, {\n\t\t\tminChars: 0,\n\t\t\tmaxItems: 99,\n\t\t\tlist: []\n\t\t});\n\t\t$input.on(\"awesomplete-open\", function(e){\n\t\t\t$input.attr('state', 'open');\n\t\t});\n\t\t$input.on(\"awesomplete-close\", function(e){\n\t\t\t$input.attr('state', 'closed');\n\t\t});\n\t\t$input.on(\"input\", function(e) {\n\t\t\tvar value = e.target.value;\n\t\t\tfrappe.call({\n\t\t\t\tmethod: \"frappe.desk.doctype.tag.tag.get_tags\",\n\t\t\t\targs:{\n\t\t\t\t\tdoctype: me.frm.doctype,\n\t\t\t\t\ttxt: value.toLowerCase(),\n\t\t\t\t},\n\t\t\t\tcallback: function(r) {\n\t\t\t\t\tme.awesomplete.list = r.message;\n\t\t\t\t}\n\t\t\t});\n\t\t});\n\t\t$input.on(\"focus\", function(e) {\n\t\t\tif($input.attr('state') != 'open') {\n\t\t\t\t$input.trigger(\"input\");\n\t\t\t}\n\t\t});\n\t}\n\tget_args(tag) {\n\t\treturn {\n\t\t\ttag: tag,\n\t\t\tdt: this.frm.doctype,\n\t\t\tdn: this.frm.docname,\n\t\t}\n\t}\n\trefresh(user_tags) {\n\t\tvar me = this;\n\t\tif (!this.initialized || !this.setup_complete || this.refreshing) return;\n\n\t\tme.refreshing = true;\n\t\ttry {\n\t\t\tme.tags.clearTags();\n\t\t\tif(user_tags) {\n\t\t\t\tme.user_tags = user_tags;\n\t\t\t\tme.tags.addTags(user_tags.split(','));\n\t\t\t}\n\t\t} catch(e) {\n\t\t\tme.refreshing = false;\n\t\t\t// wtf bug\n\t\t\tsetTimeout( function() { me.refresh(); }, 100);\n\t\t}\n\t\tme.refreshing = false;\n\n\t}\n}\n", "// Copyright (c) 2015, Frappe Technologies Pvt. Ltd. and Contributors\n// MIT License. See license.txt\n\nfrappe.ui.is_liked = function(doc) {\n\tvar liked = frappe.ui.get_liked_by(doc);\n\treturn liked.indexOf(frappe.session.user)===-1 ? false : true;\n}\n\nfrappe.ui.get_liked_by = function(doc) {\n\tvar liked = doc._liked_by;\n\tif(liked) {\n\t\tliked = JSON.parse(liked);\n\t}\n\n\treturn liked || [];\n}\n\nfrappe.ui.toggle_like = function($btn, doctype, name, callback) {\n\tvar add = $btn.hasClass(\"not-liked\") ? \"Yes\" : \"No\";\n\t// disable click\n\t$btn.css('pointer-events', 'none');\n\n\tfrappe.call({\n\t\tmethod: \"frappe.desk.like.toggle_like\",\n\t\tquiet: true,\n\t\targs: {\n\t\t\tdoctype: doctype,\n\t\t\tname: name,\n\t\t\tadd: add,\n\t\t},\n\t\tcallback: function(r) {\n\t\t\t// renable click\n\t\t\t$btn.css('pointer-events', 'auto');\n\n\t\t\tif(!r.exc) {\n\t\t\t\t// update in all local-buttons\n\t\t\t\tvar action_buttons = $('.like-action[data-name=\"'+ name.replace(/\"/g, '\\\"')\n\t\t\t\t\t+'\"][data-doctype=\"'+ doctype.replace(/\"/g, '\\\"')+'\"]');\n\n\t\t\t\tif(add===\"Yes\") {\n\t\t\t\t\taction_buttons.removeClass(\"not-liked\").addClass(\"liked\");\n\t\t\t\t} else {\n\t\t\t\t\taction_buttons.addClass(\"not-liked\").removeClass(\"liked\");\n\t\t\t\t}\n\n\t\t\t\t// update in locals (form)\n\t\t\t\tvar doc = locals[doctype] && locals[doctype][name];\n\t\t\t\tif(doc) {\n\t\t\t\t\tvar liked_by = JSON.parse(doc._liked_by || \"[]\"),\n\t\t\t\t\t\tidx = liked_by.indexOf(frappe.session.user);\n\t\t\t\t\tif(add===\"Yes\") {\n\t\t\t\t\t\tif(idx===-1)\n\t\t\t\t\t\t\tliked_by.push(frappe.session.user);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tif(idx!==-1) {\n\t\t\t\t\t\t\tliked_by = liked_by.slice(0,idx).concat(liked_by.slice(idx+1))\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tdoc._liked_by = JSON.stringify(liked_by);\n\t\t\t\t}\n\n\t\t\t\tif(callback) {\n\t\t\t\t\tcallback();\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t});\n};\n\nfrappe.ui.click_toggle_like = function() {\n\tvar $btn = $(this);\n\tvar $count = $btn.siblings(\".likes-count\");\n\tvar not_liked = $btn.hasClass(\"not-liked\");\n\tvar doctype = $btn.attr(\"data-doctype\");\n\tvar name = $btn.attr(\"data-name\");\n\n\tfrappe.ui.toggle_like($btn, doctype, name, function() {\n\t\tif (not_liked) {\n\t\t\t$count.text(cint($count.text()) + 1);\n\t\t} else {\n\t\t\t$count.text(cint($count.text()) - 1);\n\t\t}\n\t});\n\n\treturn false;\n}\n\nfrappe.ui.setup_like_popover = ($parent, selector, check_not_liked=true) => {\n\tif (frappe.dom.is_touchscreen()) {\n\t\treturn;\n\t}\n\n\t$parent.on('mouseover', selector, function() {\n\t\tconst target_element = $(this);\n\t\ttarget_element.popover({\n\t\t\tanimation: true,\n\t\t\tplacement: 'bottom',\n\t\t\ttrigger: 'manual',\n\t\t\ttemplate: `<div class=\"liked-by-popover popover\">\n\t\t\t\t<div class=\"arrow\"></div>\n\t\t\t\t<div class=\"popover-body popover-content\"></div>\n\t\t\t</div>`,\n\t\t\tcontent: () => {\n\t\t\t\tlet liked_by = target_element.parents(\".liked-by\").attr('data-liked-by');\n\t\t\t\tliked_by = liked_by ? decodeURI(liked_by) : '[]';\n\t\t\t\tliked_by = JSON.parse(liked_by);\n\n\t\t\t\tconst user = frappe.session.user;\n\t\t\t\t// hack\n\t\t\t\tif (check_not_liked) {\n\t\t\t\t\tif (target_element.parents(\".liked-by\").find(\".not-liked\").length) {\n\t\t\t\t\t\tif (liked_by.indexOf(user)!==-1) {\n\t\t\t\t\t\t\tliked_by.splice(liked_by.indexOf(user), 1);\n\t\t\t\t\t\t}\n\t\t\t\t\t} else {\n\t\t\t\t\t\tif (liked_by.indexOf(user)===-1) {\n\t\t\t\t\t\t\tliked_by.push(user);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tif (!liked_by.length) {\n\t\t\t\t\treturn \"\";\n\t\t\t\t}\n\n\t\t\t\tlet liked_by_list = $(`<ul class=\"list-unstyled\"></ul>`);\n\n\t\t\t\t// to show social profile of the user\n\t\t\t\tlet link_base = '/app/user-profile/';\n\n\t\t\t\tliked_by.forEach(user => {\n\t\t\t\t\t// append user list item\n\t\t\t\t\tliked_by_list.append(`\n\t\t\t\t\t\t<li data-user=${user}>${frappe.avatar(user, \"avatar-xs\")}\n\t\t\t\t\t\t\t<span>${frappe.user.full_name(user)}</span>\n\t\t\t\t\t\t</li>\n\t\t\t\t\t`);\n\t\t\t\t});\n\n\t\t\t\tliked_by_list.children('li').click(ev => {\n\t\t\t\t\tlet user = ev.currentTarget.dataset.user;\n\t\t\t\t\ttarget_element.popover('hide');\n\t\t\t\t\tfrappe.set_route(link_base + user);\n\t\t\t\t});\n\n\t\t\t\treturn liked_by_list;\n\t\t\t},\n\t\t\thtml: true,\n\t\t\tcontainer: 'body'\n\t\t});\n\n\t\ttarget_element.popover('show');\n\n\t\t$(\".popover\").on(\"mouseleave\", () => {\n\t\t\ttarget_element.popover('hide');\n\t\t});\n\n\t\ttarget_element.on('mouseout', () => {\n\t\t\tsetTimeout(() => {\n\t\t\t\tif (!$('.popover:hover').length) {\n\t\t\t\t\ttarget_element.popover('hide');\n\t\t\t\t}\n\t\t\t}, 100);\n\t\t});\n\t});\n\n};\n", "\n\tfrappe.templates['print_template'] = `<!DOCTYPE html>\n<html lang=\"{{ lang }}\" dir=\"{{ layout_direction }}\">\n<head>\n\t<meta charset=\"utf-8\">\n\t<meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge\">\n\t<meta name=\"viewport\" content=\"width=device-width, initial-scale=1\">\n\t<meta name=\"description\" content=\"\">\n\t<meta name=\"author\" content=\"\">\n\t<title>{{ title }}</title>\n\t<link href=\"{{ base_url }}{{ frappe.assets.bundled_asset('print.bundle.css', frappe.utils.is_rtl(lang)) }}\" rel=\"stylesheet\">\n\t<style>\n\t\t{{ print_css }}\n\t</style>\n</head>\n<body>\n\t<div class=\"print-format-gutter\">\n\t\t{% if print_settings.repeat_header_footer %}\n\t\t\t<div id=\"footer-html\" class=\"visible-pdf\">\n\t\t\t\t{% if print_settings.letter_head && print_settings.letter_head.footer %}\n\t\t\t\t\t<div class=\"letter-head-footer\">\n\t\t\t\t\t\t{{ print_settings.letter_head.footer }}\n\t\t\t\t\t</div>\n\t\t\t\t{% endif %}\n\t\t\t\t<p class=\"text-center small page-number visible-pdf\">\n\t\t\t\t\t{{ __(\"Page {0} of {1}\", [\\`<span class=\"page\"></span>\\`, \\`<span class=\"topage\"></span>\\`]) }}\n\t\t\t\t</p>\n\t\t\t</div>\n\t\t{% endif %}\n\n\t\t<div class=\"print-format {% if landscape %} landscape {% endif %}\"\n\t\t\t\t{% if columns.length > 20 %}\n\t\t\t\t\tstyle=\"font-size: 4.0pt\"\n\t\t\t\t{% endif %}\n\t\t\t>\n\t\t\t{% if print_settings.letter_head %}\n\t\t\t<div {% if print_settings.repeat_header_footer %} id=\"header-html\" class=\"hidden-pdf\" {% endif %}>\n\t\t\t\t<div class=\"letter-head\">{{ print_settings.letter_head.header }}</div>\n\t\t\t</div>\n\t\t\t{% endif %}\n\t\t\t{{ content }}\n\t\t</div>\n\t</div>\n</body>\n</html>\n`;\n", "frappe.provide(\"frappe.views\");\n\nfrappe.views.BaseList = class BaseList {\n\tconstructor(opts) {\n\t\tObject.assign(this, opts);\n\t}\n\n\tshow() {\n\t\treturn frappe.run_serially([\n\t\t\t() => this.show_skeleton(),\n\t\t\t() => this.fetch_meta(),\n\t\t\t() => this.hide_skeleton(),\n\t\t\t() => this.check_permissions(),\n\t\t\t() => this.init(),\n\t\t\t() => this.before_refresh(),\n\t\t\t() => this.refresh(),\n\t\t]);\n\t}\n\n\tinit() {\n\t\tif (this.init_promise) return this.init_promise;\n\n\t\tlet tasks = [\n\t\t\tthis.setup_defaults,\n\t\t\tthis.set_stats,\n\t\t\tthis.setup_fields,\n\t\t\t// make view\n\t\t\tthis.setup_page,\n\t\t\tthis.setup_side_bar,\n\t\t\tthis.setup_main_section,\n\t\t\tthis.setup_view,\n\t\t\tthis.setup_view_menu,\n\t\t].map((fn) => fn.bind(this));\n\n\t\tthis.init_promise = frappe.run_serially(tasks);\n\t\treturn this.init_promise;\n\t}\n\n\tsetup_defaults() {\n\t\tthis.page_name = frappe.get_route_str();\n\t\tthis.page_title = this.page_title || frappe.router.doctype_layout || __(this.doctype);\n\t\tthis.meta = frappe.get_meta(this.doctype);\n\t\tthis.settings = frappe.listview_settings[this.doctype] || {};\n\t\tthis.user_settings = frappe.get_user_settings(this.doctype);\n\n\t\tthis.start = 0;\n\t\tthis.page_length = 20;\n\t\tthis.data = [];\n\t\tthis.method = \"frappe.desk.reportview.get\";\n\n\t\tthis.can_create = frappe.model.can_create(this.doctype);\n\t\tthis.can_write = frappe.model.can_write(this.doctype);\n\n\t\tthis.fields = [];\n\t\tthis.filters = [];\n\t\tthis.sort_by = \"modified\";\n\t\tthis.sort_order = \"desc\";\n\n\t\t// Setup buttons\n\t\tthis.primary_action = null;\n\t\tthis.secondary_action = null;\n\n\t\tthis.menu_items = [\n\t\t\t{\n\t\t\t\tlabel: __(\"Refresh\"),\n\t\t\t\taction: () => this.refresh(),\n\t\t\t\tclass: \"visible-xs\",\n\t\t\t},\n\t\t];\n\t}\n\n\tsetup_fields() {\n\t\tthis.set_fields();\n\t\tthis.build_fields();\n\t}\n\n\tset_fields() {\n\t\tlet fields = [].concat(\n\t\t\tfrappe.model.std_fields_list,\n\t\t\tthis.meta.title_field\n\t\t);\n\n\t\tfields.forEach((f) => this._add_field(f));\n\t}\n\n\tget_fields_in_list_view() {\n\t\treturn this.meta.fields.filter((df) => {\n\t\t\treturn (\n\t\t\t\t(frappe.model.is_value_type(df.fieldtype) &&\n\t\t\t\t\t(df.in_list_view &&\n\t\t\t\t\t\tfrappe.perm.has_perm(\n\t\t\t\t\t\t\tthis.doctype,\n\t\t\t\t\t\t\tdf.permlevel,\n\t\t\t\t\t\t\t\"read\"\n\t\t\t\t\t\t))) ||\n\t\t\t\t(df.fieldtype === \"Currency\" &&\n\t\t\t\t\tdf.options &&\n\t\t\t\t\t!df.options.includes(\":\")) ||\n\t\t\t\tdf.fieldname === \"status\"\n\t\t\t);\n\t\t});\n\t}\n\n\tbuild_fields() {\n\t\t// fill in missing doctype\n\t\tthis.fields = this.fields.map((f) => {\n\t\t\tif (typeof f === \"string\") {\n\t\t\t\tf = [f, this.doctype];\n\t\t\t}\n\t\t\treturn f;\n\t\t});\n\t\t// remove null or undefined values\n\t\tthis.fields = this.fields.filter(Boolean);\n\t\t//de-duplicate\n\t\tthis.fields = this.fields.uniqBy((f) => f[0] + f[1]);\n\t}\n\n\t_add_field(fieldname, doctype) {\n\t\tif (!fieldname) return;\n\n\t\tif (!doctype) doctype = this.doctype;\n\n\t\tif (typeof fieldname === \"object\") {\n\t\t\t// df is passed\n\t\t\tconst df = fieldname;\n\t\t\tfieldname = df.fieldname;\n\t\t\tdoctype = df.parent || doctype;\n\t\t}\n\n\t\tif (!this.fields) this.fields = [];\n\t\tconst is_valid_field =\n\t\t\tfrappe.model.std_fields_list.includes(fieldname) ||\n\t\t\tfrappe.meta.has_field(doctype, fieldname) ||\n\t\t\tfieldname === \"_seen\";\n\n\t\tif (!is_valid_field) {\n\t\t\treturn;\n\t\t}\n\n\t\tthis.fields.push([fieldname, doctype]);\n\t}\n\n\tset_stats() {\n\t\tthis.stats = [\"_user_tags\"];\n\t\t// add workflow field (as priority)\n\t\tthis.workflow_state_fieldname = frappe.workflow.get_state_fieldname(\n\t\t\tthis.doctype\n\t\t);\n\t\tif (this.workflow_state_fieldname) {\n\t\t\tif (!frappe.workflow.workflows[this.doctype][\"override_status\"]) {\n\t\t\t\tthis._add_field(this.workflow_state_fieldname);\n\t\t\t}\n\t\t\tthis.stats.push(this.workflow_state_fieldname);\n\t\t}\n\t}\n\n\tfetch_meta() {\n\t\treturn frappe.model.with_doctype(this.doctype);\n\t}\n\n\tshow_skeleton() {\n\n\t}\n\n\thide_skeleton() {\n\n\t}\n\n\tcheck_permissions() {\n\t\treturn true;\n\t}\n\n\tsetup_page() {\n\t\tthis.page = this.parent.page;\n\t\tthis.$page = $(this.parent);\n\t\t!this.hide_card_layout && this.page.main.addClass('frappe-card');\n\t\tthis.page.page_form.removeClass(\"row\").addClass(\"flex\");\n\t\tthis.hide_page_form && this.page.page_form.hide();\n\t\tthis.hide_sidebar && this.$page.addClass('no-list-sidebar');\n\t\tthis.setup_page_head();\n\t}\n\n\tsetup_page_head() {\n\t\tthis.set_title();\n\t\tthis.set_menu_items();\n\t\tthis.set_breadcrumbs();\n\t}\n\n\tset_title() {\n\t\tthis.page.set_title(this.page_title);\n\t}\n\n\tsetup_view_menu() {\n\t\t// TODO: add all icons\n\t\tconst icon_map = {\n\t\t\t'Image': 'image-view',\n\t\t\t'List': 'list',\n\t\t\t'Report': 'small-file',\n\t\t\t'Calendar': 'calendar',\n\t\t\t'Gantt': 'gantt',\n\t\t\t'Kanban': 'kanban',\n\t\t\t'Dashboard': 'dashboard',\n\t\t\t'Map': 'map',\n\t\t};\n\n\t\tif (frappe.boot.desk_settings.view_switcher) {\n\t\t\t/* @preserve\n\t\t\tfor translation, don't remove\n\t\t\t__(\"List View\") __(\"Report View\") __(\"Dashboard View\") __(\"Gantt View\"),\n\t\t\t__(\"Kanban View\") __(\"Calendar View\") __(\"Image View\") __(\"Inbox View\"),\n\t\t\t__(\"Tree View\") __(\"Map View\") */\n\t\t\tthis.views_menu = this.page.add_custom_button_group(__('{0} View', [this.view_name]),\n\t\t\t\ticon_map[this.view_name] || 'list');\n\t\t\tthis.views_list = new frappe.views.ListViewSelect({\n\t\t\t\tdoctype: this.doctype,\n\t\t\t\tparent: this.views_menu,\n\t\t\t\tpage: this.page,\n\t\t\t\tlist_view: this,\n\t\t\t\tsidebar: this.list_sidebar,\n\t\t\t\ticon_map: icon_map\n\t\t\t});\n\t\t}\n\t}\n\n\tset_default_secondary_action() {\n\t\tif (this.secondary_action) {\n\t\t\tconst $secondary_action = this.page.set_secondary_action(\n\t\t\t\tthis.secondary_action.label,\n\t\t\t\tthis.secondary_action.action,\n\t\t\t\tthis.secondary_action.icon\n\t\t\t);\n\t\t\tif (!this.secondary_action.icon) {\n\t\t\t\t$secondary_action.addClass(\"hidden-xs\");\n\t\t\t} else if (!this.secondary_action.label) {\n\t\t\t\t$secondary_action.addClass(\"visible-xs\");\n\t\t\t}\n\t\t} else {\n\t\t\tthis.refresh_button = this.page.add_action_icon(\"refresh\", () => {\n\t\t\t\tthis.refresh();\n\t\t\t});\n\t\t}\n\t}\n\n\tset_menu_items() {\n\t\tthis.set_default_secondary_action();\n\n\t\tthis.menu_items && this.menu_items.map((item) => {\n\t\t\tif (item.condition && item.condition() === false) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tconst $item = this.page.add_menu_item(\n\t\t\t\titem.label,\n\t\t\t\titem.action,\n\t\t\t\titem.standard,\n\t\t\t\titem.shortcut\n\t\t\t);\n\t\t\tif (item.class) {\n\t\t\t\t$item && $item.addClass(item.class);\n\t\t\t}\n\t\t});\n\t}\n\n\tset_breadcrumbs() {\n\t\tfrappe.breadcrumbs.add(this.meta.module, this.doctype);\n\t}\n\n\tsetup_side_bar() {\n\t\tif (this.hide_sidebar || !frappe.boot.desk_settings.list_sidebar) return;\n\t\tthis.list_sidebar = new frappe.views.ListSidebar({\n\t\t\tdoctype: this.doctype,\n\t\t\tstats: this.stats,\n\t\t\tparent: this.$page.find(\".layout-side-section\"),\n\t\t\tpage: this.page,\n\t\t\tlist_view: this,\n\t\t});\n\t}\n\n\ttoggle_side_bar(show) {\n\t\tlet show_sidebar = show || JSON.parse(localStorage.show_sidebar || \"true\");\n\t\tshow_sidebar = !show_sidebar;\n\t\tlocalStorage.show_sidebar = show_sidebar;\n\t\tthis.show_or_hide_sidebar();\n\t\t$(document.body).trigger(\"toggleListSidebar\");\n\t}\n\n\tshow_or_hide_sidebar() {\n\t\tlet show_sidebar = JSON.parse(localStorage.show_sidebar || \"true\");\n\t\t$(document.body).toggleClass(\"no-list-sidebar\", !show_sidebar);\n\t}\n\n\tsetup_main_section() {\n\t\treturn frappe.run_serially(\n\t\t\t[\n\t\t\t\tthis.setup_list_wrapper,\n\t\t\t\tthis.show_or_hide_sidebar,\n\t\t\t\tthis.setup_filter_area,\n\t\t\t\tthis.setup_sort_selector,\n\t\t\t\tthis.setup_result_area,\n\t\t\t\tthis.setup_no_result_area,\n\t\t\t\tthis.setup_freeze_area,\n\t\t\t\tthis.setup_paging_area,\n\t\t\t].map((fn) => fn.bind(this))\n\t\t);\n\t}\n\n\tsetup_list_wrapper() {\n\t\tthis.$frappe_list = $('<div class=\"frappe-list\">').appendTo(\n\t\t\tthis.page.main\n\t\t);\n\t}\n\n\tsetup_filter_area() {\n\t\tif (this.hide_filters) return;\n\t\tthis.filter_area = new FilterArea(this);\n\n\t\tif (this.filters && this.filters.length > 0) {\n\t\t\treturn this.filter_area.set(this.filters);\n\t\t}\n\t}\n\n\tsetup_sort_selector() {\n\t\tif (this.hide_sort_selector) return;\n\t\tthis.sort_selector = new frappe.ui.SortSelector({\n\t\t\tparent: this.$filter_section,\n\t\t\tdoctype: this.doctype,\n\t\t\targs: {\n\t\t\t\tsort_by: this.sort_by,\n\t\t\t\tsort_order: this.sort_order,\n\t\t\t},\n\t\t\tonchange: this.on_sort_change.bind(this),\n\t\t});\n\t}\n\n\ton_sort_change() {\n\t\tthis.refresh();\n\t}\n\n\tsetup_result_area() {\n\t\tthis.$result = $(`<div class=\"result\">`);\n\t\tthis.$frappe_list.append(this.$result);\n\t}\n\n\tsetup_no_result_area() {\n\t\tthis.$no_result = $(`\n\t\t\t<div class=\"no-result text-muted flex justify-center align-center\">\n\t\t\t\t${this.get_no_result_message()}\n\t\t\t</div>\n\t\t`).hide();\n\t\tthis.$frappe_list.append(this.$no_result);\n\t}\n\n\tsetup_freeze_area() {\n\t\tthis.$freeze = $('<div class=\"freeze\"></div>').hide();\n\t\tthis.$frappe_list.append(this.$freeze);\n\t}\n\n\tget_no_result_message() {\n\t\treturn __(\"Nothing to show\");\n\t}\n\n\tsetup_paging_area() {\n\t\tconst paging_values = [20, 100, 500];\n\t\tthis.$paging_area = $(\n\t\t\t`<div class=\"list-paging-area level\">\n\t\t\t\t<div class=\"level-left\">\n\t\t\t\t\t<div class=\"btn-group\">\n\t\t\t\t\t\t${paging_values.map((value) => `\n\t\t\t\t\t\t\t<button type=\"button\" class=\"btn btn-default btn-sm btn-paging\"\n\t\t\t\t\t\t\t\tdata-value=\"${value}\">\n\t\t\t\t\t\t\t\t${value}\n\t\t\t\t\t\t\t</button>\n\t\t\t\t\t\t`).join(\"\")}\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t\t<div class=\"level-right\">\n\t\t\t\t\t<button class=\"btn btn-default btn-more btn-sm\">\n\t\t\t\t\t\t${__(\"Load More\")}\n\t\t\t\t\t</button>\n\t\t\t\t</div>\n\t\t\t</div>`\n\t\t).hide();\n\t\tthis.$frappe_list.append(this.$paging_area);\n\n\t\t// set default paging btn active\n\t\tthis.$paging_area\n\t\t\t.find(`.btn-paging[data-value=\"${this.page_length}\"]`)\n\t\t\t.addClass(\"btn-info\");\n\n\t\tthis.$paging_area.on(\"click\", \".btn-paging, .btn-more\", (e) => {\n\t\t\tconst $this = $(e.currentTarget);\n\n\t\t\tif ($this.is(\".btn-paging\")) {\n\t\t\t\t// set active button\n\t\t\t\tthis.$paging_area.find(\".btn-paging\").removeClass(\"btn-info\");\n\t\t\t\t$this.addClass(\"btn-info\");\n\n\t\t\t\tthis.start = 0;\n\t\t\t\tthis.page_length = this.selected_page_count = $this.data().value;\n\t\t\t} else if ($this.is(\".btn-more\")) {\n\t\t\t\tthis.start = this.start + this.page_length;\n\t\t\t\tthis.page_length = this.selected_page_count || 20;\n\t\t\t}\n\t\t\tthis.refresh();\n\t\t});\n\t}\n\n\tget_fields() {\n\t\t// convert [fieldname, Doctype] => tabDoctype.fieldname\n\t\treturn this.fields.map((f) =>\n\t\t\tfrappe.model.get_full_column_name(f[0], f[1])\n\t\t);\n\t}\n\n\tget_group_by() {\n\t\tlet name_field = this.fields && this.fields.find(f => f[0] == 'name');\n\t\tif (name_field) {\n\t\t\treturn frappe.model.get_full_column_name(name_field[0], name_field[1]);\n\t\t}\n\t\treturn null;\n\t}\n\n\tsetup_view() {\n\t\t// for child classes\n\t}\n\n\tget_filter_value(fieldname) {\n\t\tconst filter = this.get_filters_for_args().filter(f => f[1] == fieldname)[0];\n\t\tif (!filter) return;\n\t\treturn {\n\t\t\t'like': filter[3]?.replace(/^%?|%$/g, ''),\n\t\t\t'not set': null\n\t\t}[filter[2]] || filter[3];\n\t}\n\n\tget_filters_for_args() {\n\t\t// filters might have a fifth param called hidden,\n\t\t// we don't want to pass that server side\n\t\treturn this.filter_area\n\t\t\t? this.filter_area.get().map((filter) => filter.slice(0, 4))\n\t\t\t: [];\n\t}\n\n\tget_args() {\n\t\treturn {\n\t\t\tdoctype: this.doctype,\n\t\t\tfields: this.get_fields(),\n\t\t\tfilters: this.get_filters_for_args(),\n\t\t\torder_by: this.sort_selector && this.sort_selector.get_sql_string(),\n\t\t\tstart: this.start,\n\t\t\tpage_length: this.page_length,\n\t\t\tview: this.view,\n\t\t\tgroup_by: this.get_group_by()\n\t\t};\n\t}\n\n\tget_call_args() {\n\t\tconst args = this.get_args();\n\t\treturn {\n\t\t\tmethod: this.method,\n\t\t\targs: args,\n\t\t\tfreeze: this.freeze_on_refresh || false,\n\t\t\tfreeze_message: this.freeze_message || __(\"Loading\") + \"...\",\n\t\t};\n\t}\n\n\tbefore_refresh() {\n\t\t// modify args here just before making the request\n\t\t// see list_view.js\n\t}\n\n\trefresh() {\n\t\tlet args = this.get_call_args();\n\t\tif (this.no_change(args)) {\n\t\t\t// console.log('throttled');\n\t\t\treturn Promise.resolve();\n\t\t}\n\t\tthis.freeze(true);\n\t\t// fetch data from server\n\t\treturn frappe.call(args).then((r) => {\n\t\t\t// render\n\t\t\tthis.prepare_data(r);\n\t\t\tthis.toggle_result_area();\n\t\t\tthis.before_render();\n\t\t\tthis.render();\n\t\t\tthis.after_render();\n\t\t\tthis.freeze(false);\n\t\t\tthis.reset_defaults();\n\t\t\tif (this.settings.refresh) {\n\t\t\t\tthis.settings.refresh(this);\n\t\t\t}\n\t\t});\n\t}\n\n\tno_change(args) {\n\t\t// returns true if arguments are same for the last 3 seconds\n\t\t// this helps in throttling if called from various sources\n\t\tif (this.last_args && JSON.stringify(args) === this.last_args) {\n\t\t\treturn true;\n\t\t}\n\t\tthis.last_args = JSON.stringify(args);\n\t\tsetTimeout(() => {\n\t\t\tthis.last_args = null;\n\t\t}, 3000);\n\t\treturn false;\n\t}\n\n\tprepare_data(r) {\n\t\tlet data = r.message || {};\n\n\t\t// extract user_info for assignments\n\t\tObject.assign(frappe.boot.user_info, data.user_info);\n\t\tdelete data.user_info;\n\n\t\tdata = !Array.isArray(data)\n\t\t\t? frappe.utils.dict(data.keys, data.values)\n\t\t\t: data;\n\n\t\tif (this.start === 0) {\n\t\t\tthis.data = data;\n\t\t} else {\n\t\t\tthis.data = this.data.concat(data);\n\t\t}\n\n\t\tthis.data = this.data.uniqBy((d) => d.name);\n\t}\n\n\treset_defaults() {\n\t\tthis.page_length = this.page_length + this.start;\n\t\tthis.start = 0;\n\t}\n\n\tfreeze() {\n\t\t// show a freeze message while data is loading\n\t}\n\n\tbefore_render() {}\n\n\tafter_render() {}\n\n\trender() {\n\t\t// for child classes\n\t}\n\n\ton_filter_change() {\n\t\t// fired when filters are added or removed\n\t}\n\n\ttoggle_result_area() {\n\t\tthis.$result.toggle(this.data.length > 0);\n\t\tthis.$paging_area.toggle(this.data.length > 0);\n\t\tthis.$no_result.toggle(this.data.length == 0);\n\n\t\tconst show_more = this.start + this.page_length <= this.data.length;\n\t\tthis.$paging_area.find(\".btn-more\").toggle(show_more);\n\t}\n\n\tcall_for_selected_items(method, args = {}) {\n\t\targs.names = this.get_checked_items(true);\n\n\t\tfrappe.call({\n\t\t\tmethod: method,\n\t\t\targs: args,\n\t\t\tfreeze: true,\n\t\t\tcallback: (r) => {\n\t\t\t\tif (!r.exc) {\n\t\t\t\t\tthis.refresh();\n\t\t\t\t}\n\t\t\t},\n\t\t});\n\t}\n};\n\nclass FilterArea {\n\tconstructor(list_view) {\n\t\tthis.list_view = list_view;\n\t\tthis.list_view.page.page_form.append(`<div class=\"standard-filter-section flex\"></div>`);\n\n\t\tconst filter_area = this.list_view.hide_page_form\n\t\t\t? this.list_view.page.custom_actions\n\t\t\t: this.list_view.page.page_form;\n\n\t\tthis.list_view.$filter_section = $('<div class=\"filter-section flex\">').appendTo(\n\t\t\tfilter_area\n\t\t);\n\n\t\tthis.$filter_list_wrapper = this.list_view.$filter_section;\n\t\tthis.trigger_refresh = true;\n\t\tthis.setup();\n\t}\n\n\tsetup() {\n\t\tif (!this.list_view.hide_page_form) this.make_standard_filters();\n\t\tthis.make_filter_list();\n\t}\n\n\tget() {\n\t\tlet filters = this.filter_list.get_filters();\n\t\tlet standard_filters = this.get_standard_filters();\n\n\t\treturn filters.concat(standard_filters).uniqBy(JSON.stringify);\n\t}\n\n\tset(filters) {\n\t\t// use to method to set filters without triggering refresh\n\t\tthis.trigger_refresh = false;\n\t\treturn this.add(filters, false).then(() => {\n\t\t\tthis.trigger_refresh = true;\n\t\t\tthis.filter_list.update_filter_button();\n\t\t});\n\t}\n\n\tadd(filters, refresh = true) {\n\t\tif (!filters || (Array.isArray(filters) && filters.length === 0))\n\t\t\treturn Promise.resolve();\n\n\t\tif (typeof filters[0] === \"string\") {\n\t\t\t// passed in the format of doctype, field, condition, value\n\t\t\tconst filter = Array.from(arguments);\n\t\t\tfilters = [filter];\n\t\t}\n\n\t\tfilters = filters.filter(f => !this.exists(f));\n\n\t\t// standard filters = filters visible on list view\n\t\t// non-standard filters = filters set by filter button\n\t\tconst { non_standard_filters, promise } = this.set_standard_filter(\n\t\t\tfilters\n\t\t);\n\n\t\treturn promise\n\t\t\t.then(() => {\n\t\t\t\treturn (\n\t\t\t\t\tnon_standard_filters.length > 0 &&\n\t\t\t\t\tthis.filter_list.add_filters(non_standard_filters)\n\t\t\t\t);\n\t\t\t})\n\t\t\t.then(() => {\n\t\t\t\trefresh && this.list_view.refresh();\n\t\t\t});\n\t}\n\n\trefresh_list_view() {\n\t\tif (this.trigger_refresh) {\n\t\t\tthis.list_view.start = 0;\n\t\t\tthis.list_view.refresh();\n\t\t\tthis.list_view.on_filter_change();\n\t\t}\n\t}\n\n\texists(f) {\n\t\tlet exists = false;\n\t\t// check in standard filters\n\t\tconst fields_dict = this.list_view.page.fields_dict;\n\t\tif (f[2] === \"=\" && f[1] in fields_dict) {\n\t\t\tconst value = fields_dict[f[1]].get_value();\n\t\t\tif (value) {\n\t\t\t\texists = true;\n\t\t\t}\n\t\t}\n\n\t\t// check in filter area\n\t\tif (!exists) {\n\t\t\texists = this.filter_list.filter_exists(f);\n\t\t}\n\n\t\treturn exists;\n\t}\n\n\tset_standard_filter(filters) {\n\t\tif (filters.length === 0) {\n\t\t\treturn {\n\t\t\t\tnon_standard_filters: [],\n\t\t\t\tpromise: Promise.resolve(),\n\t\t\t};\n\t\t}\n\n\t\tconst fields_dict = this.list_view.page.fields_dict;\n\n\t\tlet out = filters.reduce((out, filter) => {\n\t\t\t// eslint-disable-next-line\n\t\t\tconst [dt, fieldname, condition, value] = filter;\n\t\t\tout.promise = out.promise || Promise.resolve();\n\t\t\tout.non_standard_filters = out.non_standard_filters || [];\n\n\t\t\t// set in list view area if filters are present\n\t\t\t// don't set like filter on link fields (gets reset)\n\t\t\tif (\n\t\t\t\tfields_dict[fieldname] &&\n\t\t\t\t(\n\t\t\t\t\tcondition === \"=\" ||\n\t\t\t\t\t(condition === \"like\" && fields_dict[fieldname]?.df?.fieldtype != \"Link\")\n\t\t\t\t)\n\t\t\t) {\n\t\t\t\t// standard filter\n\t\t\t\tout.promise = out.promise.then(() =>\n\t\t\t\t\tfields_dict[fieldname].set_value(value)\n\t\t\t\t);\n\t\t\t} else {\n\t\t\t\t// filter out non standard filters\n\t\t\t\tout.non_standard_filters.push(filter);\n\t\t\t}\n\t\t\treturn out;\n\t\t}, {});\n\n\t\treturn out;\n\t}\n\n\tremove_filters(filters) {\n\t\tfilters.map(f => {\n\t\t\tthis.remove(f[1]);\n\t\t});\n\t}\n\n\tremove(fieldname) {\n\t\tconst fields_dict = this.list_view.page.fields_dict;\n\n\t\tif (fieldname in fields_dict) {\n\t\t\tfields_dict[fieldname].set_value(\"\");\n\t\t}\n\n\t\tlet filter = this.filter_list.get_filter(fieldname);\n\t\tif (filter) filter.remove();\n\t\tthis.filter_list.apply();\n\t\treturn Promise.resolve();\n\t}\n\n\tclear(refresh = true) {\n\t\tif (!refresh) {\n\t\t\tthis.trigger_refresh = false;\n\t\t}\n\n\t\tthis.filter_list.clear_filters();\n\n\t\tconst promises = [];\n\t\tconst fields_dict = this.list_view.page.fields_dict;\n\t\tfor (let key in fields_dict) {\n\t\t\tconst field = this.list_view.page.fields_dict[key];\n\t\t\tpromises.push(() => field.set_value(\"\"));\n\t\t}\n\t\treturn frappe.run_serially(promises).then(() => {\n\t\t\tthis.trigger_refresh = true;\n\t\t});\n\t}\n\n\tmake_standard_filters() {\n\t\tthis.standard_filters_wrapper = this.list_view.page.page_form.find('.standard-filter-section');\n\t\tlet fields = [\n\t\t\t{\n\t\t\t\tfieldtype: \"Data\",\n\t\t\t\tlabel: \"ID\",\n\t\t\t\tcondition: \"like\",\n\t\t\t\tfieldname: \"name\",\n\t\t\t\tonchange: () => this.refresh_list_view(),\n\t\t\t},\n\t\t];\n\n\t\tif (this.list_view.custom_filter_configs) {\n\t\t\tthis.list_view.custom_filter_configs.forEach((config) => {\n\t\t\t\tconfig.onchange = () => this.refresh_list_view();\n\t\t\t});\n\n\t\t\tfields = fields.concat(this.list_view.custom_filter_configs);\n\t\t}\n\n\t\tconst doctype_fields = this.list_view.meta.fields;\n\t\tconst title_field = this.list_view.meta.title_field;\n\n\t\tfields = fields.concat(\n\t\t\tdoctype_fields\n\t\t\t\t.filter(\n\t\t\t\t\t(df) =>\n\t\t\t\t\t\tdf.fieldname === title_field ||\n\t\t\t\t\t\t(df.in_standard_filter &&\n\t\t\t\t\t\t\tfrappe.model.is_value_type(df.fieldtype))\n\t\t\t\t)\n\t\t\t\t.map((df) => {\n\t\t\t\t\tlet options = df.options;\n\t\t\t\t\tlet condition = \"=\";\n\t\t\t\t\tlet fieldtype = df.fieldtype;\n\t\t\t\t\tif (\n\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\"Text\",\n\t\t\t\t\t\t\t\"Small Text\",\n\t\t\t\t\t\t\t\"Text Editor\",\n\t\t\t\t\t\t\t\"HTML Editor\",\n\t\t\t\t\t\t\t\"Data\",\n\t\t\t\t\t\t\t\"Code\",\n\t\t\t\t\t\t\t\"Read Only\",\n\t\t\t\t\t\t].includes(fieldtype)\n\t\t\t\t\t) {\n\t\t\t\t\t\tfieldtype = \"Data\";\n\t\t\t\t\t\tcondition = \"like\";\n\t\t\t\t\t}\n\t\t\t\t\tif (df.fieldtype == \"Select\" && df.options) {\n\t\t\t\t\t\toptions = df.options.split(\"\\n\");\n\t\t\t\t\t\tif (options.length > 0 && options[0] != \"\") {\n\t\t\t\t\t\t\toptions.unshift(\"\");\n\t\t\t\t\t\t\toptions = options.join(\"\\n\");\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\treturn {\n\t\t\t\t\t\tfieldtype: fieldtype,\n\t\t\t\t\t\tlabel: __(df.label),\n\t\t\t\t\t\toptions: options,\n\t\t\t\t\t\tfieldname: df.fieldname,\n\t\t\t\t\t\tcondition: condition,\n\t\t\t\t\t\tonchange: () => this.refresh_list_view(),\n\t\t\t\t\t\tignore_link_validation: fieldtype === \"Dynamic Link\",\n\t\t\t\t\t\tis_filter: 1,\n\t\t\t\t\t};\n\t\t\t\t})\n\t\t);\n\n\t\tfields.map(df => {\n\t\t\tthis.list_view.page.add_field(df, this.standard_filters_wrapper);\n\t\t});\n\t}\n\n\tget_standard_filters() {\n\t\tconst filters = [];\n\t\tconst fields_dict = this.list_view.page.fields_dict;\n\t\tfor (let key in fields_dict) {\n\t\t\tlet field = fields_dict[key];\n\t\t\tlet value = field.get_value();\n\t\t\tif (value) {\n\t\t\t\tif (field.df.condition === \"like\" && !value.includes(\"%\")) {\n\t\t\t\t\tvalue = \"%\" + value + \"%\";\n\t\t\t\t}\n\t\t\t\tfilters.push([\n\t\t\t\t\tthis.list_view.doctype,\n\t\t\t\t\tfield.df.fieldname,\n\t\t\t\t\tfield.df.condition || \"=\",\n\t\t\t\t\tvalue,\n\t\t\t\t]);\n\t\t\t}\n\t\t}\n\n\t\treturn filters;\n\t}\n\n\tmake_filter_list() {\n\t\t$(`<div class=\"filter-selector\">\n\t\t\t<button class=\"btn btn-default btn-sm filter-button\">\n\t\t\t\t<span class=\"filter-icon\">\n\t\t\t\t\t${frappe.utils.icon('filter')}\n\t\t\t\t</span>\n\t\t\t\t<span class=\"button-label hidden-xs\">\n\t\t\t\t\t${__(\"Filter\")}\n\t\t\t\t<span>\n\t\t\t</button>\n\t\t</div>`\n\t\t).appendTo(this.$filter_list_wrapper);\n\n\t\tthis.filter_button = this.$filter_list_wrapper.find('.filter-button');\n\t\tthis.filter_list = new frappe.ui.FilterGroup({\n\t\t\tbase_list: this.list_view,\n\t\t\tparent: this.$filter_list_wrapper,\n\t\t\tdoctype: this.list_view.doctype,\n\t\t\tfilter_button: this.filter_button,\n\t\t\tdefault_filters: [],\n\t\t\ton_change: () => this.refresh_list_view(),\n\t\t});\n\t}\n\n\tis_being_edited() {\n\t\t// returns true if user is currently editing filters\n\t\treturn (\n\t\t\tthis.filter_list &&\n\t\t\tthis.filter_list.wrapper &&\n\t\t\tthis.filter_list.wrapper.find(\".filter-box:visible\").length > 0\n\t\t);\n\t}\n}\n\n// utility function to validate view modes\nfrappe.views.view_modes = [\n\t\"List\",\n\t\"Report\",\n\t\"Dashboard\",\n\t\"Gantt\",\n\t\"Kanban\",\n\t\"Calendar\",\n\t\"Image\",\n\t\"Inbox\",\n\t\"Tree\",\n\t\"Map\",\n];\nfrappe.views.is_valid = (view_mode) =>\n\tfrappe.views.view_modes.includes(view_mode);\n", "export default class BulkOperations {\n\tconstructor({ doctype }) {\n\t\tif (!doctype) frappe.throw(__('Doctype required'));\n\t\tthis.doctype = doctype;\n\t}\n\n\tprint (docs) {\n\t\tconst print_settings = frappe.model.get_doc(':Print Settings', 'Print Settings');\n\t\tconst allow_print_for_draft = cint(print_settings.allow_print_for_draft);\n\t\tconst is_submittable = frappe.model.is_submittable(this.doctype);\n\t\tconst allow_print_for_cancelled = cint(print_settings.allow_print_for_cancelled);\n\n\t\tconst valid_docs = docs.filter(doc => {\n\t\t\treturn !is_submittable || doc.docstatus === 1 ||\n\t\t\t\t(allow_print_for_cancelled && doc.docstatus == 2) ||\n\t\t\t\t(allow_print_for_draft && doc.docstatus == 0) ||\n\t\t\t\tfrappe.user.has_role('Administrator');\n\t\t}).map(doc => doc.name);\n\n\t\tconst invalid_docs = docs.filter(doc => !valid_docs.includes(doc.name));\n\n\t\tif (invalid_docs.length > 0) {\n\t\t\tfrappe.msgprint(__('You selected Draft or Cancelled documents'));\n\t\t\treturn;\n\t\t}\n\n\t\tif (valid_docs.length === 0) {\n\t\t\tfrappe.msgprint(__('Select atleast 1 record for printing'));\n\t\t\treturn;\n\t\t}\n\n\t\tconst dialog = new frappe.ui.Dialog({\n\t\t\ttitle: __('Print Documents'),\n\t\t\tfields: [{\n\t\t\t\tfieldtype: 'Select',\n\t\t\t\tlabel: __('Letter Head'),\n\t\t\t\tfieldname: 'letter_sel',\n\t\t\t\tdefault: __('No Letterhead'),\n\t\t\t\toptions: this.get_letterhead_options()\n\t\t\t},\n\t\t\t{\n\t\t\t\tfieldtype: 'Select',\n\t\t\t\tlabel: __('Print Format'),\n\t\t\t\tfieldname: 'print_sel',\n\t\t\t\toptions: frappe.meta.get_print_formats(this.doctype)\n\t\t\t},\n\t\t\t{\n\t\t\t\tfieldtype: 'Select',\n\t\t\t\tlabel: __('Page Size'),\n\t\t\t\tfieldname: 'page_size',\n\t\t\t\toptions: frappe.meta.get_print_sizes(),\n\t\t\t\tdefault: print_settings.pdf_page_size\n\t\t\t},\n\t\t\t{\n\t\t\t\tfieldtype: 'Float',\n\t\t\t\tlabel: __('Page Height (in mm)'),\n\t\t\t\tfieldname: 'page_height',\n\t\t\t\tdepends_on: 'eval:doc.page_size == \"Custom\"',\n\t\t\t\tdefault: print_settings.pdf_page_height\n\t\t\t},\n\t\t\t{\n\t\t\t\tfieldtype: 'Float',\n\t\t\t\tlabel: __('Page Width (in mm)'),\n\t\t\t\tfieldname: 'page_width',\n\t\t\t\tdepends_on: 'eval:doc.page_size == \"Custom\"',\n\t\t\t\tdefault: print_settings.pdf_page_width\n\t\t\t}]\n\t\t});\n\n\t\tdialog.set_primary_action(__('Print'), args => {\n\t\t\tif (!args) return;\n\t\t\tconst default_print_format = frappe.get_meta(this.doctype).default_print_format;\n\t\t\tconst with_letterhead = args.letter_sel == __(\"No Letterhead\") ? 0 : 1;\n\t\t\tconst print_format = args.print_sel ? args.print_sel : default_print_format;\n\t\t\tconst json_string = JSON.stringify(valid_docs);\n\t\t\tconst letterhead = args.letter_sel;\n\n\t\t\tlet pdf_options;\n\t\t\tif (args.page_size === \"Custom\") {\n\t\t\t\tif (args.page_height === 0 || args.page_width === 0) {\n\t\t\t\t\tfrappe.throw(__('Page height and width cannot be zero'));\n\t\t\t\t}\n\t\t\t\tpdf_options = JSON.stringify({ \"page-height\": args.page_height, \"page-width\": args.page_width });\n\t\t\t} else {\n\t\t\t\tpdf_options = JSON.stringify({ \"page-size\": args.page_size });\n\t\t\t}\n\n\t\t\tconst w = window.open(\n\t\t\t\t'/api/method/frappe.utils.print_format.download_multi_pdf?' +\n\t\t\t\t'doctype=' + encodeURIComponent(this.doctype) +\n\t\t\t\t'&name=' + encodeURIComponent(json_string) +\n\t\t\t\t'&format=' + encodeURIComponent(print_format) +\n\t\t\t\t'&no_letterhead=' + (with_letterhead ? '0' : '1') +\n\t\t\t\t'&letterhead=' + encodeURIComponent(letterhead) +\n\t\t\t\t'&options=' + encodeURIComponent(pdf_options)\n\t\t\t);\n\n\t\t\tif (!w) {\n\t\t\t\tfrappe.msgprint(__('Please enable pop-ups'));\n\t\t\t\treturn;\n\t\t\t}\n\t\t});\n\n\t\tdialog.show();\n\t}\n\n\tget_letterhead_options () {\n\t\tconst letterhead_options = [__(\"No Letterhead\")];\n\t\tfrappe.call({\n\t\t\tmethod: \"frappe.client.get_list\",\n\t\t\targs: {\n\t\t\t\tdoctype: 'Letter Head',\n\t\t\t\tfields: ['name', 'is_default'],\n\t\t\t\tlimit_page_length: 0\n\t\t\t},\n\t\t\tasync: false,\n\t\t\tcallback (r) {\n\t\t\t\tif (r.message) {\n\t\t\t\t\tr.message.forEach(letterhead => {\n\t\t\t\t\t\tletterhead_options.push(letterhead.name);\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\t\treturn letterhead_options;\n\t}\n\n\tdelete (docnames, done = null) {\n\t\tfrappe\n\t\t\t.call({\n\t\t\t\tmethod: 'frappe.desk.reportview.delete_items',\n\t\t\t\tfreeze: true,\n\t\t\t\targs: {\n\t\t\t\t\titems: docnames,\n\t\t\t\t\tdoctype: this.doctype\n\t\t\t\t}\n\t\t\t})\n\t\t\t.then((r) => {\n\t\t\t\tlet failed = r.message;\n\t\t\t\tif (!failed) failed = [];\n\n\t\t\t\tif (failed.length && !r._server_messages) {\n\t\t\t\t\tfrappe.throw(__('Cannot delete {0}', [failed.map(f => f.bold()).join(', ')]));\n\t\t\t\t}\n\t\t\t\tif (failed.length < docnames.length) {\n\t\t\t\t\tfrappe.utils.play_sound('delete');\n\t\t\t\t\tif (done) done();\n\t\t\t\t}\n\t\t\t});\n\t}\n\n\tassign (docnames, done) {\n\t\tif (docnames.length > 0) {\n\t\t\tconst assign_to = new frappe.ui.form.AssignToDialog({\n\t\t\t\tobj: this,\n\t\t\t\tmethod: 'frappe.desk.form.assign_to.add_multiple',\n\t\t\t\tdoctype: this.doctype,\n\t\t\t\tdocname: docnames,\n\t\t\t\tbulk_assign: true,\n\t\t\t\tre_assign: true,\n\t\t\t\tcallback: done\n\t\t\t});\n\t\t\tassign_to.dialog.clear();\n\t\t\tassign_to.dialog.show();\n\t\t} else {\n\t\t\tfrappe.msgprint(__('Select records for assignment'));\n\t\t}\n\t}\n\n\tapply_assignment_rule (docnames, done) {\n\t\tif (docnames.length > 0) {\n\t\t\tfrappe.call('frappe.automation.doctype.assignment_rule.assignment_rule.bulk_apply', {\n\t\t\t\tdoctype: this.doctype,\n\t\t\t\tdocnames: docnames\n\t\t\t}).then(() => done());\n\t\t}\n\t}\n\n\tsubmit_or_cancel (docnames, action = 'submit', done = null) {\n\t\taction = action.toLowerCase();\n\t\tfrappe\n\t\t\t.call({\n\t\t\t\tmethod: 'frappe.desk.doctype.bulk_update.bulk_update.submit_cancel_or_update_docs',\n\t\t\t\targs: {\n\t\t\t\t\tdoctype: this.doctype,\n\t\t\t\t\taction: action,\n\t\t\t\t\tdocnames: docnames\n\t\t\t\t},\n\t\t\t})\n\t\t\t.then((r) => {\n\t\t\t\tlet failed = r.message;\n\t\t\t\tif (!failed) failed = [];\n\n\t\t\t\tif (failed.length && !r._server_messages) {\n\t\t\t\t\tfrappe.throw(__('Cannot {0} {1}', [action, failed.map(f => f.bold()).join(', ')]));\n\t\t\t\t}\n\t\t\t\tif (failed.length < docnames.length) {\n\t\t\t\t\tfrappe.utils.play_sound(action);\n\t\t\t\t\tif (done) done();\n\t\t\t\t}\n\t\t\t});\n\t}\n\n\tedit (docnames, field_mappings, done) {\n\t\tlet field_options = Object.keys(field_mappings).sort();\n\t\tconst status_regex = /status/i;\n\n\t\tconst default_field = field_options.find(value => status_regex.test(value));\n\n\t\tconst dialog = new frappe.ui.Dialog({\n\t\t\ttitle: __('Bulk Edit'),\n\t\t\tfields: [\n\t\t\t\t{\n\t\t\t\t\t'fieldtype': 'Select',\n\t\t\t\t\t'options': field_options,\n\t\t\t\t\t'default': default_field,\n\t\t\t\t\t'label': __('Field'),\n\t\t\t\t\t'fieldname': 'field',\n\t\t\t\t\t'reqd': 1,\n\t\t\t\t\t'onchange': () => {\n\t\t\t\t\t\tset_value_field(dialog);\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t'fieldtype': 'Data',\n\t\t\t\t\t'label': __('Value'),\n\t\t\t\t\t'fieldname': 'value',\n\t\t\t\t\tonchange() {\n\t\t\t\t\t\tshow_help_text();\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t],\n\t\t\tprimary_action: ({ value }) => {\n\t\t\t\tconst fieldname = field_mappings[dialog.get_value('field')].fieldname;\n\t\t\t\tdialog.disable_primary_action();\n\t\t\t\tfrappe.call({\n\t\t\t\t\tmethod: 'frappe.desk.doctype.bulk_update.bulk_update.submit_cancel_or_update_docs',\n\t\t\t\t\targs: {\n\t\t\t\t\t\tdoctype: this.doctype,\n\t\t\t\t\t\tfreeze: true,\n\t\t\t\t\t\tdocnames: docnames,\n\t\t\t\t\t\taction: 'update',\n\t\t\t\t\t\tdata: {\n\t\t\t\t\t\t\t[fieldname]: value || null\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}).then(r => {\n\t\t\t\t\tlet failed = r.message || [];\n\n\t\t\t\t\tif (failed.length && !r._server_messages) {\n\t\t\t\t\t\tdialog.enable_primary_action();\n\t\t\t\t\t\tfrappe.throw(__('Cannot update {0}', [failed.map(f => f.bold ? f.bold() : f).join(', ')]));\n\t\t\t\t\t}\n\t\t\t\t\tdone();\n\t\t\t\t\tdialog.hide();\n\t\t\t\t\tfrappe.show_alert(__('Updated successfully'));\n\t\t\t\t});\n\t\t\t},\n\t\t\tprimary_action_label: __('Update {0} records', [docnames.length]),\n\t\t});\n\n\t\tif (default_field) set_value_field(dialog); // to set `Value` df based on default `Field`\n\t\tshow_help_text();\n\n\t\tfunction set_value_field (dialogObj) {\n\t\t\tconst new_df = Object.assign({},\n\t\t\t\tfield_mappings[dialogObj.get_value('field')]);\n\t\t\t/* if the field label has status in it and\n\t\t\tif it has select fieldtype with no default value then\n\t\t\tset a default value from the available option. */\n\t\t\tif (new_df.label.match(status_regex) &&\n\t\t\t\tnew_df.fieldtype === 'Select' && !new_df.default) {\n\t\t\t\tlet options = [];\n\t\t\t\tif (typeof new_df.options === \"string\") {\n\t\t\t\t\toptions = new_df.options.split(\"\\n\");\n\t\t\t\t}\n\t\t\t\t//set second option as default if first option is an empty string\n\t\t\t\tnew_df.default = options[0] || options[1];\n\t\t\t}\n\t\t\tnew_df.label = __('Value');\n\t\t\tnew_df.onchange = show_help_text;\n\n\t\t\tdelete new_df.depends_on;\n\t\t\tdialogObj.replace_field('value', new_df);\n\t\t\tshow_help_text();\n\t\t}\n\n\t\tfunction show_help_text() {\n\t\t\tlet value = dialog.get_value('value');\n\t\t\tif (value == null || value === '') {\n\t\t\t\tdialog.set_df_property('value', 'description', __('You have not entered a value. The field will be set to empty.'));\n\t\t\t} else {\n\t\t\t\tdialog.set_df_property('value', 'description', '');\n\t\t\t}\n\t\t}\n\n\t\tdialog.refresh();\n\t\tdialog.show();\n\t}\n\n\tadd_tags (docnames, done) {\n\t\tconst dialog = new frappe.ui.Dialog({\n\t\t\ttitle: __('Add Tags'),\n\t\t\tfields: [\n\t\t\t\t{\n\t\t\t\t\tfieldtype: 'MultiSelectPills',\n\t\t\t\t\tfieldname: 'tags',\n\t\t\t\t\tlabel: __(\"Tags\"),\n\t\t\t\t\treqd: true,\n\t\t\t\t\tget_data: function (txt) {\n\t\t\t\t\t\treturn frappe.db.get_link_options(\"Tag\", txt);\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t],\n\t\t\tprimary_action_label: __(\"Add\"),\n\t\t\tprimary_action: () => {\n\t\t\t\tlet args = dialog.get_values();\n\t\t\t\tif (args && args.tags) {\n\t\t\t\t\tdialog.set_message(\"Adding Tags...\");\n\n\t\t\t\t\tfrappe.call({\n\t\t\t\t\t\tmethod: \"frappe.desk.doctype.tag.tag.add_tags\",\n\t\t\t\t\t\targs: {\n\t\t\t\t\t\t\t'tags': args.tags,\n\t\t\t\t\t\t\t'dt': this.doctype,\n\t\t\t\t\t\t\t'docs': docnames,\n\t\t\t\t\t\t},\n\t\t\t\t\t\tcallback: () => {\n\t\t\t\t\t\t\tdialog.hide();\n\t\t\t\t\t\t\tdone();\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t},\n\t\t});\n\t\tdialog.show();\n\t}\n\n\texport (doctype, docnames) {\n\t\tfrappe.require('data_import_tools.bundle.js', () => {\n\t\t\tconst data_exporter = new frappe.data_import.DataExporter(doctype, 'Insert New Records');\n\t\t\tdata_exporter.dialog.set_value('export_records', 'by_filter');\n\t\t\tdata_exporter.filter_group.add_filters_to_filter_group(\n\t\t\t\t[[doctype, \"name\", \"in\", docnames, false]]\n\t\t\t);\n\t\t});\n\t}\n}\n", "export default class ListSettings {\n\tconstructor({ listview, doctype, meta, settings }) {\n\t\tif (!doctype) {\n\t\t\tfrappe.throw('DocType required');\n\t\t}\n\n\t\tthis.listview = listview;\n\t\tthis.doctype = doctype;\n\t\tthis.meta = meta;\n\t\tthis.settings = settings;\n\t\tthis.dialog = null;\n\t\tthis.fields = this.settings && this.settings.fields ? JSON.parse(this.settings.fields) : [];\n\t\tthis.subject_field = null;\n\n\t\tfrappe.model.with_doctype(\"List View Settings\", () => {\n\t\t\tthis.make();\n\t\t\tthis.get_listview_fields(meta);\n\t\t\tthis.setup_fields();\n\t\t\tthis.setup_remove_fields();\n\t\t\tthis.add_new_fields();\n\t\t\tthis.show_dialog();\n\t\t});\n\t}\n\n\tmake() {\n\t\tlet me = this;\n\n\t\tlet list_view_settings = frappe.get_meta(\"List View Settings\");\n\n\t\tme.dialog = new frappe.ui.Dialog({\n\t\t\ttitle: __(\"{0} Settings\", [__(me.doctype)]),\n\t\t\tfields: list_view_settings.fields\n\t\t});\n\t\tme.dialog.set_values(me.settings);\n\t\tme.dialog.set_primary_action(__('Save'), () => {\n\t\t\tlet values = me.dialog.get_values();\n\n\t\t\tfrappe.show_alert({\n\t\t\t\tmessage: __(\"Saving\"),\n\t\t\t\tindicator: \"green\"\n\t\t\t});\n\n\t\t\tfrappe.call({\n\t\t\t\tmethod: \"frappe.desk.doctype.list_view_settings.list_view_settings.save_listview_settings\",\n\t\t\t\targs: {\n\t\t\t\t\tdoctype: me.doctype,\n\t\t\t\t\tlistview_settings: values,\n\t\t\t\t\tremoved_listview_fields: me.removed_fields || []\n\t\t\t\t},\n\t\t\t\tcallback: function (r) {\n\t\t\t\t\tme.listview.refresh_columns(r.message.meta, r.message.listview_settings);\n\t\t\t\t\tme.dialog.hide();\n\t\t\t\t}\n\t\t\t});\n\t\t});\n\n\t\tme.dialog.fields_dict[\"total_fields\"].df.onchange = () => me.refresh();\n\t}\n\n\trefresh() {\n\t\tlet me = this;\n\n\t\tme.setup_fields();\n\t\tme.add_new_fields();\n\t\tme.setup_remove_fields();\n\t}\n\n\tshow_dialog() {\n\t\tlet me = this;\n\n\t\tif (!this.settings.fields) {\n\t\t\tme.update_fields();\n\t\t}\n\n\t\tif (!me.dialog.get_value(\"total_fields\")) {\n\t\t\tlet field_count = me.fields.length;\n\n\t\t\tif (field_count < 4) {\n\t\t\t\tfield_count = 4;\n\t\t\t} else if (field_count > 10) {\n\t\t\t\tfield_count = 10;\n\t\t\t}\n\n\t\t\tme.dialog.set_value(\"total_fields\", field_count);\n\t\t}\n\n\t\tme.dialog.show();\n\t}\n\n\tsetup_fields() {\n\t\tfunction is_status_field(field) {\n\t\t\treturn field.fieldname === \"status_field\";\n\t\t}\n\n\t\tlet me = this;\n\n\t\tlet fields_html = me.dialog.get_field(\"fields_html\");\n\t\tlet wrapper = fields_html.$wrapper[0];\n\t\tlet fields = ``;\n\t\tlet total_fields = me.dialog.get_values().total_fields || me.settings.total_fields;\n\n\t\tfor (let idx in me.fields) {\n\t\t\tif (idx == parseInt(total_fields)) {\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tlet is_sortable = (idx == 0) ? `` : `sortable`;\n\t\t\tlet show_sortable_handle = (idx == 0) ? `hide` : ``;\n\t\t\tlet can_remove = (idx == 0 || is_status_field(me.fields[idx])) ? `hide` : ``;\n\n\t\t\tfields += `\n\t\t\t\t<div class=\"control-input flex align-center form-control fields_order ${is_sortable}\"\n\t\t\t\t\tstyle=\"display: block; margin-bottom: 5px;\" data-fieldname=\"${me.fields[idx].fieldname}\"\n\t\t\t\t\tdata-label=\"${me.fields[idx].label}\" data-type=\"${me.fields[idx].type}\">\n\n\t\t\t\t\t<div class=\"row\">\n\t\t\t\t\t\t<div class=\"col-md-1\">\n\t\t\t\t\t\t\t${frappe.utils.icon(\"drag\", \"xs\", \"\", \"\", \"sortable-handle \" + show_sortable_handle)}\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<div class=\"col-md-10\" style=\"padding-left:0px;\">\n\t\t\t\t\t\t\t${me.fields[idx].label}\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<div class=\"col-md-1 ${can_remove}\">\n\t\t\t\t\t\t\t<a class=\"text-muted remove-field\" data-fieldname=\"${me.fields[idx].fieldname}\">\n\t\t\t\t\t\t\t\t${frappe.utils.icon(\"delete\", \"xs\")}\n\t\t\t\t\t\t\t</a>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t</div>`;\n\t\t}\n\n\t\tfields_html.html(`\n\t\t\t<div class=\"form-group\">\n\t\t\t\t<div class=\"clearfix\">\n\t\t\t\t\t<label class=\"control-label\" style=\"padding-right: 0px;\">Fields</label>\n\t\t\t\t</div>\n\t\t\t\t<div class=\"control-input-wrapper\">\n\t\t\t\t${fields}\n\t\t\t\t</div>\n\t\t\t\t<p class=\"help-box small text-muted\">\n\t\t\t\t\t<a class=\"add-new-fields text-muted\">\n\t\t\t\t\t\t+ Add / Remove Fields\n\t\t\t\t\t</a>\n\t\t\t\t</p>\n\t\t\t</div>\n\t\t`);\n\n\t\tnew Sortable(wrapper.getElementsByClassName(\"control-input-wrapper\")[0], {\n\t\t\thandle: '.sortable-handle',\n\t\t\tdraggable: '.sortable',\n\t\t\tonUpdate: () => {\n\t\t\t\tme.update_fields();\n\t\t\t\tme.refresh();\n\t\t\t}\n\t\t});\n\t}\n\n\tadd_new_fields() {\n\t\tlet me = this;\n\n\t\tlet fields_html = me.dialog.get_field(\"fields_html\");\n\t\tlet add_new_fields = fields_html.$wrapper[0].getElementsByClassName(\"add-new-fields\")[0];\n\t\tadd_new_fields.onclick = () => me.column_selector();\n\t}\n\n\tsetup_remove_fields() {\n\t\tlet me = this;\n\n\t\tlet fields_html = me.dialog.get_field(\"fields_html\");\n\t\tlet remove_fields = fields_html.$wrapper[0].getElementsByClassName(\"remove-field\");\n\n\t\tfor (let idx = 0; idx < remove_fields.length; idx++) {\n\t\t\tremove_fields.item(idx).onclick = () => me.remove_fields(remove_fields.item(idx).getAttribute(\"data-fieldname\"));\n\t\t}\n\t}\n\n\tremove_fields(fieldname) {\n\t\tlet me = this;\n\t\tlet existing_fields = me.fields.map(f => f.fieldname);\n\n\t\tfor (let idx in me.fields) {\n\t\t\tlet field = me.fields[idx];\n\n\t\t\tif (field.fieldname == fieldname) {\n\t\t\t\tme.fields.splice(idx, 1);\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\tme.set_removed_fields(me.get_removed_listview_fields(me.fields.map(f => f.fieldname), existing_fields));\n\t\tme.refresh();\n\t\tme.update_fields();\n\t}\n\n\tupdate_fields() {\n\t\tlet me = this;\n\n\t\tlet fields_html = me.dialog.get_field(\"fields_html\");\n\t\tlet wrapper = fields_html.$wrapper[0];\n\n\t\tlet fields_order = wrapper.getElementsByClassName(\"fields_order\");\n\t\tme.fields = [];\n\n\t\tfor (let idx = 0; idx < fields_order.length; idx++) {\n\t\t\tme.fields.push({\n\t\t\t\tfieldname: fields_order.item(idx).getAttribute(\"data-fieldname\"),\n\t\t\t\tlabel: fields_order.item(idx).getAttribute(\"data-label\")\n\t\t\t});\n\t\t}\n\n\t\tme.dialog.set_value(\"fields\", JSON.stringify(me.fields));\n\t\tme.dialog.get_value(\"fields\");\n\t}\n\n\tcolumn_selector() {\n\t\tlet me = this;\n\n\t\tlet d = new frappe.ui.Dialog({\n\t\t\ttitle: __(\"{0} Fields\", [__(me.doctype)]),\n\t\t\tfields: [\n\t\t\t\t{\n\t\t\t\t\tlabel: __(\"Reset Fields\"),\n\t\t\t\t\tfieldtype: \"Button\",\n\t\t\t\t\tfieldname: \"reset_fields\",\n\t\t\t\t\tclick: () => me.reset_listview_fields(d)\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tlabel: __(\"Select Fields\"),\n\t\t\t\t\tfieldtype: \"MultiCheck\",\n\t\t\t\t\tfieldname: \"fields\",\n\t\t\t\t\toptions: me.get_doctype_fields(me.meta, me.fields.map(f => f.fieldname)),\n\t\t\t\t\tcolumns: 2\n\t\t\t\t}\n\t\t\t]\n\t\t});\n\t\td.set_primary_action(__('Save'), () => {\n\t\t\tlet values = d.get_values().fields;\n\n\t\t\tme.set_removed_fields(me.get_removed_listview_fields(values, me.fields.map(f => f.fieldname)));\n\n\t\t\tme.fields = [];\n\t\t\tme.set_subject_field(me.meta);\n\t\t\tme.set_status_field();\n\n\t\t\tfor (let idx in values) {\n\t\t\t\tlet value = values[idx];\n\n\t\t\t\tif (me.fields.length === parseInt(me.dialog.get_values().total_fields)) {\n\t\t\t\t\tbreak;\n\t\t\t\t} else if (value != me.subject_field.fieldname) {\n\t\t\t\t\tlet field = frappe.meta.get_docfield(me.doctype, value);\n\t\t\t\t\tif (field) {\n\t\t\t\t\t\tme.fields.push({\n\t\t\t\t\t\t\tlabel: field.label,\n\t\t\t\t\t\t\tfieldname: field.fieldname\n\t\t\t\t\t\t});\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tme.refresh();\n\t\t\tme.dialog.set_value(\"fields\", JSON.stringify(me.fields));\n\t\t\td.hide();\n\t\t});\n\t\td.show();\n\t}\n\n\treset_listview_fields(dialog) {\n\t\tlet me = this;\n\n\t\tfrappe.xcall(\"frappe.desk.doctype.list_view_settings.list_view_settings.get_default_listview_fields\", {\n\t\t\tdoctype: me.doctype\n\t\t}).then((fields) => {\n\t\t\tlet field = dialog.get_field(\"fields\");\n\t\t\tfield.df.options = me.get_doctype_fields(me.meta, fields);\n\t\t\tdialog.refresh();\n\t\t});\n\n\t}\n\n\tget_listview_fields(meta) {\n\t\tlet me = this;\n\n\t\tif (!me.settings.fields) {\n\t\t\tme.set_list_view_fields(meta);\n\t\t} else {\n\t\t\tme.fields = JSON.parse(this.settings.fields);\n\t\t}\n\n\t\tme.fields.uniqBy(f => f.fieldname);\n\t}\n\n\tset_list_view_fields(meta) {\n\t\tlet me = this;\n\n\t\tme.set_subject_field(meta);\n\t\tme.set_status_field();\n\n\t\tmeta.fields.forEach(field => {\n\t\t\tif (field.in_list_view && !in_list(frappe.model.no_value_type, field.fieldtype) &&\n\t\t\t\tme.subject_field.fieldname != field.fieldname) {\n\n\t\t\t\tme.fields.push({\n\t\t\t\t\tlabel: field.label,\n\t\t\t\t\tfieldname: field.fieldname\n\t\t\t\t});\n\t\t\t}\n\t\t});\n\t}\n\n\tset_subject_field(meta) {\n\t\tlet me = this;\n\n\t\tme.subject_field = {\n\t\t\tlabel: \"ID\",\n\t\t\tfieldname: \"name\"\n\t\t};\n\n\t\tif (meta.title_field) {\n\t\t\tlet field = frappe.meta.get_docfield(me.doctype, meta.title_field.trim());\n\n\t\t\tme.subject_field = {\n\t\t\t\tlabel: field.label,\n\t\t\t\tfieldname: field.fieldname\n\t\t\t};\n\t\t}\n\n\t\tme.fields.push(me.subject_field);\n\t}\n\n\tset_status_field() {\n\t\tlet me = this;\n\n\t\tif (frappe.has_indicator(me.doctype)) {\n\t\t\tme.fields.push({\n\t\t\t\ttype: \"Status\",\n\t\t\t\tlabel: \"Status\",\n\t\t\t\tfieldname: \"status_field\"\n\t\t\t});\n\t\t}\n\t}\n\n\tget_doctype_fields(meta, fields) {\n\t\tlet multiselect_fields = [];\n\n\t\tmeta.fields.forEach(field => {\n\t\t\tif (!in_list(frappe.model.no_value_type, field.fieldtype)) {\n\t\t\t\tmultiselect_fields.push({\n\t\t\t\t\tlabel: field.label,\n\t\t\t\t\tvalue: field.fieldname,\n\t\t\t\t\tchecked: in_list(fields, field.fieldname)\n\t\t\t\t});\n\t\t\t}\n\t\t});\n\n\t\treturn multiselect_fields;\n\t}\n\n\tget_removed_listview_fields(new_fields, existing_fields) {\n\t\tlet me = this;\n\t\tlet removed_fields = [];\n\n\t\tif (frappe.has_indicator(me.doctype)) {\n\t\t\tnew_fields.push(\"status_field\");\n\t\t}\n\n\t\texisting_fields.forEach(column => {\n\t\t\tif (!in_list(new_fields, column)) {\n\t\t\t\tremoved_fields.push(column);\n\t\t\t}\n\t\t});\n\n\t\treturn removed_fields;\n\t}\n\n\tset_removed_fields(fields) {\n\t\tlet me = this;\n\n\t\tif (me.removed_fields) {\n\t\t\tme.removed_fields = me.removed_fields.concat(fields);\n\t\t} else {\n\t\t\tme.removed_fields = fields;\n\t\t}\n\t}\n}\n", "import BulkOperations from \"./bulk_operations\";\nimport ListSettings from \"./list_settings\";\n\nfrappe.provide(\"frappe.views\");\n\nfrappe.views.ListView = class ListView extends frappe.views.BaseList {\n\tstatic load_last_view() {\n\t\tconst route = frappe.get_route();\n\t\tconst doctype = route[1];\n\n\t\tif (route.length === 2) {\n\t\t\tconst user_settings = frappe.get_user_settings(doctype);\n\t\t\tconst last_view = user_settings.last_view;\n\t\t\tfrappe.set_route(\n\t\t\t\t\"list\",\n\t\t\t\tfrappe.router.doctype_layout || doctype,\n\t\t\t\tfrappe.views.is_valid(last_view) ? last_view.toLowerCase() : \"list\"\n\t\t\t);\n\t\t\treturn true;\n\t\t}\n\t\treturn false;\n\t}\n\n\tconstructor(opts) {\n\t\tsuper(opts);\n\t\tthis.show();\n\t}\n\n\thas_permissions() {\n\t\tconst can_read = frappe.perm.has_perm(this.doctype, 0, \"read\");\n\t\treturn can_read;\n\t}\n\n\tshow() {\n\t\tthis.parent.disable_scroll_to_top = true;\n\t\tsuper.show();\n\t}\n\n\tcheck_permissions() {\n\t\tif (!this.has_permissions()) {\n\t\t\tfrappe.set_route('');\n\t\t\tfrappe.throw(__(\"Not permitted to view {0}\", [this.doctype]));\n\t\t}\n\t}\n\n\tshow_skeleton() {\n\t\tthis.$list_skeleton = this.parent.page.container.find('.list-skeleton');\n\t\tif (!this.$list_skeleton.length) {\n\t\t\tthis.$list_skeleton = $(`\n\t\t\t\t<div class=\"row list-skeleton\">\n\t\t\t\t\t<div class=\"col-lg-2\">\n\t\t\t\t\t\t<div class=\"list-skeleton-box\"></div>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div class=\"col\">\n\t\t\t\t\t\t<div class=\"list-skeleton-box\"></div>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t`);\n\t\t\tthis.parent.page.container.find('.page-content').append(this.$list_skeleton);\n\t\t}\n\t\tthis.parent.page.container.find('.layout-main').hide();\n\t\tthis.$list_skeleton.show();\n\t}\n\n\thide_skeleton() {\n\t\tthis.$list_skeleton && this.$list_skeleton.hide();\n\t\tthis.parent.page.container.find('.layout-main').show();\n\t}\n\n\tget view_name() {\n\t\treturn \"List\";\n\t}\n\n\tget view_user_settings() {\n\t\treturn this.user_settings[this.view_name] || {};\n\t}\n\n\tsetup_defaults() {\n\t\tsuper.setup_defaults();\n\n\t\tthis.view = \"List\";\n\t\t// initialize with saved order by\n\t\tthis.sort_by = this.view_user_settings.sort_by || \"modified\";\n\t\tthis.sort_order = this.view_user_settings.sort_order || \"desc\";\n\n\t\t// build menu items\n\t\tthis.menu_items = this.menu_items.concat(this.get_menu_items());\n\n\t\t// set filters from view_user_settings or list_settings\n\t\tif (Array.isArray(this.view_user_settings.filters)) {\n\t\t\t// Priority 1: view_user_settings\n\t\t\tconst saved_filters = this.view_user_settings.filters;\n\t\t\tthis.filters = this.validate_filters(saved_filters);\n\t\t} else {\n\t\t\t// Priority 2: filters in listview_settings\n\t\t\tthis.filters = (this.settings.filters || []).map((f) => {\n\t\t\t\tif (f.length === 3) {\n\t\t\t\t\tf = [this.doctype, f[0], f[1], f[2]];\n\t\t\t\t}\n\t\t\t\treturn f;\n\t\t\t});\n\t\t}\n\n\t\tif (this.view_name == 'List') this.toggle_paging = true;\n\n\t\tthis.patch_refresh_and_load_lib();\n\t\treturn this.get_list_view_settings();\n\t}\n\n\tget_list_view_settings() {\n\t\treturn frappe\n\t\t\t.call(\"frappe.desk.listview.get_list_settings\", {\n\t\t\t\tdoctype: this.doctype,\n\t\t\t})\n\t\t\t.then((doc) => (this.list_view_settings = doc.message || {}));\n\t}\n\n\ton_sort_change(sort_by, sort_order) {\n\t\tthis.sort_by = sort_by;\n\t\tthis.sort_order = sort_order;\n\t\tsuper.on_sort_change();\n\t}\n\n\tvalidate_filters(filters) {\n\t\tlet valid_fields = this.meta.fields.map(df => df.fieldname);\n\t\tvalid_fields = valid_fields.concat(frappe.model.std_fields_list);\n\t\treturn filters\n\t\t\t.filter((f) => valid_fields.includes(f[1]))\n\t\t\t.uniqBy((f) => f[1]);\n\t}\n\n\tsetup_page() {\n\t\tthis.parent.list_view = this;\n\t\tsuper.setup_page();\n\t}\n\n\tsetup_page_head() {\n\t\tsuper.setup_page_head();\n\t\tthis.set_primary_action();\n\t\tthis.set_actions_menu_items();\n\t}\n\n\tset_actions_menu_items() {\n\t\tthis.actions_menu_items = this.get_actions_menu_items();\n\t\tthis.workflow_action_menu_items = this.get_workflow_action_menu_items();\n\t\tthis.workflow_action_items = {};\n\n\t\tconst actions = this.actions_menu_items.concat(\n\t\t\tthis.workflow_action_menu_items\n\t\t);\n\t\tactions.map((item) => {\n\t\t\tconst $item = this.page.add_actions_menu_item(\n\t\t\t\titem.label,\n\t\t\t\titem.action,\n\t\t\t\titem.standard\n\t\t\t);\n\t\t\tif (item.class) {\n\t\t\t\t$item.addClass(item.class);\n\t\t\t}\n\t\t\tif (item.is_workflow_action && $item) {\n\t\t\t\t// can be used to dynamically show or hide action\n\t\t\t\tthis.workflow_action_items[item.name] = $item;\n\t\t\t}\n\t\t});\n\t}\n\n\tshow_restricted_list_indicator_if_applicable() {\n\t\tconst match_rules_list = frappe.perm.get_match_rules(this.doctype);\n\t\tif (match_rules_list.length) {\n\t\t\tthis.restricted_list = $(\n\t\t\t\t`<button class=\"btn btn-xs restricted-button flex align-center\">\n\t\t\t\t\t${frappe.utils.icon('restriction', 'xs')}\n\t\t\t\t</button>`\n\t\t\t).click(() => this.show_restrictions(match_rules_list)).appendTo(this.page.page_form);\n\t\t}\n\t}\n\n\tshow_restrictions(match_rules_list = []) {\n\t\tfrappe.msgprint(\n\t\t\tfrappe.render_template(\"list_view_permission_restrictions\", {\n\t\t\t\tcondition_list: match_rules_list,\n\t\t\t}),\n\t\t\t__(\"Restrictions\", null, \"Title of message showing restrictions in list view\")\n\t\t);\n\t}\n\n\tset_fields() {\n\t\tlet fields = [].concat(\n\t\t\tfrappe.model.std_fields_list,\n\t\t\tthis.get_fields_in_list_view(),\n\t\t\t[this.meta.title_field, this.meta.image_field],\n\t\t\tthis.settings.add_fields || [],\n\t\t\tthis.meta.track_seen ? \"_seen\" : null,\n\t\t\tthis.sort_by,\n\t\t\t\"enabled\",\n\t\t\t\"disabled\",\n\t\t\t\"color\"\n\t\t);\n\n\t\tfields.forEach((f) => this._add_field(f));\n\n\t\tthis.fields.forEach((f) => {\n\t\t\tconst df = frappe.meta.get_docfield(f[1], f[0]);\n\t\t\tif (\n\t\t\t\tdf &&\n\t\t\t\tdf.fieldtype === \"Currency\" &&\n\t\t\t\tdf.options &&\n\t\t\t\t!df.options.includes(\":\")\n\t\t\t) {\n\t\t\t\tthis._add_field(df.options);\n\t\t\t}\n\t\t});\n\t}\n\n\tpatch_refresh_and_load_lib() {\n\t\t// throttle refresh for 1s\n\t\tthis.refresh = this.refresh.bind(this);\n\t\tthis.refresh = frappe.utils.throttle(this.refresh, 1000);\n\t\tthis.load_lib = new Promise((resolve) => {\n\t\t\tif (this.required_libs) {\n\t\t\t\tfrappe.require(this.required_libs, resolve);\n\t\t\t} else {\n\t\t\t\tresolve();\n\t\t\t}\n\t\t});\n\t\t// call refresh every 5 minutes\n\t\tconst interval = 5 * 60 * 1000;\n\t\tsetInterval(() => {\n\t\t\t// don't call if route is different\n\t\t\tif (frappe.get_route_str() === this.page_name) {\n\t\t\t\tthis.refresh();\n\t\t\t}\n\t\t}, interval);\n\t}\n\n\tset_primary_action() {\n\t\tif (this.can_create) {\n\t\t\tconst doctype_name = __(frappe.router.doctype_layout) || __(this.doctype);\n\n\t\t\t// Better style would be __(\"Add {0}\", [doctype_name], \"Primary action in list view\")\n\t\t\t// Keeping it like this to not disrupt existing translations\n\t\t\tconst label = `${__(\"Add\", null, \"Primary action in list view\")} ${doctype_name}`;\n\t\t\tthis.page.set_primary_action(\n\t\t\t\tlabel,\n\t\t\t\t() => {\n\t\t\t\t\tif (this.settings.primary_action) {\n\t\t\t\t\t\tthis.settings.primary_action();\n\t\t\t\t\t} else {\n\t\t\t\t\t\tthis.make_new_doc();\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\t\"add\"\n\t\t\t);\n\t\t} else {\n\t\t\tthis.page.clear_primary_action();\n\t\t}\n\t}\n\n\tmake_new_doc() {\n\t\tconst doctype = this.doctype;\n\t\tconst options = {};\n\t\tthis.filter_area.get().forEach((f) => {\n\t\t\tif (f[2] === \"=\" && frappe.model.is_non_std_field(f[1])) {\n\t\t\t\toptions[f[1]] = f[3];\n\t\t\t}\n\t\t});\n\t\tfrappe.new_doc(doctype, options);\n\t}\n\n\tsetup_view() {\n\t\tthis.setup_columns();\n\t\tthis.render_header();\n\t\tthis.render_skeleton();\n\t\tthis.setup_events();\n\t\tthis.settings.onload && this.settings.onload(this);\n\t\tthis.show_restricted_list_indicator_if_applicable();\n\t}\n\n\trefresh_columns(meta, list_view_settings) {\n\t\tthis.meta = meta;\n\t\tthis.list_view_settings = list_view_settings;\n\n\t\tthis.setup_columns();\n\t\tthis.refresh(true);\n\t}\n\n\trefresh(refresh_header=false) {\n\t\tsuper.refresh().then(() => {\n\t\t\tthis.render_header(refresh_header);\n\t\t\tthis.update_checkbox();\n\t\t\tthis.update_url_with_filters();\n\t\t});\n\t}\n\n\tupdate_checkbox(target) {\n\t\tif (!this.$checkbox_actions) return;\n\n\t\tlet $check_all_checkbox = this.$checkbox_actions.find(\".list-check-all\");\n\n\t\tif ($check_all_checkbox.prop(\"checked\") && target && !target.prop(\"checked\")) {\n\t\t\t$check_all_checkbox.prop(\"checked\", false);\n\t\t}\n\n\t\t$check_all_checkbox.prop(\"checked\", this.$checks.length === this.data.length);\n\t}\n\n\tsetup_freeze_area() {\n\t\tthis.$freeze = $(\n\t\t\t`<div class=\"freeze flex justify-center align-center text-muted\">\n\t\t\t\t${__(\"Loading\")}...\n\t\t\t</div>`\n\t\t).hide();\n\t\tthis.$result.append(this.$freeze);\n\t}\n\n\tsetup_columns() {\n\t\t// setup columns for list view\n\t\tthis.columns = [];\n\n\t\tconst get_df = frappe.meta.get_docfield.bind(null, this.doctype);\n\n\t\t// 1st column: title_field or name\n\t\tif (this.meta.title_field) {\n\t\t\tthis.columns.push({\n\t\t\t\ttype: \"Subject\",\n\t\t\t\tdf: get_df(this.meta.title_field),\n\t\t\t});\n\t\t} else {\n\t\t\tthis.columns.push({\n\t\t\t\ttype: \"Subject\",\n\t\t\t\tdf: {\n\t\t\t\t\tlabel: __(\"ID\"),\n\t\t\t\t\tfieldname: \"name\",\n\t\t\t\t},\n\t\t\t});\n\t\t}\n\n\n\t\tthis.columns.push({\n\t\t\ttype: \"Tag\"\n\t\t});\n\n\t\t// 2nd column: Status indicator\n\t\tif (frappe.has_indicator(this.doctype)) {\n\t\t\t// indicator\n\t\t\tthis.columns.push({\n\t\t\t\ttype: \"Status\",\n\t\t\t});\n\t\t}\n\n\t\tconst fields_in_list_view = this.get_fields_in_list_view();\n\t\t// Add rest from in_list_view docfields\n\t\tthis.columns = this.columns.concat(\n\t\t\tfields_in_list_view\n\t\t\t\t.filter((df) => {\n\t\t\t\t\tif (\n\t\t\t\t\t\tfrappe.has_indicator(this.doctype) &&\n\t\t\t\t\t\tdf.fieldname === \"status\"\n\t\t\t\t\t) {\n\t\t\t\t\t\treturn false;\n\t\t\t\t\t}\n\t\t\t\t\tif (!df.in_list_view) {\n\t\t\t\t\t\treturn false;\n\t\t\t\t\t}\n\t\t\t\t\treturn df.fieldname !== this.meta.title_field;\n\t\t\t\t})\n\t\t\t\t.map((df) => ({\n\t\t\t\t\ttype: \"Field\",\n\t\t\t\t\tdf,\n\t\t\t\t}))\n\t\t);\n\n\t\tif (this.list_view_settings.fields) {\n\t\t\tthis.columns = this.reorder_listview_fields();\n\t\t}\n\n\t\t// limit max to 8 columns if no total_fields is set in List View Settings\n\t\t// Screen with low density no of columns 4\n\t\t// Screen with medium density no of columns 6\n\t\t// Screen with high density no of columns 8\n\t\tlet total_fields = 6;\n\n\t\tif (window.innerWidth <= 1366) {\n\t\t\ttotal_fields = 4;\n\t\t} else if (window.innerWidth >= 1920) {\n\t\t\ttotal_fields = 10;\n\t\t}\n\n\t\tthis.columns = this.columns.slice(0, this.list_view_settings.total_fields || total_fields);\n\n\t\tif (\n\t\t\t!this.settings.hide_name_column &&\n\t\t\tthis.meta.title_field &&\n\t\t\tthis.meta.title_field !== 'name'\n\t\t) {\n\t\t\tthis.columns.push({\n\t\t\t\ttype: \"Field\",\n\t\t\t\tdf: {\n\t\t\t\t\tlabel: __(\"ID\"),\n\t\t\t\t\tfieldname: \"name\",\n\t\t\t\t},\n\t\t\t});\n\t\t}\n\t}\n\n\treorder_listview_fields() {\n\t\tlet fields_order = [];\n\t\tlet fields = JSON.parse(this.list_view_settings.fields);\n\n\t\t//title and tags field is fixed\n\t\tfields_order.push(this.columns[0]);\n\t\tfields_order.push(this.columns[1]);\n\t\tthis.columns.splice(0, 2);\n\n\t\tfor (let fld in fields) {\n\t\t\tfor (let col in this.columns) {\n\t\t\t\tlet field = fields[fld];\n\t\t\t\tlet column = this.columns[col];\n\n\t\t\t\tif (column.type == \"Status\" && field.fieldname == \"status_field\") {\n\t\t\t\t\tfields_order.push(column);\n\t\t\t\t\tbreak;\n\t\t\t\t} else if (column.type == \"Field\" && field.fieldname === column.df.fieldname) {\n\t\t\t\t\tfields_order.push(column);\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn fields_order;\n\t}\n\n\tget_documentation_link() {\n\t\tif (this.meta.documentation) {\n\t\t\treturn `<a href=\"${\n\t\t\t\tthis.meta.documentation\n\t\t\t}\" target=\"blank\" class=\"meta-description small text-muted\">Need Help?</a>`;\n\t\t}\n\t\treturn \"\";\n\t}\n\n\tget_no_result_message() {\n\t\tlet help_link = this.get_documentation_link();\n\t\tlet filters = this.filter_area && this.filter_area.get();\n\t\tlet no_result_message = filters && filters.length\n\t\t\t? __(\"No {0} found\", [__(this.doctype)])\n\t\t\t: __(\"You haven't created a {0} yet\", [__(this.doctype)]);\n\t\tlet new_button_label = filters && filters.length\n\t\t\t? __(\"Create a new {0}\", [__(this.doctype)], \"Create a new document from list view\")\n\t\t\t: __(\"Create your first {0}\", [__(this.doctype)], \"Create a new document from list view\");\n\t\tlet empty_state_image =\n\t\t\tthis.settings.empty_state_image ||\n\t\t\t\"/assets/frappe/images/ui-states/list-empty-state.svg\";\n\n\t\tconst new_button = this.can_create\n\t\t\t? `<p><button class=\"btn btn-primary btn-sm btn-new-doc hidden-xs\">\n\t\t\t\t${new_button_label}\n\t\t\t</button> <button class=\"btn btn-primary btn-new-doc visible-xs\">\n\t\t\t\t${__(\"Create New\", null, \"Create a new document from list view\")}\n\t\t\t</button></p>`\n\t\t\t: \"\";\n\n\t\treturn `<div class=\"msg-box no-border\">\n\t\t\t<div>\n\t\t\t\t<img src=\"${empty_state_image}\" alt=\"Generic Empty State\" class=\"null-state\">\n\t\t\t</div>\n\t\t\t<p>${no_result_message}</p>\n\t\t\t${new_button}\n\t\t\t${help_link}\n\t\t</div>`;\n\t}\n\n\tfreeze() {\n\t\tif (this.list_view_settings && !this.list_view_settings.disable_count) {\n\t\t\tthis.$result\n\t\t\t\t.find(\".list-count\")\n\t\t\t\t.html(`<span>${__(\"Refreshing\", null, \"Document count in list view\")}...</span>`);\n\t\t}\n\t}\n\n\tget_args() {\n\t\tconst args = super.get_args();\n\n\t\treturn Object.assign(args, {\n\t\t\twith_comment_count: true,\n\t\t});\n\t}\n\n\tbefore_refresh() {\n\t\tif (frappe.route_options && this.filter_area) {\n\t\t\tthis.filters = this.parse_filters_from_route_options();\n\t\t\tfrappe.route_options = null;\n\n\t\t\tif (this.filters.length > 0) {\n\t\t\t\treturn this.filter_area\n\t\t\t\t\t.clear(false)\n\t\t\t\t\t.then(() => this.filter_area.set(this.filters));\n\t\t\t}\n\t\t}\n\n\t\treturn Promise.resolve();\n\t}\n\n\tparse_filters_from_settings() {\n\t\treturn (this.settings.filters || []).map((f) => {\n\t\t\tif (f.length === 3) {\n\t\t\t\tf = [this.doctype, f[0], f[1], f[2]];\n\t\t\t}\n\t\t\treturn f;\n\t\t});\n\t}\n\n\ttoggle_result_area() {\n\t\tsuper.toggle_result_area();\n\t\tthis.toggle_actions_menu_button(\n\t\t\tthis.$result.find(\".list-row-check:checked\").length > 0\n\t\t);\n\t}\n\n\ttoggle_actions_menu_button(toggle) {\n\t\tif (toggle) {\n\t\t\tthis.page.show_actions_menu();\n\t\t\tthis.page.clear_primary_action();\n\t\t\tthis.toggle_workflow_actions();\n\t\t} else {\n\t\t\tthis.page.hide_actions_menu();\n\t\t\tthis.set_primary_action();\n\t\t}\n\t}\n\n\trender_header(refresh_header=false) {\n\t\tif (refresh_header) {\n\t\t\tthis.$result.find('.list-row-head').remove();\n\t\t}\n\t\tif (this.$result.find(\".list-row-head\").length === 0) {\n\t\t\t// append header once\n\t\t\tthis.$result.prepend(this.get_header_html());\n\t\t}\n\t}\n\n\trender_skeleton() {\n\t\tconst $row = this.get_list_row_html_skeleton(\n\t\t\t'<div><input type=\"checkbox\" class=\"render-list-checkbox\"/></div>'\n\t\t);\n\t\tthis.$result.append($row);\n\t}\n\n\tbefore_render() {\n\t\tthis.settings.before_render && this.settings.before_render();\n\t\tfrappe.model.user_settings.save(\n\t\t\tthis.doctype,\n\t\t\t\"last_view\",\n\t\t\tthis.view_name\n\t\t);\n\t\tthis.save_view_user_settings({\n\t\t\tfilters: this.filter_area && this.filter_area.get(),\n\t\t\tsort_by: this.sort_selector && this.sort_selector.sort_by,\n\t\t\tsort_order: this.sort_selector && this.sort_selector.sort_order,\n\t\t});\n\t\tthis.toggle_paging && this.$paging_area.toggle(false);\n\t}\n\n\tafter_render() {\n\t\tthis.$no_result.html(`\n\t\t\t<div class=\"no-result text-muted flex justify-center align-center\">\n\t\t\t\t${this.get_no_result_message()}\n\t\t\t</div>\n\t\t`);\n\t\tthis.setup_new_doc_event();\n\t\tthis.list_sidebar && this.list_sidebar.reload_stats();\n\t\tthis.toggle_paging && this.$paging_area.toggle(true);\n\t}\n\n\trender() {\n\t\tthis.render_list();\n\t\tthis.set_rows_as_checked();\n\t\tthis.on_row_checked();\n\t\tthis.render_count();\n\t}\n\n\trender_list() {\n\t\t// clear rows\n\t\tthis.$result.find(\".list-row-container\").remove();\n\t\tif (this.data.length > 0) {\n\t\t\t// append rows\n\t\t\tthis.$result.append(\n\t\t\t\tthis.data\n\t\t\t\t\t.map((doc, i) => {\n\t\t\t\t\t\tdoc._idx = i;\n\t\t\t\t\t\treturn this.get_list_row_html(doc);\n\t\t\t\t\t})\n\t\t\t\t\t.join(\"\")\n\t\t\t);\n\t\t}\n\t}\n\n\trender_count() {\n\t\tif (!this.list_view_settings.disable_count) {\n\t\t\tthis.get_count_str().then((str) => {\n\t\t\t\tthis.$result.find(\".list-count\").html(`<span>${str}</span>`);\n\t\t\t});\n\t\t}\n\t}\n\n\tget_header_html() {\n\t\tif (!this.columns) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst subject_field = this.columns[0].df;\n\t\tlet subject_html = `\n\t\t\t<input class=\"level-item list-check-all\" type=\"checkbox\"\n\t\t\t\ttitle=\"${__(\"Select All\")}\">\n\t\t\t<span class=\"level-item list-liked-by-me hidden-xs\">\n\t\t\t\t<span title=\"${__(\"Likes\")}\">${frappe.utils.icon('heart', 'sm', 'like-icon')}</span>\n\t\t\t</span>\n\t\t\t<span class=\"level-item\">${__(subject_field.label)}</span>\n\t\t`;\n\t\tconst $columns = this.columns\n\t\t\t.map(col => {\n\t\t\t\tlet classes = [\n\t\t\t\t\t\"list-row-col ellipsis\",\n\t\t\t\t\tcol.type == \"Subject\" ? \"list-subject level\" : \"hidden-xs\",\n\t\t\t\t\tcol.type == \"Tag\" ? \"tag-col hide\": \"\",\n\t\t\t\t\tfrappe.model.is_numeric_field(col.df) ? \"text-right\" : \"\",\n\t\t\t\t].join(\" \");\n\n\t\t\t\treturn `\n\t\t\t\t<div class=\"${classes}\">\n\t\t\t\t\t${col.type === \"Subject\" ? subject_html : `\n\t\t\t\t\t\t<span>${__((col.df && col.df.label) || col.type)}</span>`}\n\t\t\t\t</div>\n\t\t\t`;\n\t\t\t})\n\t\t\t.join(\"\");\n\n\t\treturn this.get_header_html_skeleton(\n\t\t\t$columns,\n\t\t\t'<span class=\"list-count\"></span>'\n\t\t);\n\t}\n\n\tget_header_html_skeleton(left = \"\", right = \"\") {\n\t\treturn `\n\t\t\t<header class=\"level list-row-head text-muted\">\n\t\t\t\t<div class=\"level-left list-header-subject\">\n\t\t\t\t\t${left}\n\t\t\t\t</div>\n\t\t\t\t<div class=\"level-left checkbox-actions\">\n\t\t\t\t\t<div class=\"level list-subject\">\n\t\t\t\t\t\t<input class=\"level-item list-check-all\" type=\"checkbox\"\n\t\t\t\t\t\t\ttitle=\"${__(\"Select All\")}\">\n\t\t\t\t\t\t<span class=\"level-item list-header-meta\"></span>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t\t<div class=\"level-right\">\n\t\t\t\t\t${right}\n\t\t\t\t</div>\n\t\t\t</header>\n\t\t`;\n\t}\n\n\tget_left_html(doc) {\n\t\treturn this.columns\n\t\t\t.map((col) => this.get_column_html(col, doc))\n\t\t\t.join(\"\");\n\t}\n\n\tget_right_html(doc) {\n\t\treturn this.get_meta_html(doc);\n\t}\n\n\tget_list_row_html(doc) {\n\t\treturn this.get_list_row_html_skeleton(\n\t\t\tthis.get_left_html(doc),\n\t\t\tthis.get_right_html(doc)\n\t\t);\n\t}\n\n\tget_list_row_html_skeleton(left = \"\", right = \"\") {\n\t\treturn `\n\t\t\t<div class=\"list-row-container\" tabindex=\"1\">\n\t\t\t\t<div class=\"level list-row\">\n\t\t\t\t\t<div class=\"level-left ellipsis\">\n\t\t\t\t\t\t${left}\n\t\t\t\t\t</div>\n\t\t\t\t\t<div class=\"level-right text-muted ellipsis\">\n\t\t\t\t\t\t${right}\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t`;\n\t}\n\n\tget_column_html(col, doc) {\n\t\tif (col.type === \"Status\") {\n\t\t\treturn `\n\t\t\t\t<div class=\"list-row-col hidden-xs ellipsis\">\n\t\t\t\t\t${this.get_indicator_html(doc)}\n\t\t\t\t</div>\n\t\t\t`;\n\t\t}\n\n\t\tif (col.type === \"Tag\") {\n\t\t\tconst tags_display_class = !this.tags_shown ? 'hide' : '';\n\t\t\tlet tags_html = doc._user_tags ? this.get_tags_html(doc._user_tags, 2) : '<div class=\"tags-empty\">-</div>';\n\t\t\treturn `\n\t\t\t\t<div class=\"list-row-col tag-col ${tags_display_class} hidden-xs ellipsis\">\n\t\t\t\t\t${tags_html}\n\t\t\t\t</div>\n\t\t\t`;\n\t\t}\n\n\t\tconst df = col.df || {};\n\t\tconst label = df.label;\n\t\tconst fieldname = df.fieldname;\n\t\tconst value = doc[fieldname] || \"\";\n\n\t\tconst format = () => {\n\t\t\tif (df.fieldtype === \"Code\") {\n\t\t\t\treturn value;\n\t\t\t} else if (df.fieldtype === \"Percent\") {\n\t\t\t\treturn `<div class=\"progress\" style=\"margin: 0px;\">\n\t\t\t\t\t\t<div class=\"progress-bar progress-bar-success\" role=\"progressbar\"\n\t\t\t\t\t\t\taria-valuenow=\"${value}\"\n\t\t\t\t\t\t\taria-valuemin=\"0\" aria-valuemax=\"100\" style=\"width: ${Math.round(value)}%;\">\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>`;\n\t\t\t} else {\n\t\t\t\treturn frappe.format(value, df, null, doc);\n\t\t\t}\n\t\t};\n\n\t\tconst field_html = () => {\n\t\t\tlet html;\n\t\t\tlet _value;\n\t\t\tlet strip_html_required =\n\t\t\t\tdf.fieldtype == \"Text Editor\" ||\n\t\t\t\t(df.fetch_from &&\n\t\t\t\t\t[\"Text\", \"Small Text\"].includes(df.fieldtype));\n\n\t\t\tif (strip_html_required) {\n\t\t\t\t_value = strip_html(value);\n\t\t\t} else {\n\t\t\t\t_value =\n\t\t\t\t\ttypeof value === \"string\"\n\t\t\t\t\t\t? frappe.utils.escape_html(value)\n\t\t\t\t\t\t: value;\n\t\t\t}\n\n\t\t\tif (df.fieldtype === \"Rating\") {\n\t\t\t\tlet out_of_ratings = df.options || 5;\n\t\t\t\t_value = _value * out_of_ratings;\n\t\t\t}\n\n\t\t\tif (df.fieldtype === \"Image\") {\n\t\t\t\thtml = df.options ? `<img src=\"${doc[df.options]}\"\n\t\t\t\t\tstyle=\"max-height: 30px; max-width: 100%;\">`\n\t\t\t\t\t: `<div class=\"missing-image small\">\n\t\t\t\t\t\t${frappe.utils.icon('restriction')}\n\t\t\t\t\t</div>`;\n\t\t\t} else if (df.fieldtype === \"Select\") {\n\t\t\t\thtml = `<span class=\"filterable indicator-pill ${frappe.utils.guess_colour(\n\t\t\t\t\t_value\n\t\t\t\t)} ellipsis\"\n\t\t\t\t\tdata-filter=\"${fieldname},=,${value}\">\n\t\t\t\t\t<span class=\"ellipsis\"> ${__(_value)} </span>\n\t\t\t\t</span>`;\n\t\t\t} else if (df.fieldtype === \"Link\") {\n\t\t\t\thtml = `<a class=\"filterable ellipsis\"\n\t\t\t\t\tdata-filter=\"${fieldname},=,${value}\">\n\t\t\t\t\t${_value}\n\t\t\t\t</a>`;\n\t\t\t} else if (\n\t\t\t\t[\"Text Editor\", \"Text\", \"Small Text\", \"HTML Editor\", \"Markdown Editor\"].includes(\n\t\t\t\t\tdf.fieldtype\n\t\t\t\t)\n\t\t\t) {\n\t\t\t\thtml = `<span class=\"ellipsis\">\n\t\t\t\t\t${_value}\n\t\t\t\t</span>`;\n\t\t\t} else {\n\t\t\t\thtml = `<a class=\"filterable ellipsis\"\n\t\t\t\t\tdata-filter=\"${fieldname},=,${frappe.utils.escape_html(value)}\">\n\t\t\t\t\t${format()}\n\t\t\t\t</a>`;\n\t\t\t}\n\n\t\t\treturn `<span class=\"ellipsis\"\n\t\t\t\ttitle=\"${__(label)}: ${frappe.utils.escape_html(_value)}\">\n\t\t\t\t${html}\n\t\t\t</span>`;\n\t\t};\n\n\t\tconst class_map = {\n\t\t\tSubject: \"list-subject level\",\n\t\t\tField: \"hidden-xs\",\n\t\t};\n\t\tconst css_class = [\n\t\t\t\"list-row-col ellipsis\",\n\t\t\tclass_map[col.type],\n\t\t\tfrappe.model.is_numeric_field(df) ? \"text-right\" : \"\",\n\t\t].join(\" \");\n\n\t\tconst html_map = {\n\t\t\tSubject: this.get_subject_html(doc),\n\t\t\tField: field_html(),\n\t\t};\n\t\tlet column_html = html_map[col.type];\n\n\t\t// listview_setting formatter\n\t\tif (\n\t\t\tthis.settings.formatters &&\n\t\t\tthis.settings.formatters[fieldname]\n\t\t) {\n\t\t\tcolumn_html = this.settings.formatters[fieldname](value, df, doc);\n\t\t}\n\n\t\treturn `\n\t\t\t<div class=\"${css_class}\">\n\t\t\t\t${column_html}\n\t\t\t</div>\n\t\t`;\n\t}\n\n\tget_tags_html(user_tags, limit, colored=false) {\n\t\tlet get_tag_html = tag => {\n\t\t\tlet color = '', style = '';\n\t\t\tif (tag) {\n\t\t\t\tif (colored) {\n\t\t\t\t\tcolor = frappe.get_palette(tag);\n\t\t\t\t\tstyle = `background-color: var(${color[0]}); color: var(${color[1]})`;\n\t\t\t\t}\n\n\t\t\t\treturn `<div class=\"tag-pill ellipsis\" title=\"${tag}\" style=\"${style}\">${tag}</div>`;\n\t\t\t}\n\t\t};\n\t\treturn user_tags.split(',').slice(1, limit + 1).map(get_tag_html).join('');\n\t}\n\n\tget_meta_html(doc) {\n\t\tlet html = \"\";\n\n\t\tlet settings_button = null;\n\t\tif (this.settings.button && this.settings.button.show(doc)) {\n\t\t\tsettings_button = `\n\t\t\t\t<span class=\"list-actions\">\n\t\t\t\t\t<button class=\"btn btn-action btn-default btn-xs\"\n\t\t\t\t\t\tdata-name=\"${doc.name}\" data-idx=\"${doc._idx}\"\n\t\t\t\t\t\ttitle=\"${this.settings.button.get_description(doc)}\">\n\t\t\t\t\t\t${this.settings.button.get_label(doc)}\n\t\t\t\t\t</button>\n\t\t\t\t</span>\n\t\t\t`;\n\t\t}\n\n\t\tconst modified = comment_when(doc.modified, true);\n\n\t\tlet assigned_to = `<div class=\"list-assignments\">\n\t\t\t<span class=\"avatar avatar-small\">\n\t\t\t<span class=\"avatar-empty\"></span>\n\t\t</div>`;\n\n\t\tlet assigned_users = JSON.parse(doc._assign || \"[]\");\n\t\tif (assigned_users.length) {\n\t\t\tassigned_to = `<div class=\"list-assignments\">\n\t\t\t\t\t${frappe.avatar_group(assigned_users, 3, { filterable: true })[0].outerHTML}\n\t\t\t\t</div>`;\n\t\t}\n\n\t\tconst comment_count = `<span class=\"comment-count\">\n\t\t\t\t${frappe.utils.icon('small-message')}\n\t\t\t\t${doc._comment_count > 99 ? \"99+\" : doc._comment_count}\n\t\t\t</span>`;\n\n\t\thtml += `\n\t\t\t<div class=\"level-item list-row-activity hidden-xs\">\n\t\t\t\t<div class=\"hidden-md hidden-xs\">\n\t\t\t\t\t${settings_button || assigned_to}\n\t\t\t\t</div>\n\t\t\t\t${modified}\n\t\t\t\t${comment_count}\n\t\t\t</div>\n\t\t\t<div class=\"level-item visible-xs text-right\">\n\t\t\t\t${this.get_indicator_dot(doc)}\n\t\t\t</div>\n\t\t`;\n\n\t\treturn html;\n\t}\n\n\tget_count_str() {\n\t\tlet current_count = this.data.length;\n\t\tlet count_without_children = this.data.uniqBy((d) => d.name).length;\n\n\t\treturn frappe.db.count(this.doctype, {\n\t\t\tfilters: this.get_filters_for_args()\n\t\t}).then(total_count => {\n\t\t\tthis.total_count = total_count || current_count;\n\t\t\tthis.count_without_children = count_without_children !== current_count ? count_without_children : undefined;\n\t\t\tlet str = __('{0} of {1}', [current_count, this.total_count]);\n\t\t\tif (this.count_without_children) {\n\t\t\t\tstr = __('{0} of {1} ({2} rows with children)', [count_without_children, this.total_count, current_count]);\n\t\t\t}\n\t\t\treturn str;\n\t\t});\n\t}\n\n\tget_form_link(doc) {\n\t\tif (this.settings.get_form_link) {\n\t\t\treturn this.settings.get_form_link(doc);\n\t\t}\n\n\t\tconst docname = cstr(doc.name).match(/[%'\"#\\s]/)\n\t\t\t? encodeURIComponent(doc.name)\n\t\t\t: doc.name;\n\n\t\treturn `/app/${frappe.router.slug(frappe.router.doctype_layout || this.doctype)}/${docname}`;\n\t}\n\n\tget_seen_class(doc) {\n\t\treturn JSON.parse(doc._seen || '[]').includes(frappe.session.user)\n\t\t\t? ''\n\t\t\t: 'bold';\n\t}\n\n\tget_like_html(doc) {\n\t\tconst liked_by = JSON.parse(doc._liked_by || \"[]\");\n\t\tlet heart_class = liked_by.includes(frappe.session.user)\n\t\t\t? \"liked-by liked\"\n\t\t\t: \"not-liked\";\n\n\t\treturn `<span\n\t\t\tclass=\"like-action ${heart_class}\"\n\t\t\tdata-name=\"${doc.name}\" data-doctype=\"${this.doctype}\"\n\t\t\tdata-liked-by=\"${encodeURI(doc._liked_by) || \"[]\"}\"\n\t\t\ttitle=\"${liked_by.map(u => frappe.user_info(u).fullname).join(', ')}\">\n\t\t\t${frappe.utils.icon('heart', 'sm', 'like-icon')}\n\t\t</span>\n\t\t<span class=\"likes-count\">\n\t\t\t${liked_by.length > 99 ? __(\"99\") + \"+\" : __(liked_by.length || \"\")}\n\t\t</span>`;\n\t}\n\n\tget_subject_html(doc) {\n\t\tlet subject_field = this.columns[0].df;\n\t\tlet value = doc[subject_field.fieldname];\n\t\tif (this.settings.formatters && this.settings.formatters[subject_field.fieldname]) {\n\t\t\tlet formatter = this.settings.formatters[subject_field.fieldname];\n\t\t\tvalue = formatter(value, subject_field, doc);\n\t\t}\n\t\tif (!value) {\n\t\t\tvalue = doc.name;\n\t\t}\n\t\tlet subject = strip_html(value.toString());\n\t\tlet escaped_subject = frappe.utils.escape_html(subject);\n\n\t\tconst seen = this.get_seen_class(doc);\n\n\t\tlet subject_html = `\n\t\t\t<span class=\"level-item select-like\">\n\t\t\t\t<input class=\"list-row-checkbox\" type=\"checkbox\"\n\t\t\t\t\tdata-name=\"${escape(doc.name)}\">\n\t\t\t\t<span class=\"list-row-like hidden-xs style=\"margin-bottom: 1px;\">\n\t\t\t\t\t${this.get_like_html(doc)}\n\t\t\t\t</span>\n\t\t\t</span>\n\t\t\t<span class=\"level-item ${seen} ellipsis\" title=\"${escaped_subject}\">\n\t\t\t\t<a class=\"ellipsis\"\n\t\t\t\t\thref=\"${this.get_form_link(doc)}\"\n\t\t\t\t\ttitle=\"${escaped_subject}\"\n\t\t\t\t\tdata-doctype=\"${this.doctype}\"\n\t\t\t\t\tdata-name=\"${doc.name}\">\n\t\t\t\t\t${subject}\n\t\t\t\t</a>\n\t\t\t</span>\n\t\t`;\n\n\t\treturn subject_html;\n\t}\n\n\tget_indicator_html(doc) {\n\t\tconst indicator = frappe.get_indicator(doc, this.doctype);\n\t\t// sequence is important\n\t\tconst docstatus_description = [\n\t\t\t__('Document is in draft state'),\n\t\t\t__('Document has been submitted'),\n\t\t\t__('Document has been cancelled')\n\t\t];\n\t\tconst title = docstatus_description[doc.docstatus || 0];\n\t\tif (indicator) {\n\t\t\treturn `<span class=\"indicator-pill ${indicator[1]} filterable ellipsis\"\n\t\t\t\tdata-filter='${indicator[2]}' title='${title}'>\n\t\t\t\t<span class=\"ellipsis\"> ${__(indicator[0])}</span>\n\t\t\t<span>`;\n\t\t}\n\t\treturn \"\";\n\t}\n\n\tget_indicator_dot(doc) {\n\t\tconst indicator = frappe.get_indicator(doc, this.doctype);\n\t\tif (!indicator) return \"\";\n\t\treturn `<span class='indicator ${indicator[1]}' title='${__(\n\t\t\tindicator[0]\n\t\t)}'></span>`;\n\t}\n\n\tget_image_url(doc) {\n\t\tlet url = doc.image ? doc.image : doc[this.meta.image_field];\n\t\t// absolute url for mobile\n\t\tif (window.cordova && !frappe.utils.is_url(url)) {\n\t\t\turl = frappe.base_url + url;\n\t\t}\n\t\treturn url || null;\n\t}\n\n\tsetup_events() {\n\t\tthis.setup_filterable();\n\t\tthis.setup_list_click();\n\t\tthis.setup_tag_event();\n\t\tthis.setup_new_doc_event();\n\t\tthis.setup_check_events();\n\t\tthis.setup_like();\n\t\tthis.setup_realtime_updates();\n\t\tthis.setup_action_handler();\n\t\tthis.setup_keyboard_navigation();\n\t}\n\n\tsetup_keyboard_navigation() {\n\t\tlet focus_first_row = () => {\n\t\t\tthis.$result.find(\".list-row-container:first\").focus();\n\t\t};\n\t\tlet focus_next = () => {\n\t\t\t$(document.activeElement)\n\t\t\t\t.next()\n\t\t\t\t.focus();\n\t\t};\n\t\tlet focus_prev = () => {\n\t\t\t$(document.activeElement)\n\t\t\t\t.prev()\n\t\t\t\t.focus();\n\t\t};\n\t\tlet list_row_focused = () => {\n\t\t\treturn $(document.activeElement).is(\".list-row-container\");\n\t\t};\n\t\tlet check_row = ($row) => {\n\t\t\tlet $input = $row.find(\"input[type=checkbox]\");\n\t\t\t$input.click();\n\t\t};\n\t\tlet get_list_row_if_focused = () =>\n\t\t\tlist_row_focused() ? $(document.activeElement) : null;\n\n\t\tlet is_current_page = () => this.page.wrapper.is(\":visible\");\n\t\tlet is_input_focused = () => $(document.activeElement).is(\"input\");\n\n\t\tlet handle_navigation = (direction) => {\n\t\t\tif (!is_current_page() || is_input_focused()) return false;\n\n\t\t\tlet $list_row = get_list_row_if_focused();\n\t\t\tif ($list_row) {\n\t\t\t\tdirection === \"down\" ? focus_next() : focus_prev();\n\t\t\t} else {\n\t\t\t\tfocus_first_row();\n\t\t\t}\n\t\t};\n\n\t\tfrappe.ui.keys.add_shortcut({\n\t\t\tshortcut: \"down\",\n\t\t\taction: () => handle_navigation(\"down\"),\n\t\t\tdescription: __(\"Navigate list down\", null, \"Description of a list view shortcut\"),\n\t\t\tpage: this.page,\n\t\t});\n\n\t\tfrappe.ui.keys.add_shortcut({\n\t\t\tshortcut: \"up\",\n\t\t\taction: () => handle_navigation(\"up\"),\n\t\t\tdescription: __(\"Navigate list up\", null, \"Description of a list view shortcut\"),\n\t\t\tpage: this.page,\n\t\t});\n\n\t\tfrappe.ui.keys.add_shortcut({\n\t\t\tshortcut: \"shift+down\",\n\t\t\taction: () => {\n\t\t\t\tif (!is_current_page() || is_input_focused()) return false;\n\t\t\t\tlet $list_row = get_list_row_if_focused();\n\t\t\t\tcheck_row($list_row);\n\t\t\t\tfocus_next();\n\t\t\t},\n\t\t\tdescription: __(\"Select multiple list items\", null, \"Description of a list view shortcut\"),\n\t\t\tpage: this.page,\n\t\t});\n\n\t\tfrappe.ui.keys.add_shortcut({\n\t\t\tshortcut: \"shift+up\",\n\t\t\taction: () => {\n\t\t\t\tif (!is_current_page() || is_input_focused()) return false;\n\t\t\t\tlet $list_row = get_list_row_if_focused();\n\t\t\t\tcheck_row($list_row);\n\t\t\t\tfocus_prev();\n\t\t\t},\n\t\t\tdescription: __(\"Select multiple list items\", null, \"Description of a list view shortcut\"),\n\t\t\tpage: this.page,\n\t\t});\n\n\t\tfrappe.ui.keys.add_shortcut({\n\t\t\tshortcut: \"enter\",\n\t\t\taction: () => {\n\t\t\t\tlet $list_row = get_list_row_if_focused();\n\t\t\t\tif ($list_row) {\n\t\t\t\t\t$list_row.find(\"a[data-name]\")[0].click();\n\t\t\t\t\treturn true;\n\t\t\t\t}\n\t\t\t\treturn false;\n\t\t\t},\n\t\t\tdescription: __(\"Open list item\", null, \"Description of a list view shortcut\"),\n\t\t\tpage: this.page,\n\t\t});\n\n\t\tfrappe.ui.keys.add_shortcut({\n\t\t\tshortcut: \"space\",\n\t\t\taction: () => {\n\t\t\t\tlet $list_row = get_list_row_if_focused();\n\t\t\t\tif ($list_row) {\n\t\t\t\t\tcheck_row($list_row);\n\t\t\t\t\treturn true;\n\t\t\t\t}\n\t\t\t\treturn false;\n\t\t\t},\n\t\t\tdescription: __(\"Select list item\", null, \"Description of a list view shortcut\"),\n\t\t\tpage: this.page,\n\t\t});\n\t}\n\n\tsetup_filterable() {\n\t\t// filterable events\n\t\tthis.$result.on(\"click\", \".filterable\", (e) => {\n\t\t\tif (e.metaKey || e.ctrlKey) return;\n\t\t\te.stopPropagation();\n\t\t\tconst $this = $(e.currentTarget);\n\t\t\tconst filters = $this.attr(\"data-filter\").split(\"|\");\n\t\t\tconst filters_to_apply = filters.map((f) => {\n\t\t\t\tf = f.split(\",\");\n\t\t\t\tif (f[2] === \"Today\") {\n\t\t\t\t\tf[2] = frappe.datetime.get_today();\n\t\t\t\t} else if (f[2] == \"User\") {\n\t\t\t\t\tf[2] = frappe.session.user;\n\t\t\t\t}\n\t\t\t\tthis.filter_area.remove(f[0]);\n\t\t\t\treturn [this.doctype, f[0], f[1], f.slice(2).join(\",\")];\n\t\t\t});\n\t\t\tthis.filter_area.add(filters_to_apply);\n\t\t});\n\t}\n\n\tsetup_list_click() {\n\t\tthis.$result.on(\"click\", \".list-row, .image-view-header, .file-header\", (e) => {\n\t\t\tconst $target = $(e.target);\n\t\t\t// tick checkbox if Ctrl/Meta key is pressed\n\t\t\tif (e.ctrlKey || (e.metaKey && !$target.is(\"a\"))) {\n\t\t\t\tconst $list_row = $(e.currentTarget);\n\t\t\t\tconst $check = $list_row.find(\".list-row-checkbox\");\n\t\t\t\t$check.prop(\"checked\", !$check.prop(\"checked\"));\n\t\t\t\te.preventDefault();\n\t\t\t\tthis.on_row_checked();\n\t\t\t\treturn;\n\t\t\t}\n\t\t\t// don't open form when checkbox, like, filterable are clicked\n\t\t\tif (\n\t\t\t\t$target.hasClass(\"filterable\") ||\n\t\t\t\t$target.hasClass(\"select-like\") ||\n\t\t\t\t$target.hasClass(\"file-select\") ||\n\t\t\t\t$target.hasClass(\"list-row-like\") ||\n\t\t\t\t$target.is(\":checkbox\")\n\t\t\t) {\n\t\t\t\te.stopPropagation();\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t// link, let the event be handled via set_route\n\t\t\tif ($target.is(\"a\")) return;\n\n\t\t\t// clicked on the row, open form\n\t\t\tconst $row = $(e.currentTarget);\n\t\t\tconst link = $row.find(\".list-subject a\").get(0);\n\t\t\tif (link) {\n\t\t\t\tfrappe.set_route(link.pathname);\n\t\t\t\treturn false;\n\t\t\t}\n\t\t});\n\t}\n\n\tsetup_action_handler() {\n\t\tthis.$result.on(\"click\", \".btn-action\", (e) => {\n\t\t\tconst $button = $(e.currentTarget);\n\t\t\tconst doc = this.data[$button.attr(\"data-idx\")];\n\t\t\tthis.settings.button.action(doc);\n\t\t\te.stopPropagation();\n\t\t\treturn false;\n\t\t});\n\t}\n\n\tsetup_check_events() {\n\t\tthis.$result.on(\"change\", \"input[type=checkbox]\", (e) => {\n\t\t\tconst $target = $(e.currentTarget);\n\n\t\t\tif ($target.is(\".list-header-subject .list-check-all\")) {\n\t\t\t\tconst $check = this.$result.find(\n\t\t\t\t\t\".checkbox-actions .list-check-all\"\n\t\t\t\t);\n\t\t\t\t$check.prop(\"checked\", $target.prop(\"checked\"));\n\t\t\t\t$check.trigger(\"change\");\n\t\t\t} else if ($target.is(\".checkbox-actions .list-check-all\")) {\n\t\t\t\tconst $check = this.$result.find(\n\t\t\t\t\t\".list-header-subject .list-check-all\"\n\t\t\t\t);\n\t\t\t\t$check.prop(\"checked\", $target.prop(\"checked\"));\n\n\t\t\t\tthis.$result\n\t\t\t\t\t.find(\".list-row-checkbox\")\n\t\t\t\t\t.prop(\"checked\", $target.prop(\"checked\"));\n\t\t\t} else if ($target.attr('data-parent')) {\n\t\t\t\tthis.$result\n\t\t\t\t\t.find(`.${$target.attr('data-parent')}`)\n\t\t\t\t\t.find('.list-row-checkbox')\n\t\t\t\t\t.prop(\"checked\", $target.prop(\"checked\"));\n\t\t\t}\n\n\t\t\tthis.on_row_checked();\n\t\t});\n\n\t\tthis.$result.on(\"click\", \".list-row-checkbox\", (e) => {\n\t\t\tconst $target = $(e.currentTarget);\n\n\t\t\t// shift select checkboxes\n\t\t\tif (\n\t\t\t\te.shiftKey &&\n\t\t\t\tthis.$checkbox_cursor &&\n\t\t\t\t!$target.is(this.$checkbox_cursor)\n\t\t\t) {\n\t\t\t\tconst name_1 = this.$checkbox_cursor.data().name;\n\t\t\t\tconst name_2 = $target.data().name;\n\t\t\t\tconst index_1 = this.data.findIndex((d) => d.name === name_1);\n\t\t\t\tconst index_2 = this.data.findIndex((d) => d.name === name_2);\n\t\t\t\tlet [min_index, max_index] = [index_1, index_2];\n\n\t\t\t\tif (min_index > max_index) {\n\t\t\t\t\t[min_index, max_index] = [max_index, min_index];\n\t\t\t\t}\n\n\t\t\t\tlet docnames = this.data\n\t\t\t\t\t.slice(min_index + 1, max_index)\n\t\t\t\t\t.map((d) => d.name);\n\t\t\t\tconst selector = docnames\n\t\t\t\t\t.map((name) => `.list-row-checkbox[data-name=\"${name}\"]`)\n\t\t\t\t\t.join(\",\");\n\t\t\t\tthis.$result.find(selector).prop(\"checked\", true);\n\t\t\t}\n\n\t\t\tthis.$checkbox_cursor = $target;\n\n\t\t\tthis.update_checkbox($target);\n\t\t});\n\t}\n\n\tsetup_like() {\n\t\tthis.$result.on(\"click\", \".like-action\", frappe.ui.click_toggle_like);\n\t\tthis.$result.on(\"click\", \".list-liked-by-me\", (e) => {\n\t\t\tconst $this = $(e.currentTarget);\n\t\t\t$this.toggleClass(\"active\");\n\n\t\t\tif ($this.hasClass(\"active\")) {\n\t\t\t\tthis.filter_area.add(\n\t\t\t\t\tthis.doctype,\n\t\t\t\t\t\"_liked_by\",\n\t\t\t\t\t\"like\",\n\t\t\t\t\t\"%\" + frappe.session.user + \"%\"\n\t\t\t\t);\n\t\t\t} else {\n\t\t\t\tthis.filter_area.remove(\"_liked_by\");\n\t\t\t}\n\t\t});\n\n\t}\n\n\tsetup_new_doc_event() {\n\t\tthis.$no_result.find(\".btn-new-doc\").click(() => {\n\t\t\tif (this.settings.primary_action) {\n\t\t\t\tthis.settings.primary_action();\n\t\t\t} else {\n\t\t\t\tthis.make_new_doc();\n\t\t\t}\n\t\t});\n\t}\n\n\tsetup_tag_event() {\n\t\tthis.tags_shown = false;\n\t\tthis.list_sidebar && this.list_sidebar.parent.on(\"click\", \".list-tag-preview\", () => {\n\t\t\tthis.tags_shown = !this.tags_shown;\n\t\t\tthis.toggle_tags();\n\t\t});\n\t}\n\n\tsetup_realtime_updates() {\n\t\tif (\n\t\t\tthis.list_view_settings &&\n\t\t\tthis.list_view_settings.disable_auto_refresh\n\t\t) {\n\t\t\treturn;\n\t\t}\n\t\tfrappe.realtime.on(\"list_update\", (data) => {\n\t\t\tif (this.avoid_realtime_update()) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tconst { doctype, name } = data;\n\t\t\tif (doctype !== this.doctype) return;\n\n\t\t\t// filters to get only the doc with this name\n\t\t\tconst call_args = this.get_call_args();\n\t\t\tcall_args.args.filters.push([this.doctype, \"name\", \"=\", name]);\n\t\t\tcall_args.args.start = 0;\n\n\t\t\tfrappe.call(call_args).then(({ message }) => {\n\t\t\t\tif (!message) return;\n\t\t\t\tconst data = frappe.utils.dict(message.keys, message.values);\n\t\t\t\tif (!(data && data.length)) {\n\t\t\t\t\t// this doc was changed and should not be visible\n\t\t\t\t\t// in the listview according to filters applied\n\t\t\t\t\t// let's remove it manually\n\t\t\t\t\tthis.data = this.data.filter((d) => d.name !== name);\n\t\t\t\t\tthis.render_list();\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tconst datum = data[0];\n\t\t\t\tconst index = this.data.findIndex((d) => d.name === datum.name);\n\n\t\t\t\tif (index === -1) {\n\t\t\t\t\t// append new data\n\t\t\t\t\tthis.data.push(datum);\n\t\t\t\t} else {\n\t\t\t\t\t// update this data in place\n\t\t\t\t\tthis.data[index] = datum;\n\t\t\t\t}\n\n\t\t\t\tthis.data.sort((a, b) => {\n\t\t\t\t\tconst a_value = a[this.sort_by] || \"\";\n\t\t\t\t\tconst b_value = b[this.sort_by] || \"\";\n\n\t\t\t\t\tlet return_value = 0;\n\t\t\t\t\tif (a_value > b_value) {\n\t\t\t\t\t\treturn_value = 1;\n\t\t\t\t\t}\n\n\t\t\t\t\tif (b_value > a_value) {\n\t\t\t\t\t\treturn_value = -1;\n\t\t\t\t\t}\n\n\t\t\t\t\tif (this.sort_order === \"desc\") {\n\t\t\t\t\t\treturn_value = -return_value;\n\t\t\t\t\t}\n\t\t\t\t\treturn return_value;\n\t\t\t\t});\n\t\t\t\tthis.toggle_result_area();\n\t\t\t\tthis.render_list();\n\t\t\t\tif (this.$checks && this.$checks.length) {\n\t\t\t\t\tthis.set_rows_as_checked();\n\t\t\t\t}\n\t\t\t});\n\t\t});\n\t}\n\n\tavoid_realtime_update() {\n\t\tif (this.filter_area.is_being_edited()) {\n\t\t\treturn true;\n\t\t}\n\t\t// this is set when a bulk operation is called from a list view which might update the list view\n\t\t// this is to avoid the list view from refreshing a lot of times\n\t\t// the list view is updated once after the bulk operation is complete\n\t\tif (this.disable_list_update) {\n\t\t\treturn true;\n\t\t}\n\t\treturn false;\n\t}\n\n\tset_rows_as_checked() {\n\t\t$.each(this.$checks, (i, el) => {\n\t\t\tlet docname = $(el).attr(\"data-name\");\n\t\t\tthis.$result\n\t\t\t\t.find(`.list-row-checkbox[data-name='${docname}']`)\n\t\t\t\t.prop(\"checked\", true);\n\t\t});\n\t\tthis.on_row_checked();\n\t}\n\n\ton_row_checked() {\n\t\tthis.$list_head_subject =\n\t\t\tthis.$list_head_subject ||\n\t\t\tthis.$result.find(\"header .list-header-subject\");\n\t\tthis.$checkbox_actions =\n\t\t\tthis.$checkbox_actions ||\n\t\t\tthis.$result.find(\"header .checkbox-actions\");\n\n\t\tthis.$checks = this.$result.find(\".list-row-checkbox:checked\");\n\n\t\tthis.$list_head_subject.toggle(this.$checks.length === 0);\n\t\tthis.$checkbox_actions.toggle(this.$checks.length > 0);\n\n\t\tif (this.$checks.length === 0) {\n\t\t\tthis.$list_head_subject\n\t\t\t\t.find(\".list-check-all\")\n\t\t\t\t.prop(\"checked\", false);\n\t\t} else {\n\t\t\tthis.$checkbox_actions\n\t\t\t\t.find(\".list-header-meta\")\n\t\t\t\t.html(__(\"{0} items selected\", [this.$checks.length]));\n\t\t\tthis.$checkbox_actions.show();\n\t\t\tthis.$list_head_subject.hide();\n\t\t}\n\t\tthis.update_checkbox();\n\t\tthis.toggle_actions_menu_button(this.$checks.length > 0);\n\t}\n\n\ttoggle_tags() {\n\t\tthis.$result.find('.tag-col').toggleClass(\"hide\");\n\t\tconst preview_label = this.tags_shown ? __(\"Hide Tags\") : __(\"Show Tags\");\n\t\tthis.list_sidebar.parent.find(\".list-tag-preview\").text(preview_label);\n\t}\n\n\tget_checked_items(only_docnames) {\n\t\tconst docnames = Array.from(this.$checks || []).map((check) =>\n\t\t\tcstr(unescape($(check).data().name))\n\t\t);\n\n\t\tif (only_docnames) return docnames;\n\n\t\treturn this.data.filter((d) => docnames.includes(d.name));\n\t}\n\n\tclear_checked_items() {\n\t\tthis.$checks && this.$checks.prop(\"checked\", false);\n\t\tthis.on_row_checked();\n\t}\n\n\tsave_view_user_settings(obj) {\n\t\treturn frappe.model.user_settings.save(\n\t\t\tthis.doctype,\n\t\t\tthis.view_name,\n\t\t\tobj\n\t\t);\n\t}\n\n\ton_update() {}\n\n\tupdate_url_with_filters() {\n\t\tif (frappe.get_route_str() == this.page_name && !this.report_name) {\n\t\t\t// only update URL if the route still matches current page.\n\t\t\t// do not update if current list is a \"saved report\".\n\t\t\twindow.history.replaceState(null, null, this.get_url_with_filters());\n\t\t}\n\t}\n\n\tget_url_with_filters() {\n\t\tconst query_params = this.get_filters_for_args()\n\t\t\t.map((filter) => {\n\t\t\t\tif (filter[2] === \"=\") {\n\t\t\t\t\treturn `${filter[1]}=${encodeURIComponent(filter[3])}`;\n\t\t\t\t}\n\t\t\t\treturn [\n\t\t\t\t\tfilter[1],\n\t\t\t\t\t\"=\",\n\t\t\t\t\tencodeURIComponent(JSON.stringify([filter[2], filter[3]])),\n\t\t\t\t].join(\"\");\n\t\t\t})\n\t\t\t.join(\"&\");\n\n\t\tlet full_url = window.location.href.replace(window.location.search, \"\");\n\t\tif (query_params) {\n\t\t\tfull_url += \"?\" + query_params;\n\t\t}\n\t\treturn full_url;\n\t}\n\n\tget_menu_items() {\n\t\tconst doctype = this.doctype;\n\t\tconst items = [];\n\n\t\tif (frappe.model.can_import(doctype, null, this.meta)) {\n\t\t\titems.push({\n\t\t\t\tlabel: __(\"Import\", null, \"Button in list view menu\"),\n\t\t\t\taction: () =>\n\t\t\t\t\tfrappe.set_route(\"list\", \"data-import\", {\n\t\t\t\t\t\treference_doctype: doctype,\n\t\t\t\t\t}),\n\t\t\t\tstandard: true,\n\t\t\t});\n\t\t}\n\n\t\tif (frappe.model.can_set_user_permissions(doctype)) {\n\t\t\titems.push({\n\t\t\t\tlabel: __(\"User Permissions\", null, \"Button in list view menu\"),\n\t\t\t\taction: () =>\n\t\t\t\t\tfrappe.set_route(\"list\", \"user-permission\", {\n\t\t\t\t\t\tallow: doctype,\n\t\t\t\t\t}),\n\t\t\t\tstandard: true,\n\t\t\t});\n\t\t}\n\n\t\tif (frappe.user_roles.includes(\"System Manager\")) {\n\t\t\titems.push({\n\t\t\t\tlabel: __(\"Role Permissions Manager\", null, \"Button in list view menu\"),\n\t\t\t\taction: () =>\n\t\t\t\t\tfrappe.set_route(\"permission-manager\", {\n\t\t\t\t\t\tdoctype,\n\t\t\t\t\t}),\n\t\t\t\tstandard: true,\n\t\t\t});\n\t\t}\n\n\t\tif (frappe.model.can_create(\"Custom Field\")\n\t\t\t&& frappe.model.can_create(\"Property Setter\")) {\n\t\t\titems.push({\n\t\t\t\tlabel: __(\"Customize\", null, \"Button in list view menu\"),\n\t\t\t\taction: () => {\n\t\t\t\t\tif (!this.meta) return;\n\t\t\t\t\tif (this.meta.custom) {\n\t\t\t\t\t\tfrappe.set_route(\"form\", \"doctype\", doctype);\n\t\t\t\t\t} else if (!this.meta.custom) {\n\t\t\t\t\t\tfrappe.set_route(\"form\", \"customize-form\", {\n\t\t\t\t\t\t\tdoc_type: doctype,\n\t\t\t\t\t\t});\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\tstandard: true,\n\t\t\t\tshortcut: \"Ctrl+J\",\n\t\t\t});\n\t\t}\n\n\t\titems.push({\n\t\t\tlabel: __(\"Toggle Sidebar\", null, \"Button in list view menu\"),\n\t\t\taction: () => this.toggle_side_bar(),\n\t\t\tcondition: () => !this.hide_sidebar,\n\t\t\tstandard: true,\n\t\t\tshortcut: \"Ctrl+K\",\n\t\t});\n\n\t\tif (\n\t\t\tfrappe.user.has_role(\"System Manager\") &&\n\t\t\tfrappe.boot.developer_mode === 1\n\t\t) {\n\t\t\t// edit doctype\n\t\t\titems.push({\n\t\t\t\tlabel: __(\"Edit DocType\", null, \"Button in list view menu\"),\n\t\t\t\taction: () => frappe.set_route(\"form\", \"doctype\", doctype),\n\t\t\t\tstandard: true,\n\t\t\t});\n\t\t}\n\n\t\tif (frappe.user.has_role(\"System Manager\")) {\n\t\t\tif (this.get_view_settings) {\n\t\t\t\titems.push(this.get_view_settings());\n\t\t\t}\n\t\t}\n\n\t\treturn items;\n\t}\n\n\tget_view_settings() {\n\t\treturn {\n\t\t\tlabel: __(\"List Settings\", null, \"Button in list view menu\"),\n\t\t\taction: () => this.show_list_settings(),\n\t\t\tstandard: true,\n\t\t};\n\t}\n\n\tshow_list_settings() {\n\t\tfrappe.model.with_doctype(this.doctype, () => {\n\t\t\tnew ListSettings({\n\t\t\t\tlistview: this,\n\t\t\t\tdoctype: this.doctype,\n\t\t\t\tsettings: this.list_view_settings,\n\t\t\t\tmeta: frappe.get_meta(this.doctype)\n\t\t\t});\n\t\t});\n\t}\n\n\tget_workflow_action_menu_items() {\n\t\tconst workflow_actions = [];\n\t\tif (frappe.model.has_workflow(this.doctype)) {\n\t\t\tconst actions = frappe.workflow.get_all_transition_actions(\n\t\t\t\tthis.doctype\n\t\t\t);\n\t\t\tactions.forEach((action) => {\n\t\t\t\tworkflow_actions.push({\n\t\t\t\t\tlabel: __(action),\n\t\t\t\t\tname: action,\n\t\t\t\t\taction: () => {\n\t\t\t\t\t\tfrappe.xcall(\n\t\t\t\t\t\t\t\"frappe.model.workflow.bulk_workflow_approval\",\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tdocnames: this.get_checked_items(true),\n\t\t\t\t\t\t\t\tdoctype: this.doctype,\n\t\t\t\t\t\t\t\taction: action,\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t);\n\t\t\t\t\t},\n\t\t\t\t\tis_workflow_action: true,\n\t\t\t\t});\n\t\t\t});\n\t\t}\n\t\treturn workflow_actions;\n\t}\n\n\ttoggle_workflow_actions() {\n\t\tif (!frappe.model.has_workflow(this.doctype)) return;\n\t\tconst checked_items = this.get_checked_items();\n\t\tfrappe\n\t\t\t.xcall(\"frappe.model.workflow.get_common_transition_actions\", {\n\t\t\t\tdocs: checked_items,\n\t\t\t\tdoctype: this.doctype,\n\t\t\t})\n\t\t\t.then((actions) => {\n\t\t\t\tObject.keys(this.workflow_action_items).forEach((key) => {\n\t\t\t\t\tthis.workflow_action_items[key].toggle(\n\t\t\t\t\t\tactions.includes(key)\n\t\t\t\t\t);\n\t\t\t\t});\n\t\t\t});\n\t}\n\n\tget_actions_menu_items() {\n\t\tconst doctype = this.doctype;\n\t\tconst actions_menu_items = [];\n\t\tconst bulk_operations = new BulkOperations({ doctype: this.doctype });\n\n\t\tconst is_field_editable = (field_doc) => {\n\t\t\treturn (\n\t\t\t\tfield_doc.fieldname &&\n\t\t\t\tfrappe.model.is_value_type(field_doc) &&\n\t\t\t\tfield_doc.fieldtype !== \"Read Only\" &&\n\t\t\t\t!field_doc.hidden &&\n\t\t\t\t!field_doc.read_only &&\n\t\t\t\t!field_doc.is_virtual\n\t\t\t);\n\t\t};\n\n\t\tconst has_editable_fields = (doctype) => {\n\t\t\treturn frappe.meta\n\t\t\t\t.get_docfields(doctype)\n\t\t\t\t.some((field_doc) => is_field_editable(field_doc));\n\t\t};\n\n\t\tconst has_submit_permission = (doctype) => {\n\t\t\treturn frappe.perm.has_perm(doctype, 0, \"submit\");\n\t\t};\n\n\t\t// utility\n\t\tconst bulk_assignment = () => {\n\t\t\treturn {\n\t\t\t\tlabel: __(\"Assign To\", null, \"Button in list view actions menu\"),\n\t\t\t\taction: () => {\n\t\t\t\t\tthis.disable_list_update = true;\n\t\t\t\t\tbulk_operations.assign(\n\t\t\t\t\t\tthis.get_checked_items(true),\n\t\t\t\t\t\t() => {\n\t\t\t\t\t\t\tthis.disable_list_update = false;\n\t\t\t\t\t\t\tthis.clear_checked_items();\n\t\t\t\t\t\t\tthis.refresh();\n\t\t\t\t\t\t}\n\t\t\t\t\t);\n\t\t\t\t},\n\t\t\t\tstandard: true,\n\t\t\t};\n\t\t};\n\n\t\tconst bulk_assignment_rule = () => {\n\t\t\treturn {\n\t\t\t\tlabel: __(\"Apply Assignment Rule\", null, \"Button in list view actions menu\"),\n\t\t\t\taction: () => {\n\t\t\t\t\tthis.disable_list_update = true;\n\t\t\t\t\tbulk_operations.apply_assignment_rule(\n\t\t\t\t\t\tthis.get_checked_items(true),\n\t\t\t\t\t\t() => {\n\t\t\t\t\t\t\tthis.disable_list_update = false;\n\t\t\t\t\t\t\tthis.clear_checked_items();\n\t\t\t\t\t\t\tthis.refresh();\n\t\t\t\t\t\t}\n\t\t\t\t\t);\n\t\t\t\t},\n\t\t\t\tstandard: true,\n\t\t\t};\n\t\t};\n\n\t\tconst bulk_add_tags = () => {\n\t\t\treturn {\n\t\t\t\tlabel: __(\"Add Tags\", null, \"Button in list view actions menu\"),\n\t\t\t\taction: () => {\n\t\t\t\t\tthis.disable_list_update = true;\n\t\t\t\t\tbulk_operations.add_tags(\n\t\t\t\t\t\tthis.get_checked_items(true),\n\t\t\t\t\t\t() => {\n\t\t\t\t\t\t\tthis.disable_list_update = false;\n\t\t\t\t\t\t\tthis.clear_checked_items();\n\t\t\t\t\t\t\tthis.refresh();\n\t\t\t\t\t\t}\n\t\t\t\t\t);\n\t\t\t\t},\n\t\t\t\tstandard: true,\n\t\t\t};\n\t\t};\n\n\t\tconst bulk_printing = () => {\n\t\t\treturn {\n\t\t\t\tlabel: __(\"Print\", null, \"Button in list view actions menu\"),\n\t\t\t\taction: () => bulk_operations.print(this.get_checked_items()),\n\t\t\t\tstandard: true,\n\t\t\t};\n\t\t};\n\n\t\tconst bulk_delete = () => {\n\t\t\treturn {\n\t\t\t\tlabel: __(\"Delete\", null, \"Button in list view actions menu\"),\n\t\t\t\taction: () => {\n\t\t\t\t\tconst docnames = this.get_checked_items(true).map(\n\t\t\t\t\t\t(docname) => docname.toString()\n\t\t\t\t\t);\n\t\t\t\t\tlet message = __(\"Delete {0} item permanently?\", [docnames.length], \"Title of confirmation dialog\");\n\t\t\t\t\tif (docnames.length > 1) {\n\t\t\t\t\t\tmessage = __(\"Delete {0} items permanently?\", [docnames.length], \"Title of confirmation dialog\");\n\t\t\t\t\t}\n\t\t\t\t\tfrappe.confirm(\n\t\t\t\t\t\tmessage,\n\t\t\t\t\t\t() => {\n\t\t\t\t\t\t\tthis.disable_list_update = true;\n\t\t\t\t\t\t\tbulk_operations.delete(docnames, () => {\n\t\t\t\t\t\t\t\tthis.disable_list_update = false;\n\t\t\t\t\t\t\t\tthis.clear_checked_items();\n\t\t\t\t\t\t\t\tthis.refresh();\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t}\n\t\t\t\t\t);\n\t\t\t\t},\n\t\t\t\tstandard: true,\n\t\t\t};\n\t\t};\n\n\t\tconst bulk_cancel = () => {\n\t\t\treturn {\n\t\t\t\tlabel: __(\"Cancel\", null, \"Button in list view actions menu\"),\n\t\t\t\taction: () => {\n\t\t\t\t\tconst docnames = this.get_checked_items(true);\n\t\t\t\t\tif (docnames.length > 0) {\n\t\t\t\t\t\tfrappe.confirm(\n\t\t\t\t\t\t\t__(\"Cancel {0} documents?\", [docnames.length], \"Title of confirmation dialog\"),\n\t\t\t\t\t\t\t() => {\n\t\t\t\t\t\t\t\tthis.disable_list_update = true;\n\t\t\t\t\t\t\t\tbulk_operations.submit_or_cancel(\n\t\t\t\t\t\t\t\t\tdocnames,\n\t\t\t\t\t\t\t\t\t\"cancel\",\n\t\t\t\t\t\t\t\t\t() => {\n\t\t\t\t\t\t\t\t\t\tthis.disable_list_update = false;\n\t\t\t\t\t\t\t\t\t\tthis.clear_checked_items();\n\t\t\t\t\t\t\t\t\t\tthis.refresh();\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t});\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\tstandard: true,\n\t\t\t};\n\t\t};\n\n\t\tconst bulk_submit = () => {\n\t\t\treturn {\n\t\t\t\tlabel: __(\"Submit\", null, \"Button in list view actions menu\"),\n\t\t\t\taction: () => {\n\t\t\t\t\tconst docnames = this.get_checked_items(true);\n\t\t\t\t\tif (docnames.length > 0) {\n\t\t\t\t\t\tfrappe.confirm(\n\t\t\t\t\t\t\t__(\"Submit {0} documents?\", [docnames.length], \"Title of confirmation dialog\"),\n\t\t\t\t\t\t\t() => {\n\t\t\t\t\t\t\t\tthis.disable_list_update = true;\n\t\t\t\t\t\t\t\tbulk_operations.submit_or_cancel(\n\t\t\t\t\t\t\t\t\tdocnames,\n\t\t\t\t\t\t\t\t\t\"submit\",\n\t\t\t\t\t\t\t\t\t() => {\n\t\t\t\t\t\t\t\t\t\tthis.disable_list_update = false;\n\t\t\t\t\t\t\t\t\t\tthis.clear_checked_items();\n\t\t\t\t\t\t\t\t\t\tthis.refresh();\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t);\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\tstandard: true,\n\t\t\t};\n\t\t};\n\n\t\tconst bulk_edit = () => {\n\t\t\treturn {\n\t\t\t\tlabel: __(\"Edit\", null, \"Button in list view actions menu\"),\n\t\t\t\taction: () => {\n\t\t\t\t\tlet field_mappings = {};\n\n\t\t\t\t\tfrappe.meta.get_docfields(doctype).forEach((field_doc) => {\n\t\t\t\t\t\tif (is_field_editable(field_doc)) {\n\t\t\t\t\t\t\tfield_mappings[field_doc.label] = Object.assign(\n\t\t\t\t\t\t\t\t{},\n\t\t\t\t\t\t\t\tfield_doc\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\n\t\t\t\t\tthis.disable_list_update = true;\n\t\t\t\t\tbulk_operations.edit(\n\t\t\t\t\t\tthis.get_checked_items(true),\n\t\t\t\t\t\tfield_mappings,\n\t\t\t\t\t\t() => {\n\t\t\t\t\t\t\tthis.disable_list_update = false;\n\t\t\t\t\t\t\tthis.clear_checked_items();\n\t\t\t\t\t\t\tthis.refresh();\n\t\t\t\t\t\t}\n\t\t\t\t\t);\n\t\t\t\t},\n\t\t\t\tstandard: true,\n\t\t\t};\n\t\t};\n\n\t\tconst bulk_export = () => {\n\t\t\treturn {\n\t\t\t\tlabel: __(\"Export\", null, \"Button in list view actions menu\"),\n\t\t\t\taction: () => {\n\t\t\t\t\tconst docnames = this.get_checked_items(true);\n\n\t\t\t\t\tbulk_operations.export(doctype, docnames);\n\t\t\t\t},\n\t\t\t\tstandard: true\n\t\t\t};\n\t\t};\n\n\t\t// bulk edit\n\t\tif (has_editable_fields(doctype)) {\n\t\t\tactions_menu_items.push(bulk_edit());\n\t\t}\n\n\t\tactions_menu_items.push(bulk_export());\n\n\t\t// bulk assignment\n\t\tactions_menu_items.push(bulk_assignment());\n\n\t\tactions_menu_items.push(bulk_assignment_rule());\n\n\t\tactions_menu_items.push(bulk_add_tags());\n\n\t\t// bulk printing\n\t\tif (frappe.model.can_print(doctype)) {\n\t\t\tactions_menu_items.push(bulk_printing());\n\t\t}\n\n\t\t// bulk submit\n\t\tif (\n\t\t\tfrappe.model.is_submittable(doctype) &&\n\t\t\thas_submit_permission(doctype) &&\n\t\t\t!frappe.model.has_workflow(doctype)\n\t\t) {\n\t\t\tactions_menu_items.push(bulk_submit());\n\t\t}\n\n\t\t// bulk cancel\n\t\tif (\n\t\t\tfrappe.model.can_cancel(doctype) &&\n\t\t\t!frappe.model.has_workflow(doctype)\n\t\t) {\n\t\t\tactions_menu_items.push(bulk_cancel());\n\t\t}\n\n\t\t// bulk delete\n\t\tif (frappe.model.can_delete(doctype)) {\n\t\t\tactions_menu_items.push(bulk_delete());\n\t\t}\n\n\t\treturn actions_menu_items;\n\t}\n\n\tparse_filters_from_route_options() {\n\t\tconst filters = [];\n\n\t\tfor (let field in frappe.route_options) {\n\t\t\tlet doctype = null;\n\t\t\tlet value = frappe.route_options[field];\n\n\t\t\tlet value_array;\n\t\t\tif (\n\t\t\t\t$.isArray(value) &&\n\t\t\t\tvalue[0].startsWith(\"[\") &&\n\t\t\t\tvalue[0].endsWith(\"]\")\n\t\t\t) {\n\t\t\t\tvalue_array = [];\n\t\t\t\tfor (var i = 0; i < value.length; i++) {\n\t\t\t\t\tvalue_array.push(JSON.parse(value[i]));\n\t\t\t\t}\n\t\t\t} else if (\n\t\t\t\ttypeof value === \"string\" &&\n\t\t\t\tvalue.startsWith(\"[\") &&\n\t\t\t\tvalue.endsWith(\"]\")\n\t\t\t) {\n\t\t\t\tvalue = JSON.parse(value);\n\t\t\t}\n\n\t\t\t// if `Child DocType.fieldname`\n\t\t\tif (field.includes(\".\")) {\n\t\t\t\tdoctype = field.split(\".\")[0];\n\t\t\t\tfield = field.split(\".\")[1];\n\t\t\t}\n\n\t\t\t// find the table in which the key exists\n\t\t\t// for example the filter could be {\"item_code\": \"X\"}\n\t\t\t// where item_code is in the child table.\n\n\t\t\t// we can search all tables for mapping the doctype\n\t\t\tif (!doctype) {\n\t\t\t\tdoctype = frappe.meta.get_doctype_for_field(\n\t\t\t\t\tthis.doctype,\n\t\t\t\t\tfield\n\t\t\t\t);\n\t\t\t}\n\n\t\t\tif (doctype) {\n\t\t\t\tif (value_array) {\n\t\t\t\t\tfor (var j = 0; j < value_array.length; j++) {\n\t\t\t\t\t\tif ($.isArray(value_array[j])) {\n\t\t\t\t\t\t\tfilters.push([\n\t\t\t\t\t\t\t\tdoctype,\n\t\t\t\t\t\t\t\tfield,\n\t\t\t\t\t\t\t\tvalue_array[j][0],\n\t\t\t\t\t\t\t\tvalue_array[j][1],\n\t\t\t\t\t\t\t]);\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tfilters.push([doctype, field, \"=\", value_array[j]]);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t} else if ($.isArray(value)) {\n\t\t\t\t\tfilters.push([doctype, field, value[0], value[1]]);\n\t\t\t\t} else {\n\t\t\t\t\tfilters.push([doctype, field, \"=\", value]);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn filters;\n\t}\n};\n\n\nfrappe.get_list_view = (doctype) => {\n\tlet route = `List/${doctype}/List`;\n\treturn frappe.views.list_view[route];\n};\n", "// Copyright (c) 2015, Frappe Technologies Pvt. Ltd. and Contributors\n// MIT License. See license.txt\n\nfrappe.provide('frappe.views.list_view');\n\nwindow.cur_list = null;\nfrappe.views.ListFactory = class ListFactory extends frappe.views.Factory {\n\tmake (route) {\n\t\tconst me = this;\n\t\tconst doctype = route[1];\n\n\t\t// List / Gantt / Kanban / etc\n\t\t// File is a special view\n\t\tconst view_name = doctype !== 'File' ? frappe.utils.to_title_case(route[2] || 'List') : 'File';\n\t\tlet view_class = frappe.views[view_name + 'View'];\n\t\tif (!view_class) view_class = frappe.views.ListView;\n\n\t\tif (view_class && view_class.load_last_view && view_class.load_last_view()) {\n\t\t\t// view can have custom routing logic\n\t\t\treturn;\n\t\t}\n\n\t\tfrappe.provide('frappe.views.list_view.' + doctype);\n\n\t\tfrappe.views.list_view[me.page_name] = new view_class({\n\t\t\tdoctype: doctype,\n\t\t\tparent: me.make_page(true, me.page_name)\n\t\t});\n\n\t\tme.set_cur_list();\n\t}\n\n\tbefore_show() {\n\t\tif (this.re_route_to_view()) {\n\t\t\treturn false;\n\t\t}\n\n\t\tthis.set_module_breadcrumb();\n\t}\n\n\ton_show() {\n\t\tthis.set_cur_list();\n\t\tif (cur_list) cur_list.show();\n\t}\n\n\tre_route_to_view() {\n\t\tconst doctype = this.route[1];\n\t\tconst last_route = frappe.route_history.slice(-2)[0];\n\t\tif (\n\t\t\tthis.route[0] === 'List' &&\n\t\t\tthis.route.length === 2\t&&\n\t\t\tfrappe.views.list_view[doctype] &&\n\t\t\tlast_route &&\n\t\t\tlast_route[0] === 'List' &&\n\t\t\tlast_route[1] === doctype\n\t\t) {\n\t\t\t// last route same as this route, so going back.\n\t\t\t// this happens because /app/List/Item will redirect to /app/List/Item/List\n\t\t\t// while coming from back button, the last 2 routes will be same, so\n\t\t\t// we know user is coming in the reverse direction (via back button)\n\n\t\t\t// example:\n\t\t\t// Step 1: /app/List/Item redirects to /app/List/Item/List\n\t\t\t// Step 2: User hits \"back\" comes back to /app/List/Item\n\t\t\t// Step 3: Now we cannot send the user back to /app/List/Item/List so go back one more step\n\t\t\twindow.history.go(-1);\n\t\t\treturn true;\n\t\t}\n\t}\n\n\tset_module_breadcrumb() {\n\t\tif (frappe.route_history.length > 1) {\n\t\t\tconst prev_route = frappe.route_history[frappe.route_history.length - 2];\n\t\t\tif (prev_route[0] === 'modules') {\n\t\t\t\tconst doctype = this.route[1], module = prev_route[1];\n\t\t\t\tif (frappe.module_links[module] && frappe.module_links[module].includes(doctype)) {\n\t\t\t\t\t// save the last page from the breadcrumb was accessed\n\t\t\t\t\tfrappe.breadcrumbs.set_doctype_module(doctype, module);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\tset_cur_list() {\n\t\tcur_list = frappe.views.list_view[this.page_name];\n\t\tif (cur_list && cur_list.doctype !== this.route[1]) {\n\t\t\t// changing...\n\t\t\twindow.cur_list = null;\n\t\t}\n\t}\n}\n", "frappe.provide(\"frappe.views\");\n\nfrappe.views.ListViewSelect = class ListViewSelect {\n\tconstructor(opts) {\n\t\t$.extend(this, opts);\n\t\tthis.set_current_view();\n\t\tthis.setup_views();\n\t}\n\n\tadd_view_to_menu(view, action) {\n\t\tlet $el = this.page.add_custom_menu_item(\n\t\t\tthis.parent,\n\t\t\t__(view),\n\t\t\taction,\n\t\t\ttrue,\n\t\t\tnull,\n\t\t\tthis.icon_map[view] || \"list\"\n\t\t);\n\t\t$el.parent().attr(\"data-view\", view);\n\t}\n\n\tset_current_view() {\n\t\tthis.current_view = \"List\";\n\t\tconst route = frappe.get_route();\n\t\tconst view_name = frappe.utils.to_title_case(route[2] || \"\");\n\t\tif (route.length > 2 && frappe.views.view_modes.includes(view_name)) {\n\t\t\tthis.current_view = view_name;\n\n\t\t\tif (this.current_view === \"Kanban\") {\n\t\t\t\tthis.kanban_board = route[3];\n\t\t\t} else if (this.current_view === \"Inbox\") {\n\t\t\t\tthis.email_account = route[3];\n\t\t\t}\n\t\t}\n\t}\n\n\tset_route(view, calendar_name) {\n\t\tconst route = [this.slug(), \"view\", view];\n\t\tif (calendar_name) route.push(calendar_name);\n\t\tfrappe.set_route(route);\n\t}\n\n\tsetup_views() {\n\t\tconst views = {\n\t\t\tList: {\n\t\t\t\tcondition: true,\n\t\t\t\taction: () => this.set_route(\"list\")\n\t\t\t},\n\t\t\tReport: {\n\t\t\t\tcondition: true,\n\t\t\t\taction: () => this.set_route(\"report\"),\n\t\t\t\tcurrent_view_handler: () => {\n\t\t\t\t\tconst reports = this.get_reports();\n\t\t\t\t\tlet default_action = {};\n\t\t\t\t\t// Only add action if current route is not report builder\n\t\t\t\t\tif (frappe.get_route().length > 3) {\n\t\t\t\t\t\tdefault_action = {\n\t\t\t\t\t\t\tlabel: __(\"Report Builder\"),\n\t\t\t\t\t\t\taction: () => this.set_route(\"report\")\n\t\t\t\t\t\t};\n\t\t\t\t\t}\n\t\t\t\t\tthis.setup_dropdown_in_sidebar(\"Report\", reports, default_action);\n\t\t\t\t}\n\t\t\t},\n\t\t\tDashboard: {\n\t\t\t\tcondition: true,\n\t\t\t\taction: () => this.set_route(\"dashboard\")\n\t\t\t},\n\t\t\tCalendar: {\n\t\t\t\tcondition: frappe.views.calendar[this.doctype],\n\t\t\t\taction: () => this.set_route(\"calendar\", \"default\"),\n\t\t\t\tcurrent_view_handler: () => {\n\t\t\t\t\tthis.get_calendars().then(calendars => {\n\t\t\t\t\t\tthis.setup_dropdown_in_sidebar(\"Calendar\", calendars);\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t},\n\t\t\tGantt: {\n\t\t\t\tcondition: frappe.views.calendar[this.doctype],\n\t\t\t\taction: () => this.set_route(\"gantt\")\n\t\t\t},\n\t\t\tInbox: {\n\t\t\t\tcondition:\n\t\t\t\t\tthis.doctype === \"Communication\" &&\n\t\t\t\t\tfrappe.boot.email_accounts.length,\n\t\t\t\taction: () => this.set_route(\"inbox\"),\n\t\t\t\tcurrent_view_handler: () => {\n\t\t\t\t\tconst accounts = this.get_email_accounts();\n\t\t\t\t\tlet default_action;\n\t\t\t\t\tif (\n\t\t\t\t\t\thas_common(frappe.user_roles, [\n\t\t\t\t\t\t\t\"System Manager\",\n\t\t\t\t\t\t\t\"Administrator\"\n\t\t\t\t\t\t])\n\t\t\t\t\t) {\n\t\t\t\t\t\tdefault_action = {\n\t\t\t\t\t\t\tlabel: __(\"New Email Account\"),\n\t\t\t\t\t\t\taction: () => frappe.new_doc(\"Email Account\")\n\t\t\t\t\t\t};\n\t\t\t\t\t}\n\t\t\t\t\tthis.setup_dropdown_in_sidebar(\n\t\t\t\t\t\t\"Inbox\",\n\t\t\t\t\t\taccounts,\n\t\t\t\t\t\tdefault_action\n\t\t\t\t\t);\n\t\t\t\t}\n\t\t\t},\n\t\t\tImage: {\n\t\t\t\tcondition: this.list_view.meta.image_field,\n\t\t\t\taction: () => this.set_route(\"image\")\n\t\t\t},\n\t\t\tTree: {\n\t\t\t\tcondition:\n\t\t\t\t\tfrappe.treeview_settings[this.doctype] ||\n\t\t\t\t\tfrappe.get_meta(this.doctype).is_tree,\n\t\t\t\taction: () => this.set_route(\"tree\")\n\t\t\t},\n\t\t\tKanban: {\n\t\t\t\tcondition: true,\n\t\t\t\taction: () => this.setup_kanban_boards(),\n\t\t\t\tcurrent_view_handler: () => {\n\t\t\t\t\tfrappe.views.KanbanView.get_kanbans(this.doctype).then(\n\t\t\t\t\t\tkanbans => this.setup_kanban_switcher(kanbans)\n\t\t\t\t\t);\n\t\t\t\t}\n\t\t\t},\n\t\t\tMap: {\n\t\t\t\tcondition: this.list_view.settings.get_coords_method ||\n\t\t\t\t\t(this.list_view.meta.fields.find(i => i.fieldname === \"latitude\") &&\n\t\t\t\t\tthis.list_view.meta.fields.find(i => i.fieldname === \"longitude\")) ||\n\t\t\t\t\t(this.list_view.meta.fields.find(i => i.fieldname === 'location' && i.fieldtype == 'Geolocation')),\n\t\t\t\taction: () => this.set_route(\"map\")\n\t\t\t},\n\t\t};\n\n\t\tfrappe.views.view_modes.forEach(view => {\n\t\t\tif (this.current_view !== view && views[view].condition) {\n\t\t\t\tthis.add_view_to_menu(view, views[view].action);\n\t\t\t}\n\n\t\t\tif (this.current_view == view) {\n\t\t\t\tviews[view].current_view_handler &&\n\t\t\t\t\tviews[view].current_view_handler();\n\t\t\t}\n\t\t});\n\t}\n\n\tsetup_dropdown_in_sidebar(view, items, default_action) {\n\t\tif (!this.sidebar) return;\n\t\tconst views_wrapper = this.sidebar.sidebar.find(\".views-section\");\n\t\tviews_wrapper.find(\".sidebar-label\").html(`${__(view)}`);\n\t\tconst $dropdown = views_wrapper.find(\".views-dropdown\");\n\n\t\tlet placeholder = `${__(\"Select {0}\", [__(view)])}`;\n\t\tlet html = ``;\n\n\t\tif (!items || !items.length) {\n\t\t\thtml = `<div class=\"empty-state\">\n\t\t\t\t\t\t${__(\"No {0} Found\", [__(view)])}\n\t\t\t\t</div>`;\n\t\t} else {\n\t\t\tconst page_name = this.get_page_name();\n\t\t\titems.map(item => {\n\t\t\t\tif (item.name.toLowerCase() == page_name.toLowerCase()) {\n\t\t\t\t\tplaceholder = item.name;\n\t\t\t\t} else {\n\t\t\t\t\thtml += `<li><a class=\"dropdown-item\" href=\"${item.route}\">${\n\t\t\t\t\t\titem.name\n\t\t\t\t\t}</a></li>`;\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\n\t\tviews_wrapper.find(\".selected-view\").html(placeholder);\n\n\t\tif (default_action) {\n\t\t\tviews_wrapper.find(\".sidebar-action a\").html(default_action.label);\n\t\t\tviews_wrapper\n\t\t\t\t.find(\".sidebar-action a\")\n\t\t\t\t.click(() => default_action.action());\n\t\t}\n\n\t\t$dropdown.html(html);\n\n\t\tviews_wrapper.removeClass(\"hide\");\n\t}\n\n\tsetup_kanban_switcher(kanbans) {\n\t\tconst kanban_switcher = this.page.add_custom_button_group(\n\t\t\t__(\"Select Kanban\"),\n\t\t\tnull,\n\t\t\tthis.list_view.$filter_section\n\t\t);\n\n\t\tkanbans.map(k => {\n\t\t\tthis.page.add_custom_menu_item(\n\t\t\t\tkanban_switcher,\n\t\t\t\tk.name,\n\t\t\t\t() => this.set_route(\"kanban\", k.name),\n\t\t\t\tfalse\n\t\t\t);\n\t\t});\n\n\t\tthis.page.add_custom_menu_item(\n\t\t\tkanban_switcher,\n\t\t\t__(\"Create New Kanban Board\"),\n\t\t\t() => frappe.views.KanbanView.show_kanban_dialog(this.doctype),\n\t\t\ttrue\n\t\t);\n\t}\n\n\tget_page_name() {\n\t\treturn frappe.utils.to_title_case(\n\t\t\tfrappe.get_route().slice(-1)[0] || \"\"\n\t\t);\n\t}\n\n\tget_reports() {\n\t\t// add reports linked to this doctype to the dropdown\n\t\tlet added = [];\n\t\tlet reports_to_add = [];\n\n\t\tlet add_reports = reports => {\n\t\t\treports.map(r => {\n\t\t\t\tif (!r.ref_doctype || r.ref_doctype == this.doctype) {\n\t\t\t\t\tconst report_type =\n\t\t\t\t\t\tr.report_type === \"Report Builder\"\n\t\t\t\t\t\t\t? `/app/list/${r.ref_doctype}/report`\n\t\t\t\t\t\t\t: \"/app/query-report\";\n\n\t\t\t\t\tconst route =\n\t\t\t\t\t\tr.route || report_type + \"/\" + (r.title || r.name);\n\n\t\t\t\t\tif (added.indexOf(route) === -1) {\n\t\t\t\t\t\t// don't repeat\n\t\t\t\t\t\tadded.push(route);\n\t\t\t\t\t\treports_to_add.push({\n\t\t\t\t\t\t\tname: r.title || r.name,\n\t\t\t\t\t\t\troute: route\n\t\t\t\t\t\t});\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t});\n\t\t};\n\n\t\t// from reference doctype\n\t\tif (this.list_view.settings.reports) {\n\t\t\tadd_reports(this.list_view.settings.reports);\n\t\t}\n\n\t\t// Sort reports alphabetically\n\t\tvar reports =\n\t\t\tObject.values(frappe.boot.user.all_reports).sort((a, b) =>\n\t\t\t\ta.title.localeCompare(b.title)\n\t\t\t) || [];\n\n\t\t// from specially tagged reports\n\t\tadd_reports(reports);\n\n\t\treturn reports_to_add;\n\t}\n\n\tsetup_kanban_boards() {\n\t\tconst last_opened_kanban =\n\t\t\tfrappe.model.user_settings[this.doctype][\"Kanban\"]\n\t\t\t\t?.last_kanban_board;\n\n\t\tif (!last_opened_kanban) {\n\t\t\treturn frappe.views.KanbanView.show_kanban_dialog(\n\t\t\t\tthis.doctype,\n\t\t\t\ttrue\n\t\t\t);\n\t\t}\n\t\tfrappe.db.exists(\"Kanban Board\", last_opened_kanban).then(exists => {\n\t\t\tif (exists) {\n\t\t\t\tfrappe.set_route(\n\t\t\t\t\t\"list\",\n\t\t\t\t\tthis.doctype,\n\t\t\t\t\t\"kanban\",\n\t\t\t\t\tlast_opened_kanban\n\t\t\t\t);\n\t\t\t} else {\n\t\t\t\tfrappe.views.KanbanView.show_kanban_dialog(this.doctype, true);\n\t\t\t}\n\t\t});\n\t}\n\n\tget_calendars() {\n\t\tconst doctype = this.doctype;\n\t\tlet calendars = [];\n\n\t\treturn frappe.db\n\t\t\t.get_list(\"Calendar View\", {\n\t\t\t\tfilters: {\n\t\t\t\t\treference_doctype: doctype\n\t\t\t\t}\n\t\t\t})\n\t\t\t.then(result => {\n\t\t\t\tif (!(result && Array.isArray(result) && result.length)) return;\n\n\t\t\t\tif (frappe.views.calendar[this.doctype]) {\n\t\t\t\t\t// has standard calendar view\n\t\t\t\t\tcalendars.push({\n\t\t\t\t\t\tname: \"Default\",\n\t\t\t\t\t\troute: `/app/${this.slug()}/view/calendar/default`\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t\tresult.map(calendar => {\n\t\t\t\t\tcalendars.push({\n\t\t\t\t\t\tname: calendar.name,\n\t\t\t\t\t\troute: `/app/${this.slug()}/view/calendar/${\n\t\t\t\t\t\t\tcalendar.name\n\t\t\t\t\t\t}`\n\t\t\t\t\t});\n\t\t\t\t});\n\n\t\t\t\treturn calendars;\n\t\t\t});\n\t}\n\n\tget_email_accounts() {\n\t\tlet accounts_to_add = [];\n\t\tlet accounts = frappe.boot.email_accounts;\n\t\taccounts.forEach(account => {\n\t\t\tlet email_account =\n\t\t\t\taccount.email_id == \"All Accounts\"\n\t\t\t\t\t? \"All Accounts\"\n\t\t\t\t\t: account.email_account;\n\t\t\tlet route = `/app/communication/inbox/${email_account}`;\n\t\t\tlet display_name = [\n\t\t\t\t\"All Accounts\",\n\t\t\t\t\"Sent Mail\",\n\t\t\t\t\"Spam\",\n\t\t\t\t\"Trash\"\n\t\t\t].includes(account.email_id)\n\t\t\t\t? __(account.email_id)\n\t\t\t\t: account.email_account;\n\n\t\t\taccounts_to_add.push({\n\t\t\t\tname: display_name,\n\t\t\t\troute: route\n\t\t\t});\n\t\t});\n\n\t\treturn accounts_to_add;\n\t}\n\n\tslug() {\n\t\treturn frappe.router.slug(frappe.router.doctype_layout || this.doctype);\n\t}\n};\n", "frappe.provide('frappe.ui');\n\nexport default class ListFilter {\n\tconstructor({ wrapper, doctype }) {\n\t\tObject.assign(this, arguments[0]);\n\t\tthis.can_add_global = frappe.user.has_role([\n\t\t\t'System Manager',\n\t\t\t'Administrator',\n\t\t]);\n\t\tthis.filters = [];\n\t\tthis.make();\n\t\tthis.bind();\n\t\tthis.refresh();\n\t}\n\n\tmake() {\n\t\t// init dom\n\t\tthis.wrapper.html(`\n\t\t\t<li class=\"input-area\"></li>\n\t\t\t<li class=\"sidebar-action\">\n\t\t\t\t<a class=\"saved-filters-preview\">${__('Show Saved')}</a>\n\t\t\t</li>\n\t\t\t<div class=\"saved-filters\"></div>\n\t\t`);\n\n\t\tthis.$input_area = this.wrapper.find('.input-area');\n\t\tthis.$list_filters = this.wrapper.find('.list-filters');\n\t\tthis.$saved_filters = this.wrapper.find('.saved-filters').hide();\n\t\tthis.$saved_filters_preview = this.wrapper.find('.saved-filters-preview');\n\t\tthis.saved_filters_hidden = true;\n\n\t\tthis.filter_input = frappe.ui.form.make_control({\n\t\t\tdf: {\n\t\t\t\tfieldtype: 'Data',\n\t\t\t\tplaceholder: __('Filter Name'),\n\t\t\t\tinput_class: 'input-xs',\n\t\t\t},\n\t\t\tparent: this.$input_area,\n\t\t\trender_input: 1,\n\t\t});\n\n\t\tthis.is_global_input = frappe.ui.form.make_control({\n\t\t\tdf: {\n\t\t\t\tfieldtype: 'Check',\n\t\t\t\tlabel: __('Is Global'),\n\t\t\t},\n\t\t\tparent: this.$input_area,\n\t\t\trender_input: 1,\n\t\t});\n\t}\n\n\tbind() {\n\t\tthis.bind_save_filter();\n\t\tthis.bind_toggle_saved_filters();\n\t\tthis.bind_click_filter();\n\t\tthis.bind_remove_filter();\n\t}\n\n\trefresh() {\n\t\tthis.get_list_filters().then(() => {\n\t\t\tthis.filters.length ? this.$saved_filters_preview.show() : this.$saved_filters_preview.hide();\n\t\t\tconst html = this.filters.map((filter) => this.filter_template(filter));\n\t\t\tthis.wrapper.find('.filter-pill').remove();\n\t\t\tthis.$saved_filters.append(html);\n\t\t});\n\t\tthis.is_global_input.toggle(false);\n\t\tthis.filter_input.set_description('');\n\t}\n\n\tfilter_template(filter) {\n\t\treturn `<div class=\"list-link filter-pill list-sidebar-button btn btn-default\" data-name=\"${\n\t\t\tfilter.name\n\t\t}\">\n\t\t\t<a class=\"ellipsis filter-name\">${filter.filter_name}</a>\n\t\t\t<a class=\"remove\">${frappe.utils.icon('close')}</a>\n\t\t</div>`;\n\t}\n\n\tbind_toggle_saved_filters() {\n\t\tthis.wrapper.find('.saved-filters-preview').click(() => {\n\t\t\tthis.toggle_saved_filters(this.saved_filters_hidden);\n\t\t});\n\t}\n\n\ttoggle_saved_filters(show) {\n\t\tthis.$saved_filters.toggle(show);\n\t\tconst label = show ? __('Hide Saved') : __('Show Saved');\n\t\tthis.wrapper.find('.saved-filters-preview').text(label);\n\t\tthis.saved_filters_hidden = !this.saved_filters_hidden;\n\t}\n\n\tbind_click_filter() {\n\t\tthis.wrapper.on('click', '.filter-pill .filter-name', (e) => {\n\t\t\tlet $filter = $(e.currentTarget).parent('.filter-pill');\n\t\t\tthis.set_applied_filter($filter);\n\t\t\tconst name = $filter.attr('data-name');\n\t\t\tthis.list_view.filter_area.clear().then(() => {\n\t\t\t\tthis.list_view.filter_area.add(this.get_filters_values(name));\n\t\t\t});\n\t\t});\n\t}\n\n\tbind_remove_filter() {\n\t\tthis.wrapper.on('click', '.filter-pill .remove', (e) => {\n\t\t\tconst $li = $(e.currentTarget).closest('.filter-pill');\n\t\t\tconst name = $li.attr('data-name');\n\t\t\tconst applied_filters = this.get_filters_values(name);\n\t\t\t$li.remove();\n\t\t\tthis.remove_filter(name).then(() => this.refresh());\n\t\t\tthis.list_view.filter_area.remove_filters(applied_filters);\n\t\t});\n\t}\n\n\tbind_save_filter() {\n\t\tthis.filter_input.$input.keydown(\n\t\t\tfrappe.utils.debounce((e) => {\n\t\t\t\tconst value = this.filter_input.get_value();\n\t\t\t\tconst has_value = Boolean(value);\n\n\t\t\t\tif (e.which === frappe.ui.keyCode['ENTER']) {\n\t\t\t\t\tif (!has_value || this.filter_name_exists(value)) return;\n\n\t\t\t\t\tthis.filter_input.set_value('');\n\t\t\t\t\tthis.save_filter(value).then(() => this.refresh());\n\t\t\t\t\tthis.toggle_saved_filters(true);\n\t\t\t\t} else {\n\t\t\t\t\tlet help_text = __('Press Enter to save');\n\n\t\t\t\t\tif (this.filter_name_exists(value)) {\n\t\t\t\t\t\thelp_text = __('Duplicate Filter Name');\n\t\t\t\t\t}\n\n\t\t\t\t\tthis.filter_input.set_description(has_value ? help_text : '');\n\n\t\t\t\t\tif (this.can_add_global) {\n\t\t\t\t\t\tthis.is_global_input.toggle(has_value);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}, 300)\n\t\t);\n\t}\n\n\tsave_filter(filter_name) {\n\t\treturn frappe.db.insert({\n\t\t\tdoctype: 'List Filter',\n\t\t\treference_doctype: this.list_view.doctype,\n\t\t\tfilter_name,\n\t\t\tfor_user: this.is_global_input.get_value() ? '' : frappe.session.user,\n\t\t\tfilters: JSON.stringify(this.get_current_filters()),\n\t\t});\n\t}\n\n\tremove_filter(name) {\n\t\tif (!name) return;\n\t\treturn frappe.db.delete_doc('List Filter', name);\n\t}\n\n\tget_filters_values(name) {\n\t\tconst filter = this.filters.find((filter) => filter.name === name);\n\t\treturn JSON.parse(filter.filters || '[]');\n\t}\n\n\tget_current_filters() {\n\t\treturn this.list_view.filter_area.get();\n\t}\n\n\tfilter_name_exists(filter_name) {\n\t\treturn (this.filters || []).find((f) => f.filter_name === filter_name);\n\t}\n\n\tget_list_filters() {\n\t\tif (frappe.session.user === 'Guest') return Promise.resolve();\n\t\treturn frappe.db\n\t\t\t.get_list('List Filter', {\n\t\t\t\tfields: ['name', 'filter_name', 'for_user', 'filters'],\n\t\t\t\tfilters: { reference_doctype: this.list_view.doctype },\n\t\t\t\tor_filters: [\n\t\t\t\t\t['for_user', '=', frappe.session.user],\n\t\t\t\t\t['for_user', '=', ''],\n\t\t\t\t],\n\t\t\t})\n\t\t\t.then((filters) => {\n\t\t\t\tthis.filters = filters || [];\n\t\t\t});\n\t}\n\n\tset_applied_filter($filter) {\n\t\tthis.$saved_filters\n\t\t\t.find('.btn-primary-light')\n\t\t\t.toggleClass('btn-primary-light btn-default');\n\t\t$filter.toggleClass('btn-default btn-primary-light');\n\t}\n}\n", "// Copyright (c) 2015, Frappe Technologies Pvt. Ltd. and Contributors\n// MIT License. See license.txt\nimport ListFilter from './list_filter';\nfrappe.provide('frappe.views');\n\n// opts:\n// stats = list of fields\n// doctype\n// parent\n\nfrappe.views.ListSidebar = class ListSidebar {\n\tconstructor(opts) {\n\t\t$.extend(this, opts);\n\t\tthis.make();\n\t}\n\n\tmake() {\n\t\tvar sidebar_content = frappe.render_template(\"list_sidebar\", { doctype: this.doctype });\n\n\t\tthis.sidebar = $('<div class=\"list-sidebar overlay-sidebar hidden-xs hidden-sm\"></div>')\n\t\t\t.html(sidebar_content)\n\t\t\t.appendTo(this.page.sidebar.empty());\n\n\t\tthis.setup_list_filter();\n\t\tthis.setup_list_group_by();\n\n\t\t// do not remove\n\t\t// used to trigger custom scripts\n\t\t$(document).trigger('list_sidebar_setup');\n\n\t\tif (this.list_view.list_view_settings && this.list_view.list_view_settings.disable_sidebar_stats) {\n\t\t\tthis.sidebar.find('.list-tags').remove();\n\t\t} else {\n\t\t\tthis.sidebar.find('.list-stats').on('click', (e) => {\n\t\t\t\tthis.reload_stats();\n\t\t\t});\n\t\t}\n\n\t}\n\n\tsetup_views() {\n\t\tvar show_list_link = false;\n\n\t\tif (frappe.views.calendar[this.doctype]) {\n\t\t\tthis.sidebar.find('.list-link[data-view=\"Calendar\"]').removeClass(\"hide\");\n\t\t\tthis.sidebar.find('.list-link[data-view=\"Gantt\"]').removeClass('hide');\n\t\t\tshow_list_link = true;\n\t\t}\n\t\t//show link for kanban view\n\t\tthis.sidebar.find('.list-link[data-view=\"Kanban\"]').removeClass('hide');\n\t\tif (this.doctype === \"Communication\" && frappe.boot.email_accounts.length) {\n\t\t\tthis.sidebar.find('.list-link[data-view=\"Inbox\"]').removeClass('hide');\n\t\t\tshow_list_link = true;\n\t\t}\n\n\t\tif (frappe.treeview_settings[this.doctype] || frappe.get_meta(this.doctype).is_tree) {\n\t\t\tthis.sidebar.find(\".tree-link\").removeClass(\"hide\");\n\t\t}\n\n\t\tthis.current_view = 'List';\n\t\tvar route = frappe.get_route();\n\t\tif (route.length > 2 && frappe.views.view_modes.includes(route[2])) {\n\t\t\tthis.current_view = route[2];\n\n\t\t\tif (this.current_view === 'Kanban') {\n\t\t\t\tthis.kanban_board = route[3];\n\t\t\t} else if (this.current_view === 'Inbox') {\n\t\t\t\tthis.email_account = route[3];\n\t\t\t}\n\t\t}\n\n\t\t// disable link for current view\n\t\tthis.sidebar.find('.list-link[data-view=\"' + this.current_view + '\"] a')\n\t\t\t.attr('disabled', 'disabled').addClass('disabled');\n\n\t\t//enable link for Kanban view\n\t\tthis.sidebar.find('.list-link[data-view=\"Kanban\"] a, .list-link[data-view=\"Inbox\"] a')\n\t\t\t.attr('disabled', null).removeClass('disabled');\n\n\t\t// show image link if image_view\n\t\tif (this.list_view.meta.image_field) {\n\t\t\tthis.sidebar.find('.list-link[data-view=\"Image\"]').removeClass('hide');\n\t\t\tshow_list_link = true;\n\t\t}\n\n\t\tif (this.list_view.settings.get_coords_method ||\n\t\t\t(this.list_view.meta.fields.find(i => i.fieldname === \"latitude\") &&\n\t\t\tthis.list_view.meta.fields.find(i => i.fieldname === \"longitude\")) ||\n\t\t\t(this.list_view.meta.fields.find(i => i.fieldname === 'location' && i.fieldtype == 'Geolocation'))) {\n\t\t\tthis.sidebar.find('.list-link[data-view=\"Map\"]').removeClass('hide');\n\t\t\tshow_list_link = true;\n\t\t}\n\n\t\tif (show_list_link) {\n\t\t\tthis.sidebar.find('.list-link[data-view=\"List\"]').removeClass('hide');\n\t\t}\n\t}\n\n\tsetup_reports() {\n\t\t// add reports linked to this doctype to the dropdown\n\t\tvar me = this;\n\t\tvar added = [];\n\t\tvar dropdown = this.page.sidebar.find('.reports-dropdown');\n\t\tvar divider = false;\n\n\t\tvar add_reports = function(reports) {\n\t\t\t$.each(reports, function(name, r) {\n\t\t\t\tif (!r.ref_doctype || r.ref_doctype == me.doctype) {\n\t\t\t\t\tvar report_type = r.report_type === 'Report Builder' ?\n\t\t\t\t\t\t`List/${r.ref_doctype}/Report` : 'query-report';\n\n\t\t\t\t\tvar route = r.route || report_type + '/' + (r.title || r.name);\n\n\t\t\t\t\tif (added.indexOf(route) === -1) {\n\t\t\t\t\t\t// don't repeat\n\t\t\t\t\t\tadded.push(route);\n\n\t\t\t\t\t\tif (!divider) {\n\t\t\t\t\t\t\tme.get_divider().appendTo(dropdown);\n\t\t\t\t\t\t\tdivider = true;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t$('<li><a href=\"#' + route + '\">' +\n\t\t\t\t\t\t\t__(r.title || r.name) + '</a></li>').appendTo(dropdown);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t});\n\t\t};\n\n\t\t// from reference doctype\n\t\tif (this.list_view.settings.reports) {\n\t\t\tadd_reports(this.list_view.settings.reports);\n\t\t}\n\n\t\t// Sort reports alphabetically\n\t\tvar reports = Object.values(frappe.boot.user.all_reports).sort((a,b) => a.title.localeCompare(b.title)) || [];\n\n\t\t// from specially tagged reports\n\t\tadd_reports(reports);\n\t}\n\n\tsetup_list_filter() {\n\t\tthis.list_filter = new ListFilter({\n\t\t\twrapper: this.page.sidebar.find('.list-filters'),\n\t\t\tdoctype: this.doctype,\n\t\t\tlist_view: this.list_view\n\t\t});\n\t}\n\n\tsetup_kanban_boards() {\n\t\tconst $dropdown = this.page.sidebar.find('.kanban-dropdown');\n\t\tfrappe.views.KanbanView.setup_dropdown_in_sidebar(this.doctype, $dropdown);\n\t}\n\n\n\tsetup_keyboard_shortcuts() {\n\t\tthis.sidebar.find('.list-link > a, .list-link > .btn-group > a').each((i, el) => {\n\t\t\tfrappe.ui.keys\n\t\t\t\t.get_shortcut_group(this.page)\n\t\t\t\t.add($(el));\n\t\t});\n\t}\n\n\tsetup_list_group_by() {\n\t\tthis.list_group_by = new frappe.views.ListGroupBy({\n\t\t\tdoctype: this.doctype,\n\t\t\tsidebar: this,\n\t\t\tlist_view: this.list_view,\n\t\t\tpage: this.page\n\t\t});\n\t}\n\n\tget_stats() {\n\t\tvar me = this;\n\t\tfrappe.call({\n\t\t\tmethod: 'frappe.desk.reportview.get_sidebar_stats',\n\t\t\ttype: 'GET',\n\t\t\targs: {\n\t\t\t\tstats: me.stats,\n\t\t\t\tdoctype: me.doctype,\n\t\t\t\t// wait for list filter area to be generated before getting filters, or fallback to default filters\n\t\t\t\tfilters: (me.list_view.filter_area ? me.list_view.get_filters_for_args() : me.default_filters) || []\n\t\t\t},\n\t\t\tcallback: function(r) {\n\t\t\t\tlet stats = (r.message.stats || {})[\"_user_tags\"] || [];\n\t\t\t\tme.render_stat(stats);\n\t\t\t\tlet stats_dropdown = me.sidebar.find('.list-stats-dropdown');\n\t\t\t\tfrappe.utils.setup_search(stats_dropdown, '.stat-link', '.stat-label');\n\t\t\t}\n\t\t});\n\t}\n\n\trender_stat(stats) {\n\t\tlet args = {\n\t\t\tstats: stats,\n\t\t\tlabel: __(\"Tags\")\n\t\t};\n\n\t\tlet tag_list = $(frappe.render_template(\"list_sidebar_stat\", args)).on(\"click\", \".stat-link\", (e) => {\n\t\t\tlet fieldname = $(e.currentTarget).attr('data-field');\n\t\t\tlet label = $(e.currentTarget).attr('data-label');\n\t\t\tlet condition = \"like\";\n\t\t\tlet existing = this.list_view.filter_area.filter_list.get_filter(fieldname);\n\t\t\tif (existing) {\n\t\t\t\texisting.remove();\n\t\t\t}\n\t\t\tif (label == \"No Tags\") {\n\t\t\t\tlabel = \"%,%\";\n\t\t\t\tcondition = \"not like\";\n\t\t\t}\n\t\t\tthis.list_view.filter_area.add(\n\t\t\t\tthis.doctype,\n\t\t\t\tfieldname,\n\t\t\t\tcondition,\n\t\t\t\tlabel\n\t\t\t);\n\t\t});\n\n\t\tthis.sidebar.find(\".list-stats-dropdown .stat-result\").html(tag_list);\n\t}\n\n\treload_stats() {\n\t\tthis.sidebar.find(\".stat-link\").remove();\n\t\tthis.sidebar.find(\".stat-no-records\").remove();\n\t\tthis.get_stats();\n\t}\n};\n", "\n\tfrappe.templates['list_sidebar'] = `<ul class=\"list-unstyled sidebar-menu user-actions hide\">\n\t<li class=\"divider\"></li>\n</ul>\n<ul class=\"list-unstyled sidebar-menu\">\n\t<div class=\"sidebar-section views-section hide\">\n\t\t<li class=\"sidebar-label\">\n\t\t</li>\n\t\t<div class=\"current-view\">\n\t\t\t<li class=\"list-link\">\n\t\t\t\t<a class=\"btn btn-default btn-sm list-sidebar-button\"\n\t\t\t\t\tdata-toggle=\"dropdown\"\n\t\t\t\t\taria-haspopup=\"true\"\n\t\t\t\t\taria-expanded=\"false\"\n\t\t\t\t\thref=\"#\"\n\t\t\t\t>\n\t\t\t\t\t<span class=\"selected-view ellipsis\">\n\t\t\t\t\t</span>\n\t\t\t\t\t<span>\n\t\t\t\t\t\t<svg class=\"icon icon-xs\">\n\t\t\t\t\t\t\t<use href=\"#icon-select\"></use>\n\t\t\t\t\t\t</svg>\n\t\t\t\t\t</span>\n\t\t\t\t</a>\n\t\t\t\t<ul class=\"dropdown-menu views-dropdown\" role=\"menu\">\n\t\t\t\t</ul>\n\t\t\t</li>\n\t\t\t<li class=\"sidebar-action\">\n\t\t\t\t<a class=\"view-action\"></a>\n\t\t\t</li>\n\t\t</div>\n\t</div>\n\n\t<div class=\"sidebar-section filter-section\">\n\t\t<li class=\"sidebar-label\">\n\t\t\t{{ __(\"Filter By\") }}\n\t\t</li>\n\n\t\t<div class=\"list-group-by\">\n\t\t</div>\n\n\t\t<div class=\"list-tags\">\n\t\t\t<li class=\"list-stats list-link\">\n\t\t\t\t<a\n\t\t\t\t\tclass=\"btn btn-default btn-sm list-sidebar-button\"\n\t\t\t\t\tdata-toggle=\"dropdown\"\n\t\t\t\t\taria-haspopup=\"true\"\n\t\t\t\t\taria-expanded=\"false\"\n\t\t\t\t\thref=\"#\"\n\t\t\t\t>\n\t\t\t\t\t<span>{{ __(\"Tags\") }}</span>\n\t\t\t\t\t<span>\n\t\t\t\t\t\t<svg class=\"icon icon-xs\">\n\t\t\t\t\t\t\t<use href=\"#icon-select\"></use>\n\t\t\t\t\t\t</svg>\n\t\t\t\t\t</span>\n\t\t\t\t</a>\n\t\t\t\t<ul class=\"dropdown-menu list-stats-dropdown\" role=\"menu\">\n\t\t\t\t\t<div class=\"dropdown-search\">\n\t\t\t\t\t\t<input type=\"text\" placeholder={{__(\"Search\") }} data-element=\"search\" class=\"form-control input-xs\">\n\t\t\t\t\t</div>\n\t\t\t\t\t<div class=\"stat-result\">\n\t\t\t\t\t</div>\n\t\t\t\t</ul>\n\t\t\t</li>\n\t\t\t<li class=\"sidebar-action show-tags\">\n\t\t\t\t<a class=\"list-tag-preview\">{{ __(\"Show Tags\") }}</a>\n\t\t\t</li>\n\t\t</div>\n\t</div>\n\n\t<div class=\"sidebar-section save-filter-section\">\n\t\t<li class=\"sidebar-label\">\n\t\t\t{{ __(\"Save Filter\") }}\n\t\t</li>\n\t\t<li class=\"list-filters list-link\"></li>\n</ul>\n`;\n", "\n\tfrappe.templates['list_sidebar_stat'] = `\n{% if (!stats.length) { %}\n<li class=\"stat-no-records text-muted\">{{ __(\"No records tagged.\") }}</li>\n{% } else {\n\tfor (var i=0, l=stats.length; i < l; i++) {\n\t\tvar stat_label = stats[i][0];\n\t\tvar stat_count = stats[i][1];\n%}\n<li>\n\t<a class=\"stat-link dropdown-item\" data-label=\"{{ stat_label %}\" data-field=\"_user_tags\" href=\"#\" onclick=\"return false;\">\n\t\t<span class=\"stat-label\">{{ __(stat_label) }}</span>\n\t\t<span>{{ stat_count }}</span>\n\t</a>\n</li>\n\t{% }\n} %}\n`;\n", "frappe.provide('frappe.views');\n\nfrappe.views.ListGroupBy = class ListGroupBy {\n\tconstructor(opts) {\n\t\t$.extend(this, opts);\n\t\tthis.make_wrapper();\n\n\t\tthis.user_settings = frappe.get_user_settings(this.doctype);\n\t\tthis.group_by_fields = ['assigned_to', 'owner'];\n\t\tif (this.user_settings.group_by_fields) {\n\t\t\tthis.group_by_fields = this.group_by_fields.concat(\n\t\t\t\tthis.user_settings.group_by_fields\n\t\t\t);\n\t\t}\n\t\tthis.render_group_by_items();\n\t\tthis.make_group_by_fields_modal();\n\t\tthis.setup_dropdown();\n\t\tthis.setup_filter_by();\n\t}\n\n\tmake_group_by_fields_modal() {\n\t\tlet d = new frappe.ui.Dialog({\n\t\t\ttitle: __('Select Filters'),\n\t\t\tfields: this.get_group_by_dropdown_fields(),\n\t\t});\n\n\t\td.set_primary_action(__(\"Save\"), ({ group_by_fields }) => {\n\t\t\tfrappe.model.user_settings.save(\n\t\t\t\tthis.doctype,\n\t\t\t\t'group_by_fields',\n\t\t\t\tgroup_by_fields || null\n\t\t\t);\n\t\t\tthis.group_by_fields = group_by_fields\n\t\t\t\t? ['assigned_to', 'owner', ...group_by_fields]\n\t\t\t\t: ['assigned_to', 'owner'];\n\t\t\tthis.render_group_by_items();\n\t\t\tthis.setup_dropdown();\n\t\t\td.hide();\n\t\t});\n\n\t\td.$body.prepend(`\n\t\t\t<div class=\"filters-search\">\n\t\t\t\t<input type=\"text\"\n\t\t\t\t\tplaceholder=\"${__('Search')}\"\n\t\t\t\t\tdata-element=\"search\" class=\"form-control input-xs\">\n\t\t\t</div>\n\t\t`);\n\n\t\tthis.page.sidebar.find('.add-list-group-by a').on('click', () => {\n\t\t\tfrappe.utils.setup_search(d.$body, '.unit-checkbox', '.label-area');\n\t\t\td.show();\n\t\t});\n\t}\n\n\tmake_wrapper() {\n\t\tthis.$wrapper = this.sidebar.sidebar.find('.list-group-by');\n\t\tlet html = `\n\t\t\t<div class=\"list-group-by-fields\">\n\t\t\t</div>\n\t\t\t<li class=\"add-list-group-by sidebar-action\">\n\t\t\t\t<a class=\"add-group-by\">\n\t\t\t\t\t${__('Edit Filters')}\n\t\t\t\t</a>\n\t\t\t</li>\n\t\t`;\n\t\tthis.$wrapper.html(html);\n\t}\n\n\trender_group_by_items() {\n\t\tlet get_item_html = (fieldname) => {\n\t\t\tlet label, fieldtype;\n\t\t\tif (fieldname === 'assigned_to') {\n\t\t\t\tlabel = __('Assigned To');\n\t\t\t} else if (fieldname === 'owner') {\n\t\t\t\tlabel = __('Created By');\n\t\t\t} else {\n\t\t\t\tlabel = frappe.meta.get_label(this.doctype, fieldname);\n\t\t\t\tlet docfield = frappe.meta.get_docfield(this.doctype, fieldname);\n\t\t\t\tif (!docfield) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\tfieldtype = docfield.fieldtype;\n\t\t\t}\n\n\t\t\treturn `<li class=\"group-by-field list-link\">\n\t\t\t\t\t<a class=\"btn btn-default btn-sm list-sidebar-button\" data-toggle=\"dropdown\"\n\t\t\t\t\taria-haspopup=\"true\" aria-expanded=\"false\"\n\t\t\t\t\tdata-label=\"${label}\" data-fieldname=\"${fieldname}\" data-fieldtype=\"${fieldtype}\"\n\t\t\t\t\thref=\"#\" onclick=\"return false;\">\n\t\t\t\t\t\t<span class=\"ellipsis\">${__(label)}</span>\n\t\t\t\t\t\t<span>${frappe.utils.icon('select', 'xs')}</span>\n\t\t\t\t\t</a>\n\t\t\t\t\t<ul class=\"dropdown-menu group-by-dropdown\" role=\"menu\">\n\t\t\t\t\t</ul>\n\t\t\t</li>`;\n\t\t};\n\t\tlet html = this.group_by_fields.map(get_item_html).join('');\n\t\tthis.$wrapper.find('.list-group-by-fields').html(html);\n\t}\n\n\tsetup_dropdown() {\n\t\tthis.$wrapper.find('.group-by-field').on('show.bs.dropdown', (e) => {\n\t\t\tlet $dropdown = $(e.currentTarget).find('.group-by-dropdown');\n\t\t\tthis.set_loading_state($dropdown);\n\t\t\tlet fieldname = $(e.currentTarget).find('a')\n\t\t\t\t.attr('data-fieldname');\n\t\t\tlet fieldtype = $(e.currentTarget)\n\t\t\t\t.find('a')\n\t\t\t\t.attr('data-fieldtype');\n\t\t\tthis.get_group_by_count(fieldname).then((field_count_list) => {\n\t\t\t\tif (field_count_list.length) {\n\t\t\t\t\tlet applied_filter = this.list_view.get_filter_value(\n\t\t\t\t\t\tfieldname == 'assigned_to' ? '_assign' : fieldname\n\t\t\t\t\t);\n\t\t\t\t\tthis.render_dropdown_items(\n\t\t\t\t\t\tfield_count_list,\n\t\t\t\t\t\tfieldtype,\n\t\t\t\t\t\t$dropdown,\n\t\t\t\t\t\tapplied_filter\n\t\t\t\t\t);\n\t\t\t\t\tthis.setup_search($dropdown);\n\t\t\t\t} else {\n\t\t\t\t\tthis.set_empty_state($dropdown);\n\t\t\t\t}\n\t\t\t});\n\t\t});\n\t}\n\n\tset_loading_state($dropdown) {\n\t\t$dropdown.html(`<li>\n\t\t\t<div class=\"empty-state group-by-loading\">\n\t\t\t\t${__('Loading...')}\n\t\t\t</div>\n\t\t</li>`);\n\t}\n\n\tset_empty_state($dropdown) {\n\t\t$dropdown.html(\n\t\t\t`<div class=\"empty-state group-by-empty\">\n\t\t\t\t${__('No filters found')}\n\t\t\t</div>`\n\t\t);\n\t}\n\n\tsetup_search($dropdown) {\n\t\tfrappe.utils.setup_search(\n\t\t\t$dropdown,\n\t\t\t'.group-by-item',\n\t\t\t'.group-by-value',\n\t\t\t'data-name'\n\t\t);\n\t}\n\n\tget_group_by_dropdown_fields() {\n\t\tlet group_by_fields = [];\n\t\tlet fields = this.list_view.meta.fields.filter((f) =>\n\t\t\t['Select', 'Link', 'Data', 'Int', 'Check'].includes(f.fieldtype)\n\t\t);\n\t\tgroup_by_fields.push({\n\t\t\tlabel: __(this.doctype),\n\t\t\tfieldname: 'group_by_fields',\n\t\t\tfieldtype: 'MultiCheck',\n\t\t\tcolumns: 2,\n\t\t\toptions: fields.map((df) => ({\n\t\t\t\tlabel: __(df.label),\n\t\t\t\tvalue: df.fieldname,\n\t\t\t\tchecked: this.group_by_fields.includes(df.fieldname),\n\t\t\t})),\n\t\t});\n\t\treturn group_by_fields;\n\t}\n\n\tget_group_by_count(field) {\n\t\tlet current_filters = this.list_view.get_filters_for_args();\n\n\t\t// remove filter of the current field\n\t\tcurrent_filters = current_filters.filter(\n\t\t\t(f_arr) => !f_arr.includes(field === 'assigned_to' ? '_assign' : field)\n\t\t);\n\n\t\tlet args = {\n\t\t\tdoctype: this.doctype,\n\t\t\tcurrent_filters: current_filters,\n\t\t\tfield: field,\n\t\t};\n\n\t\treturn frappe\n\t\t\t.call('frappe.desk.listview.get_group_by_count', args)\n\t\t\t.then((r) => {\n\t\t\t\tlet field_counts = r.message || [];\n\t\t\t\tfield_counts = field_counts.filter((f) => f.count !== 0);\n\t\t\t\tlet current_user = field_counts.find(\n\t\t\t\t\t(f) => f.name === frappe.session.user\n\t\t\t\t);\n\t\t\t\tfield_counts = field_counts.filter(\n\t\t\t\t\t(f) =>\n\t\t\t\t\t\t!['Guest', 'Administrator', frappe.session.user].includes(f.name)\n\t\t\t\t);\n\t\t\t\t// Set frappe.session.user on top of the list\n\t\t\t\tif (current_user) field_counts.unshift(current_user);\n\t\t\t\treturn field_counts;\n\t\t\t});\n\t}\n\n\trender_dropdown_items(fields, fieldtype, $dropdown, applied_filter) {\n\t\tlet standard_html = `\n\t\t\t<div class=\"dropdown-search\">\n\t\t\t\t<input type=\"text\"\n\t\t\t\t\tplaceholder=\"${__('Search')}\"\n\t\t\t\t\tdata-element=\"search\"\n\t\t\t\t\tclass=\"dropdown-search-input form-control input-xs\"\n\t\t\t\t>\n\t\t\t</div>\n\t\t`;\n\t\tlet applied_filter_html='';\n\t\tlet dropdown_items_html = '';\n\n\t\tfields.map(field => {\n\t\t\tif (field.name === applied_filter) {\n\t\t\t\tapplied_filter_html = this.get_dropdown_html(field, fieldtype, true);\n\t\t\t} else {\n\t\t\t\tdropdown_items_html += this.get_dropdown_html(field, fieldtype);\n\t\t\t}\n\t\t});\n\n\t\tlet dropdown_html = standard_html + applied_filter_html + dropdown_items_html;\n\t\t$dropdown.toggleClass('has-selected', Boolean(applied_filter_html));\n\t\t$dropdown.html(dropdown_html);\n\t}\n\n\tget_dropdown_html(field, fieldtype, applied=false) {\n\t\tlet label = field.name == null ? __('Not Set') : field.name;\n\t\tif (label === frappe.session.user) {\n\t\t\tlabel = __('Me');\n\t\t} else if (fieldtype && fieldtype == 'Check') {\n\t\t\tlabel = label == '0' ? __('No') : __('Yes');\n\t\t}\n\t\tlet value = field.name == null ? '' : encodeURIComponent(field.name);\n\n\t\tlet applied_html = applied ? `<span class=\"applied\"> ${frappe.utils.icon('tick', 'xs')} </span>` : '';\n\t\treturn `<li class=\"group-by-item ${applied ? 'selected': ''}\" data-value=\"${value}\">\n\t\t\t<a class=\"dropdown-item\" href=\"#\" onclick=\"return false;\">\n\t\t\t\t${applied_html}\n\t\t\t\t<span class=\"group-by-value ellipsis\" data-name=\"${field.name}\">${label}</span>\n\t\t\t\t<span class=\"group-by-count\">${field.count}</span>\n\t\t\t</a>\n\t\t</li>`;\n\t}\n\n\tsetup_filter_by() {\n\t\tthis.$wrapper.on('click', '.group-by-item', (e) => {\n\t\t\tlet $target = $(e.currentTarget);\n\t\t\tlet is_selected = $target.hasClass('selected');\n\n\t\t\tlet fieldname = $target\n\t\t\t\t.parents('.group-by-field')\n\t\t\t\t.find('a')\n\t\t\t\t.data('fieldname');\n\t\t\tlet value =\n\t\t\t\ttypeof $target.data('value') === 'string'\n\t\t\t\t\t? decodeURIComponent($target.data('value').trim())\n\t\t\t\t\t: $target.data('value');\n\t\t\tfieldname = fieldname === 'assigned_to' ? '_assign' : fieldname;\n\n\t\t\treturn this.list_view.filter_area.remove(fieldname).then(() => {\n\t\t\t\tif (is_selected) return;\n\t\t\t\treturn this.apply_filter(fieldname, value);\n\t\t\t});\n\t\t});\n\t}\n\n\tapply_filter(fieldname, value) {\n\t\tlet operator = '=';\n\t\tif (value === '') {\n\t\t\toperator = 'is';\n\t\t\tvalue = 'not set';\n\t\t}\n\t\tif (fieldname === '_assign') {\n\t\t\toperator = 'like';\n\t\t\tvalue = `%${value}%`;\n\t\t}\n\t\treturn this.list_view.filter_area.add(\n\t\t\tthis.doctype,\n\t\t\tfieldname,\n\t\t\toperator,\n\t\t\tvalue\n\t\t);\n\t}\n};\n", "\n\tfrappe.templates['list_view_permission_restrictions'] = `<table class=\"table table-bordered\" style=\"margin: 0;\">\n\t<thead>\n\t\t<th>{{ __(\"Field\") }}</th>\n\t\t<th>{{ __(\"Value\") }}</th>\n\t</thead>\n\t<tbody>\n\t\t{% for (let condition of condition_list ) { %}\n\t\t\t{% for (let key in condition) { %}\n\t\t\t<tr>\n\t\t\t\t<td>{{ __(key) }}</td>\n\t\t\t\t<td>{{ frappe.utils.comma_or(condition[key]) }}</td>\n\t\t\t</tr>\n\t\t\t{% } %}\n\t\t{% } %}\n\t</tbody>\n</table>\n`;\n", "frappe.provide('frappe.views');\n\nfrappe.views.GanttView = class GanttView extends frappe.views.ListView {\n\tget view_name() {\n\t\treturn 'Gantt';\n\t}\n\n\tsetup_defaults() {\n\t\treturn super.setup_defaults()\n\t\t\t.then(() => {\n\t\t\t\tthis.page_title = this.page_title + ' ' + __('Gantt');\n\t\t\t\tthis.calendar_settings = frappe.views.calendar[this.doctype] || {};\n\n\t\t\t\tif (typeof this.calendar_settings.gantt == 'object') {\n\t\t\t\t\tObject.assign(this.calendar_settings, this.calendar_settings.gantt);\n\t\t\t\t}\n\n\t\t\t\tif (this.calendar_settings.order_by) {\n\t\t\t\t\tthis.sort_by = this.calendar_settings.order_by;\n\t\t\t\t\tthis.sort_order = 'asc';\n\t\t\t\t} else {\n\t\t\t\t\tthis.sort_by = this.view_user_settings.sort_by || this.calendar_settings.field_map.start;\n\t\t\t\t\tthis.sort_order = this.view_user_settings.sort_order || 'asc';\n\t\t\t\t}\n\t\t\t})\n\t}\n\n\tsetup_view() {\n\n\t}\n\n\tprepare_data(data) {\n\t\tsuper.prepare_data(data);\n\t\tthis.prepare_tasks();\n\t}\n\n\tprepare_tasks() {\n\t\tvar me = this;\n\t\tvar meta = this.meta;\n\t\tvar field_map = this.calendar_settings.field_map;\n\n\t\tthis.tasks = this.data.map(function (item) {\n\t\t\t// set progress\n\t\t\tvar progress = 0;\n\t\t\tif (field_map.progress && $.isFunction(field_map.progress)) {\n\t\t\t\tprogress = field_map.progress(item);\n\t\t\t} else if (field_map.progress) {\n\t\t\t\tprogress = item[field_map.progress];\n\t\t\t}\n\n\t\t\t// title\n\t\t\tvar label;\n\t\t\tif (meta.title_field) {\n\t\t\t\tlabel = item.progress\n\t\t\t\t\t? __(\"{0} ({1}) - {2}%\", [item[meta.title_field], item.name, item.progress])\n\t\t\t\t\t: __(\"{0} ({1})\", [item[meta.title_field], item.name]);\n\t\t\t} else {\n\t\t\t\tlabel = item[field_map.title];\n\t\t\t}\n\n\t\t\tvar r = {\n\t\t\t\tstart: item[field_map.start],\n\t\t\t\tend: item[field_map.end],\n\t\t\t\tname: label,\n\t\t\t\tid: item[field_map.id || 'name'],\n\t\t\t\tdoctype: me.doctype,\n\t\t\t\tprogress: progress,\n\t\t\t\tdependencies: item.depends_on_tasks || \"\"\n\t\t\t};\n\n\t\t\tif (item.color && frappe.ui.color.validate_hex(item.color)) {\n\t\t\t\tr['custom_class'] = 'color-' + item.color.substr(1);\n\t\t\t}\n\n\t\t\tif (item.is_milestone) {\n\t\t\t\tr['custom_class'] = 'bar-milestone';\n\t\t\t}\n\n\t\t\treturn r;\n\t\t});\n\t}\n\n\trender() {\n\t\tthis.load_lib.then(() => {\n\t\t\tthis.render_gantt();\n\t\t});\n\t}\n\n\trender_header() {\n\n\t}\n\n\trender_gantt() {\n\t\tconst me = this;\n\t\tconst gantt_view_mode = this.view_user_settings.gantt_view_mode || 'Day';\n\t\tconst field_map = this.calendar_settings.field_map;\n\t\tconst date_format = 'YYYY-MM-DD';\n\n\t\tthis.$result.empty();\n\t\tthis.$result.addClass('gantt-modern');\n\n\t\tthis.gantt = new Gantt(this.$result[0], this.tasks, {\n\t\t\tbar_height: 35,\n\t\t\tbar_corner_radius: 4,\n\t\t\tresize_handle_width: 8,\n\t\t\tresize_handle_height: 28,\n\t\t\tresize_handle_corner_radius: 3,\n\t\t\tresize_handle_offset: 4,\n\t\t\tview_mode: gantt_view_mode,\n\t\t\tdate_format: \"YYYY-MM-DD\",\n\t\t\ton_click: task => {\n\t\t\t\tfrappe.set_route('Form', task.doctype, task.id);\n\t\t\t},\n\t\t\ton_date_change: (task, start, end) => {\n\t\t\t\tif (!me.can_write) return;\n\t\t\t\tfrappe.db.set_value(task.doctype, task.id, {\n\t\t\t\t\t[field_map.start]: moment(start).format(date_format),\n\t\t\t\t\t[field_map.end]: moment(end).format(date_format)\n\t\t\t\t});\n\t\t\t},\n\t\t\ton_progress_change: (task, progress) => {\n\t\t\t\tif (!me.can_write) return;\n\t\t\t\tvar progress_fieldname = 'progress';\n\n\t\t\t\tif ($.isFunction(field_map.progress)) {\n\t\t\t\t\tprogress_fieldname = null;\n\t\t\t\t} else if (field_map.progress) {\n\t\t\t\t\tprogress_fieldname = field_map.progress;\n\t\t\t\t}\n\n\t\t\t\tif (progress_fieldname) {\n\t\t\t\t\tfrappe.db.set_value(task.doctype, task.id, {\n\t\t\t\t\t\t[progress_fieldname]: parseInt(progress)\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t},\n\t\t\ton_view_change: mode => {\n\t\t\t\t// save view mode\n\t\t\t\tme.save_view_user_settings({\n\t\t\t\t\tgantt_view_mode: mode\n\t\t\t\t});\n\t\t\t},\n\t\t\tcustom_popup_html: task => {\n\t\t\t\tvar item = me.get_item(task.id);\n\n\t\t\t\tvar html =\n\t\t\t\t\t`<div class=\"title\">${task.name}</div>\n\t\t\t\t\t<div class=\"subtitle\">${moment(task._start).format('MMM D')} - ${moment(task._end).format('MMM D')}</div>`;\n\n\t\t\t\t// custom html in doctype settings\n\t\t\t\tvar custom = me.settings.gantt_custom_popup_html;\n\t\t\t\tif (custom && $.isFunction(custom)) {\n\t\t\t\t\tvar ganttobj = task;\n\t\t\t\t\thtml = custom(ganttobj, item);\n\t\t\t\t}\n\t\t\t\treturn '<div class=\"details-container\">' + html + '</div>';\n\t\t\t}\n\t\t});\n\t\tthis.setup_view_mode_buttons();\n\t\tthis.set_colors();\n\t}\n\n\tsetup_view_mode_buttons() {\n\t\t// view modes (for translation) __(\"Day\"), __(\"Week\"), __(\"Month\"),\n\t\t//__(\"Half Day\"), __(\"Quarter Day\")\n\n\t\tlet $btn_group = this.$paging_area.find('.gantt-view-mode');\n\t\tif ($btn_group.length > 0) return;\n\n\t\tconst view_modes = this.gantt.options.view_modes || [];\n\t\tconst active_class = view_mode => this.gantt.view_is(view_mode) ? 'btn-info' : '';\n\t\tconst html =\n\t\t\t`<div class=\"btn-group gantt-view-mode\">\n\t\t\t\t${view_modes.map(value => `<button type=\"button\"\n\t\t\t\t\t\tclass=\"btn btn-default btn-sm btn-view-mode ${active_class(value)}\"\n\t\t\t\t\t\tdata-value=\"${value}\">\n\t\t\t\t\t\t${__(value)}\n\t\t\t\t\t</button>`).join('')}\n\t\t\t</div>`;\n\n\t\tthis.$paging_area.find('.level-left').append(html);\n\n\t\t// change view mode asynchronously\n\t\tconst change_view_mode = (value) => setTimeout(() => this.gantt.change_view_mode(value), 0);\n\n\t\tthis.$paging_area.on('click', '.btn-view-mode', e => {\n\t\t\tconst $btn = $(e.currentTarget);\n\t\t\tthis.$paging_area.find('.btn-view-mode').removeClass('btn-info');\n\t\t\t$btn.addClass('btn-info');\n\n\t\t\tconst value = $btn.data().value;\n\t\t\tchange_view_mode(value);\n\t\t});\n\t}\n\n\tset_colors() {\n\t\tconst classes = this.tasks\n\t\t\t.map(t => t.custom_class)\n\t\t\t.filter(c => c && c.startsWith('color-'));\n\n\t\tlet style = classes.map(c => {\n\t\t\tconst class_name = c.replace('#', '');\n\t\t\tconst bar_color = '#' + c.substr(6);\n\t\t\tconst progress_color = frappe.ui.color.get_contrast_color(bar_color);\n\t\t\treturn `\n\t\t\t\t.gantt .bar-wrapper.${class_name} .bar {\n\t\t\t\t\tfill: ${bar_color};\n\t\t\t\t}\n\t\t\t\t.gantt .bar-wrapper.${class_name} .bar-progress {\n\t\t\t\t\tfill: ${progress_color};\n\t\t\t\t}\n\t\t\t`;\n\t\t}).join(\"\");\n\n\t\tstyle = `<style>${style}</style>`;\n\t\tthis.$result.prepend(style);\n\t}\n\n\tget_item(name) {\n\t\treturn this.data.find(item => item.name === name);\n\t}\n\n\tget required_libs() {\n\t\treturn [\n\t\t\t\"assets/frappe/node_modules/frappe-gantt/dist/frappe-gantt.css\",\n\t\t\t\"assets/frappe/node_modules/frappe-gantt/dist/frappe-gantt.min.js\"\n\t\t];\n\t}\n};\n\n", "// Copyright (c) 2018, Frappe Technologies Pvt. Ltd. and Contributors\n// MIT License. See license.txt\n\nfrappe.provide(\"frappe.views.calendar\");\nfrappe.provide(\"frappe.views.calendars\");\n\nfrappe.views.CalendarView = class CalendarView extends frappe.views.ListView {\n\tstatic load_last_view() {\n\t\tconst route = frappe.get_route();\n\t\tif (route.length === 3) {\n\t\t\tconst doctype = route[1];\n\t\t\tconst user_settings = frappe.get_user_settings(doctype)['Calendar'] || {};\n\t\t\troute.push(user_settings.last_calendar || 'default');\n\t\t\tfrappe.set_route(route);\n\t\t\treturn true;\n\t\t} else {\n\t\t\treturn false;\n\t\t}\n\t}\n\n\ttoggle_result_area() {}\n\n\tget view_name() {\n\t\treturn 'Calendar';\n\t}\n\n\tsetup_defaults() {\n\t\treturn super.setup_defaults()\n\t\t\t.then(() => {\n\t\t\t\tthis.page_title = __('{0} Calendar', [this.page_title]);\n\t\t\t\tthis.calendar_settings = frappe.views.calendar[this.doctype] || {};\n\t\t\t\tthis.calendar_name = frappe.get_route()[3];\n\t\t\t});\n\t}\n\n\tsetup_page() {\n\t\tthis.hide_page_form = true;\n\t\tsuper.setup_page();\n\t}\n\n\tsetup_view() {\n\n\t}\n\n\tbefore_render() {\n\t\tsuper.before_render();\n\t\tthis.save_view_user_settings({\n\t\t\tlast_calendar: this.calendar_name\n\t\t});\n\t}\n\n\trender() {\n\t\tif (this.calendar) {\n\t\t\tthis.calendar.refresh();\n\t\t\treturn;\n\t\t}\n\n\t\tthis.load_lib\n\t\t\t.then(() => this.get_calendar_preferences())\n\t\t\t.then(options => {\n\t\t\t\tthis.calendar = new frappe.views.Calendar(options);\n\t\t\t});\n\t}\n\n\tget_calendar_preferences() {\n\t\tconst options = {\n\t\t\tdoctype: this.doctype,\n\t\t\tparent: this.$result,\n\t\t\tpage: this.page,\n\t\t\tlist_view: this\n\t\t};\n\t\tconst calendar_name = this.calendar_name;\n\n\t\treturn new Promise(resolve => {\n\t\t\tif (calendar_name === 'default') {\n\t\t\t\tObject.assign(options, frappe.views.calendar[this.doctype]);\n\t\t\t\tresolve(options);\n\t\t\t} else {\n\t\t\t\tfrappe.model.with_doc('Calendar View', calendar_name, () => {\n\t\t\t\t\tconst doc = frappe.get_doc('Calendar View', calendar_name);\n\t\t\t\t\tif (!doc) {\n\t\t\t\t\t\tfrappe.show_alert(__(\"{0} is not a valid Calendar. Redirecting to default Calendar.\", [calendar_name.bold()]));\n\t\t\t\t\t\tfrappe.set_route(\"List\", this.doctype, \"Calendar\", \"default\");\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\t\t\t\t\tObject.assign(options, {\n\t\t\t\t\t\tfield_map: {\n\t\t\t\t\t\t\tid: \"name\",\n\t\t\t\t\t\t\tstart: doc.start_date_field,\n\t\t\t\t\t\t\tend: doc.end_date_field,\n\t\t\t\t\t\t\ttitle: doc.subject_field,\n\t\t\t\t\t\t\tallDay: doc.all_day ? 1 : 0\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\t\t\t\t\tresolve(options);\n\t\t\t\t});\n\t\t\t}\n\t\t});\n\t}\n\n\tget required_libs() {\n\t\tlet assets = [\n\t\t\t'assets/frappe/js/lib/fullcalendar/fullcalendar.min.css',\n\t\t\t'assets/frappe/js/lib/fullcalendar/fullcalendar.min.js',\n\t\t];\n\t\tlet user_language = frappe.boot.user.language;\n\t\tif (user_language && user_language !== 'en') {\n\t\t\tassets.push('assets/frappe/js/lib/fullcalendar/locale-all.js');\n\t\t}\n\t\treturn assets;\n\t}\n};\n\nfrappe.views.Calendar = class Calendar {\n\tconstructor(options) {\n\t\t$.extend(this, options);\n\t\tthis.field_map = this.field_map || {\n\t\t\t\"id\": \"name\",\n\t\t\t\"start\": \"start\",\n\t\t\t\"end\": \"end\",\n\t\t\t\"allDay\": \"all_day\",\n\t\t}\n\t\tthis.color_map = {\n\t\t\t\"danger\": \"red\",\n\t\t\t\"success\": \"green\",\n\t\t\t\"warning\": \"orange\",\n\t\t\t\"default\": \"blue\"\n\t\t}\n\t\tthis.get_default_options();\n\t}\n\tget_default_options() {\n\t\treturn new Promise ((resolve) => {\n\t\t\tlet defaultView = localStorage.getItem('cal_defaultView');\n\t\t\tlet weekends = localStorage.getItem('cal_weekends');\n\t\t\tlet defaults = {\n\t\t\t\t'defaultView': defaultView ? defaultView : \"month\",\n\t\t\t\t'weekends': weekends ? weekends : true\n\t\t\t};\n\t\t\tresolve(defaults);\n\t\t}).then(defaults => {\n\t\t\tthis.make_page();\n\t\t\tthis.setup_options(defaults);\n\t\t\tthis.make();\n\t\t\tthis.setup_view_mode_button(defaults);\n\t\t\tthis.bind();\n\t\t});\n\t}\n\tmake_page() {\n\t\tvar me = this;\n\n\t\t// add links to other calendars\n\t\tme.page.clear_user_actions();\n\t\t$.each(frappe.boot.calendars, function(i, doctype) {\n\t\t\tif(frappe.model.can_read(doctype)) {\n\t\t\t\tme.page.add_menu_item(__(doctype), function() {\n\t\t\t\t\tfrappe.set_route(\"List\", doctype, \"Calendar\");\n\t\t\t\t});\n\t\t\t}\n\t\t});\n\n\t\t$(this.parent).on(\"show\", function() {\n\t\t\tme.$cal.fullCalendar(\"refetchEvents\");\n\t\t});\n\t}\n\n\tmake() {\n\t\tthis.$wrapper = this.parent;\n\t\tthis.$cal = $(\"<div>\").appendTo(this.$wrapper);\n\t\tthis.footnote_area = frappe.utils.set_footnote(this.footnote_area, this.$wrapper,\n\t\t\t__(\"Select or drag across time slots to create a new event.\"));\n\t\tthis.footnote_area.css({\"border-top\": \"0px\"});\n\n\t\tthis.$cal.fullCalendar(this.cal_options);\n\t\tthis.set_css();\n\t}\n\tsetup_view_mode_button(defaults) {\n\t\tvar me = this;\n\t\t$(me.footnote_area).find('.btn-weekend').detach();\n\t\tlet btnTitle = (defaults.weekends) ? __('Hide Weekends') : __('Show Weekends');\n\t\tconst btn = `<button class=\"btn btn-default btn-xs btn-weekend\">${btnTitle}</button>`;\n\t\tme.footnote_area.append(btn);\n\t}\n\tset_localStorage_option(option, value) {\n\t\tlocalStorage.removeItem(option);\n\t\tlocalStorage.setItem(option, value);\n\t}\n\tbind() {\n\t\tconst me = this;\n\t\tlet btn_group = me.$wrapper.find(\".fc-button-group\");\n\t\tbtn_group.on(\"click\", \".btn\", function() {\n\t\t\tlet value = ($(this).hasClass('fc-agendaWeek-button')) ? 'agendaWeek' : (($(this).hasClass('fc-agendaDay-button')) ? 'agendaDay' : 'month');\n\t\t\tme.set_localStorage_option(\"cal_defaultView\", value);\n\t\t});\n\n\t\tme.$wrapper.on(\"click\", \".btn-weekend\", function() {\n\t\t\tme.cal_options.weekends = !me.cal_options.weekends;\n\t\t\tme.$cal.fullCalendar('option', 'weekends', me.cal_options.weekends);\n\t\t\tme.set_localStorage_option(\"cal_weekends\", me.cal_options.weekends);\n\t\t\tme.set_css();\n\t\t\tme.setup_view_mode_button(me.cal_options);\n\t\t});\n\t}\n\tset_css() {\n\t\t// flatify buttons\n\t\tthis.$wrapper.find(\"button.fc-state-default\")\n\t\t\t.removeClass(\"fc-state-default\")\n\t\t\t.addClass(\"btn btn-default\");\n\n\t\tthis.$wrapper\n\t\t\t.find('.fc-month-button, .fc-agendaWeek-button, .fc-agendaDay-button')\n\t\t\t.wrapAll('<div class=\"btn-group\" />');\n\n\t\tthis.$wrapper.find('.fc-prev-button span')\n\t\t\t.attr('class', '').html(frappe.utils.icon('left'));\n\t\tthis.$wrapper.find('.fc-next-button span')\n\t\t\t.attr('class', '').html(frappe.utils.icon('right'));\n\n\t\tthis.$wrapper.find('.fc-today-button')\n\t\t\t.prepend(frappe.utils.icon('today'));\n\n\t\tthis.$wrapper.find('.fc-day-number').wrap('<div class=\"fc-day\"></div>');\n\n\t\tvar btn_group = this.$wrapper.find(\".fc-button-group\");\n\t\tbtn_group.find(\".fc-state-active\").addClass(\"active\");\n\n\t\tbtn_group.find(\".btn\").on(\"click\", function() {\n\t\t\tbtn_group.find(\".btn\").removeClass(\"active\");\n\t\t\t$(this).addClass(\"active\");\n\t\t});\n\t}\n\n\tget_system_datetime(date) {\n\t\tdate._offset = (moment(date).tz(frappe.sys_defaults.time_zone)._offset);\n\t\treturn frappe.datetime.convert_to_system_tz(date);\n\t}\n\tsetup_options(defaults) {\n\t\tvar me = this;\n\t\tdefaults.meridiem = 'false';\n\t\tthis.cal_options = {\n\t\t\tlocale: frappe.boot.user.language || \"en\",\n\t\t\theader: {\n\t\t\t\tleft: 'prev, title, next',\n\t\t\t\tright: 'today, month, agendaWeek, agendaDay'\n\t\t\t},\n\t\t\teditable: true,\n\t\t\tselectable: true,\n\t\t\tselectHelper: true,\n\t\t\tforceEventDuration: true,\n\t\t\tdisplayEventTime: true,\n\t\t\tdefaultView: defaults.defaultView,\n\t\t\tweekends: defaults.weekends,\n\t\t\tnowIndicator: true,\n\t\t\tevents: function(start, end, timezone, callback) {\n\t\t\t\treturn frappe.call({\n\t\t\t\t\tmethod: me.get_events_method || \"frappe.desk.calendar.get_events\",\n\t\t\t\t\ttype: \"GET\",\n\t\t\t\t\targs: me.get_args(start, end),\n\t\t\t\t\tcallback: function(r) {\n\t\t\t\t\t\tvar events = r.message || [];\n\t\t\t\t\t\tevents = me.prepare_events(events);\n\t\t\t\t\t\tcallback(events);\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t},\n\t\t\tdisplayEventEnd: true,\n\t\t\teventRender: function(event, element) {\n\t\t\t\telement.attr('title', event.tooltip);\n\t\t\t},\n\t\t\teventClick: function(event) {\n\t\t\t\t// edit event description or delete\n\t\t\t\tvar doctype = event.doctype || me.doctype;\n\t\t\t\tif(frappe.model.can_read(doctype)) {\n\t\t\t\t\tfrappe.set_route(\"Form\", doctype, event.name);\n\t\t\t\t}\n\t\t\t},\n\t\t\teventDrop: function(event, delta, revertFunc) {\n\t\t\t\tme.update_event(event, revertFunc);\n\t\t\t},\n\t\t\teventResize: function(event, delta, revertFunc) {\n\t\t\t\tme.update_event(event, revertFunc);\n\t\t\t},\n\t\t\tselect: function(startDate, endDate, jsEvent, view) {\n\t\t\t\tif (view.name===\"month\" && (endDate - startDate)===86400000) {\n\t\t\t\t\t// detect single day click in month view\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tvar event = frappe.model.get_new_doc(me.doctype);\n\n\t\t\t\tevent[me.field_map.start] = me.get_system_datetime(startDate);\n\n\t\t\t\tif(me.field_map.end)\n\t\t\t\t\tevent[me.field_map.end] = me.get_system_datetime(endDate);\n\n\t\t\t\tif(me.field_map.allDay) {\n\t\t\t\t\tvar all_day = (startDate._ambigTime && endDate._ambigTime) ? 1 : 0;\n\n\t\t\t\t\tevent[me.field_map.allDay] = all_day;\n\n\t\t\t\t\tif (all_day)\n\t\t\t\t\t\tevent[me.field_map.end] = me.get_system_datetime(moment(endDate).subtract(1, \"s\"));\n\t\t\t\t}\n\n\t\t\t\tfrappe.set_route(\"Form\", me.doctype, event.name);\n\t\t\t},\n\t\t\tdayClick: function(date, jsEvent, view) {\n\t\t\t\tif(view.name === 'month') {\n\t\t\t\t\tconst $date_cell = $('td[data-date=' + date.format('YYYY-MM-DD') + \"]\");\n\n\t\t\t\t\tif($date_cell.hasClass('date-clicked')) {\n\t\t\t\t\t\tme.$cal.fullCalendar('changeView', 'agendaDay');\n\t\t\t\t\t\tme.$cal.fullCalendar('gotoDate', date);\n\t\t\t\t\t\tme.$wrapper.find('.date-clicked').removeClass('date-clicked');\n\n\t\t\t\t\t\t// update \"active view\" btn\n\t\t\t\t\t\tme.$wrapper.find('.fc-month-button').removeClass('active');\n\t\t\t\t\t\tme.$wrapper.find('.fc-agendaDay-button').addClass('active');\n\t\t\t\t\t}\n\n\t\t\t\t\tme.$wrapper.find('.date-clicked').removeClass('date-clicked');\n\t\t\t\t\t$date_cell.addClass('date-clicked');\n\t\t\t\t}\n\t\t\t\treturn false;\n\t\t\t}\n\t\t};\n\n\t\tif(this.options) {\n\t\t\t$.extend(this.cal_options, this.options);\n\t\t}\n\t}\n\tget_args(start, end) {\n\t\tvar args = {\n\t\t\tdoctype: this.doctype,\n\t\t\tstart: this.get_system_datetime(start),\n\t\t\tend: this.get_system_datetime(end),\n\t\t\tfields: this.fields,\n\t\t\tfilters: this.list_view.filter_area.get(),\n\t\t\tfield_map: this.field_map\n\t\t};\n\t\treturn args;\n\t}\n\trefresh() {\n\t\tthis.$cal.fullCalendar('refetchEvents');\n\t}\n\tprepare_events(events) {\n\t\tvar me = this;\n\n\t\treturn (events || []).map(d => {\n\t\t\td.id = d.name;\n\t\t\td.editable = frappe.model.can_write(d.doctype || me.doctype);\n\n\t\t\t// do not allow submitted/cancelled events to be moved / extended\n\t\t\tif(d.docstatus && d.docstatus > 0) {\n\t\t\t\td.editable = false;\n\t\t\t}\n\n\t\t\t$.each(me.field_map, function(target, source) {\n\t\t\t\td[target] = d[source];\n\t\t\t});\n\n\t\t\tif(!me.field_map.allDay)\n\t\t\t\td.allDay = 1;\n\n\t\t\t// convert to user tz\n\t\t\td.start = frappe.datetime.convert_to_user_tz(d.start);\n\t\t\td.end = frappe.datetime.convert_to_user_tz(d.end);\n\n\t\t\t// show event on single day if start or end date is invalid\n\t\t\tif (!frappe.datetime.validate(d.start) && d.end) {\n\t\t\t\td.start = frappe.datetime.add_days(d.end, -1);\n\t\t\t}\n\n\t\t\tif (d.start && !frappe.datetime.validate(d.end)) {\n\t\t\t\td.end = frappe.datetime.add_days(d.start, 1);\n\t\t\t}\n\n\t\t\tme.fix_end_date_for_event_render(d);\n\t\t\tme.prepare_colors(d);\n\n\t\t\td.title = frappe.utils.html2text(d.title);\n\n\t\t\treturn d;\n\t\t});\n\t}\n\tprepare_colors(d) {\n\t\tlet color, color_name;\n\t\tif(this.get_css_class) {\n\t\t\tcolor_name = this.color_map[this.get_css_class(d)] || 'blue';\n\n\t\t\tif (color_name.startsWith(\"#\")) {\n\t\t\t\tcolor_name = frappe.ui.color.validate_hex(color_name) ?\n\t\t\t\t\tcolor_name : 'blue';\n\t\t\t}\n\n\t\t\td.backgroundColor = frappe.ui.color.get(color_name, 'extra-light');\n\t\t\td.textColor = frappe.ui.color.get(color_name, 'dark');\n\t\t} else {\n\t\t\tcolor = d.color;\n\t\t\tif (!frappe.ui.color.validate_hex(color) || !color) {\n\t\t\t\tcolor = frappe.ui.color.get('blue', 'extra-light');\n\t\t\t}\n\t\t\td.backgroundColor = color;\n\t\t\td.textColor = frappe.ui.color.get_contrast_color(color);\n\t\t}\n\t\treturn d;\n\t}\n\tupdate_event(event, revertFunc) {\n\t\tvar me = this;\n\t\tfrappe.model.remove_from_locals(me.doctype, event.name);\n\t\treturn frappe.call({\n\t\t\tmethod: me.update_event_method || \"frappe.desk.calendar.update_event\",\n\t\t\targs: me.get_update_args(event),\n\t\t\tcallback: function(r) {\n\t\t\t\tif(r.exc) {\n\t\t\t\t\tfrappe.show_alert(__(\"Unable to update event\"));\n\t\t\t\t\trevertFunc();\n\t\t\t\t}\n\t\t\t},\n\t\t\terror: function() {\n\t\t\t\trevertFunc();\n\t\t\t}\n\t\t});\n\t}\n\tget_update_args(event) {\n\t\tvar me = this;\n\t\tvar args = {\n\t\t\tname: event[this.field_map.id]\n\t\t};\n\n\t\targs[this.field_map.start] = me.get_system_datetime(event.start);\n\n\t\tif(this.field_map.allDay)\n\t\t\targs[this.field_map.allDay] = (event.start._ambigTime && event.end._ambigTime) ? 1 : 0;\n\n\t\tif(this.field_map.end) {\n\t\t\tif (!event.end) {\n\t\t\t\tevent.end = event.start.add(1, \"hour\");\n\t\t\t}\n\n\t\t\targs[this.field_map.end] = me.get_system_datetime(event.end);\n\n\t\t\tif (args[this.field_map.allDay]) {\n\t\t\t\targs[this.field_map.end] = me.get_system_datetime(moment(event.end).subtract(1, \"s\"));\n\t\t\t}\n\t\t}\n\n\t\targs.doctype = event.doctype || this.doctype;\n\n\t\treturn { args: args, field_map: this.field_map };\n\t}\n\n\tfix_end_date_for_event_render(event) {\n\t\tif (event.allDay) {\n\t\t\t// We use inclusive end dates. This workaround fixes the rendering of events\n\t\t\tevent.start = event.start ? $.fullCalendar.moment(event.start).stripTime() : null;\n\t\t\tevent.end = event.end ? $.fullCalendar.moment(event.end).add(1, \"day\").stripTime() : null;\n\t\t}\n\t}\n};\n", "frappe.provide('frappe.views');\n\nfrappe.views.DashboardView = class DashboardView extends frappe.views.ListView {\n\tget view_name() {\n\t\treturn 'Dashboard';\n\t}\n\n\tsetup_defaults() {\n\t\treturn super.setup_defaults()\n\t\t\t.then(() => {\n\t\t\t\tthis.page_title = __('{0} Dashboard', [__(this.doctype)]);\n\t\t\t\tthis.dashboard_settings = frappe.get_user_settings(this.doctype)['dashboard_settings'] || null;\n\t\t\t});\n\t}\n\n\trender() {\n\n\t}\n\n\tsetup_page() {\n\t\tthis.hide_sidebar = true;\n\t\tthis.hide_page_form = true;\n\t\tthis.hide_filters = true;\n\t\tthis.hide_sort_selector = true;\n\t\tsuper.setup_page();\n\t}\n\n\tsetup_view() {\n\t\tif (this.chart_group || this.number_card_group) {\n\t\t\treturn;\n\t\t}\n\n\t\tthis.setup_dashboard_page();\n\t\tthis.setup_dashboard_customization();\n\t\tthis.make_dashboard();\n\t}\n\n\tsetup_dashboard_customization() {\n\t\tthis.page.add_menu_item(__('Customize Dashboard'), () => this.customize());\n\t\tthis.page.add_menu_item(__('Reset Dashboard Customizations'), () => this.reset_dashboard_customization());\n\t\tthis.add_customization_buttons();\n\t}\n\n\tsetup_dashboard_page() {\n\t\tconst chart_wrapper_html = `<div class=\"dashboard-view\"></div>`;\n\n\t\tthis.$frappe_list.html(chart_wrapper_html);\n\t\tthis.page.clear_secondary_action();\n\t\tthis.$dashboard_page = this.$page.find('.layout-main-section-wrapper').addClass('dashboard-page');\n\t\tthis.page.main.removeClass('frappe-card');\n\n\t\tthis.$dashboard_wrapper = this.$page.find('.dashboard-view');\n\t\tthis.$chart_header = this.$page.find('.dashboard-header');\n\n\t\tfrappe.utils.bind_actions_with_object(this.$dashboard_page, this);\n\t}\n\n\tadd_customization_buttons() {\n\t\tthis.save_customizations_button = this.page.add_button(\n\t\t\t__(\"Save Customizations\"),\n\t\t\t() => {\n\t\t\t\tthis.save_dashboard_customization();\n\t\t\t\tthis.page.standard_actions.show();\n\t\t\t},\n\t\t\t{btn_class: 'btn-primary'}\n\t\t);\n\n\t\tthis.discard_customizations_button = this.page.add_button(\n\t\t\t__(\"Discard\"),\n\t\t\t() => {\n\t\t\t\tthis.discard_dashboard_customization();\n\t\t\t\tthis.page.standard_actions.show();\n\t\t\t}\n\t\t);\n\n\t\tthis.toggle_customization_buttons(false);\n\t}\n\n\tset_primary_action() {\n\t\t// Don't render Add doc button for dashboard view\n\t}\n\n\ttoggle_customization_buttons(show) {\n\t\tthis.save_customizations_button.toggle(show);\n\t\tthis.discard_customizations_button.toggle(show);\n\t}\n\n\tmake_dashboard() {\n\t\tif (this.dashboard_settings) {\n\t\t\tthis.charts = this.dashboard_settings.charts;\n\t\t\tthis.number_cards = this.dashboard_settings.number_cards;\n\t\t\tthis.render_dashboard();\n\t\t} else {\n\t\t\tfrappe.run_serially([\n\t\t\t\t() => this.fetch_dashboard_items(\n\t\t\t\t\t'Dashboard Chart',\n\t\t\t\t\t{\n\t\t\t\t\t\tchart_type: ['in', ['Count', 'Sum', 'Group By']],\n\t\t\t\t\t\tdocument_type: this.doctype,\n\t\t\t\t\t\tis_public: 1,\n\t\t\t\t\t},\n\t\t\t\t\t'charts'\n\t\t\t\t),\n\t\t\t\t() => this.fetch_dashboard_items('Number Card',\n\t\t\t\t\t{\n\t\t\t\t\t\tdocument_type: this.doctype,\n\t\t\t\t\t\tis_public: 1,\n\t\t\t\t\t},\n\t\t\t\t\t'number_cards'\n\t\t\t\t),\n\t\t\t\t() => this.render_dashboard()\n\t\t\t]);\n\t\t}\n\t}\n\n\trender_dashboard() {\n\t\tthis.$dashboard_wrapper.empty();\n\n\t\tfrappe.dashboard_utils.get_dashboard_settings().then(settings => {\n\t\t\tthis.dashboard_chart_settings = settings.chart_config ? JSON.parse(settings.chart_config) : {};\n\t\t\tthis.charts.map(chart => {\n\t\t\t\tchart.label = chart.chart_name;\n\t\t\t\tchart.chart_settings = this.dashboard_chart_settings[chart.chart_name] || {};\n\t\t\t});\n\t\t\tthis.render_dashboard_charts();\n\t\t});\n\t\tthis.render_number_cards();\n\n\t\tif (!this.charts.length && !this.number_cards.length) {\n\t\t\tthis.render_empty_state();\n\t\t}\n\t}\n\n\tfetch_dashboard_items(doctype, filters, obj_name) {\n\t\treturn frappe.db.get_list(doctype, {\n\t\t\tfilters: filters,\n\t\t\tfields: ['*']\n\t\t}).then(items => {\n\t\t\tthis[obj_name] = items;\n\t\t});\n\t}\n\n\trender_number_cards() {\n\t\tthis.number_card_group = new frappe.widget.WidgetGroup({\n\t\t\tcontainer: this.$dashboard_wrapper,\n\t\t\ttype: \"number_card\",\n\t\t\tcolumns: 3,\n\t\t\toptions: {\n\t\t\t\tallow_sorting: true,\n\t\t\t\tallow_create: true,\n\t\t\t\tallow_delete: true,\n\t\t\t\tallow_hiding: true,\n\t\t\t},\n\t\t\tdefault_values: {doctype: this.doctype},\n\t\t\twidgets: this.number_cards || [],\n\t\t\tin_customize_mode: this.in_customize_mode || false,\n\t\t});\n\n\t\tthis.in_customize_mode && this.number_card_group.customize();\n\t}\n\n\trender_dashboard_charts() {\n\t\tthis.chart_group = new frappe.widget.WidgetGroup({\n\t\t\tcontainer: this.$dashboard_wrapper,\n\t\t\ttype: \"chart\",\n\t\t\tcolumns: 2,\n\t\t\theight: 240,\n\t\t\toptions: {\n\t\t\t\tallow_sorting: true,\n\t\t\t\tallow_create: true,\n\t\t\t\tallow_delete: true,\n\t\t\t\tallow_hiding: true,\n\t\t\t\tallow_resize: true,\n\t\t\t},\n\t\t\tcustom_dialog: () => this.show_add_chart_dialog(),\n\t\t\twidgets: this.charts,\n\t\t\tin_customize_mode: this.in_customize_mode || false,\n\t\t});\n\n\t\tthis.in_customize_mode && this.chart_group.customize();\n\t\tthis.chart_group.container.find('.widget-group-head').hide();\n\t}\n\n\trender_empty_state() {\n\t\tconst no_result_message_html =\n\t\t\t`<p>${__(\"You haven't added any Dashboard Charts or Number Cards yet.\")}\n\t\t\t<br>${__(\"Click On Customize to add your first widget\")}</p>`;\n\n\t\tconst customize_button =\n\t\t\t`<p><button class=\"btn btn-primary btn-sm\" data-action=\"customize\">\n\t\t\t\t${__('Customize')}\n\t\t\t</button></p>`;\n\n\t\tconst empty_state_image = '/assets/frappe/images/ui-states/list-empty-state.svg';\n\n\t\tconst empty_state_html = `<div class=\"msg-box no-border empty-dashboard\">\n\t\t\t<div>\n\t\t\t\t<img src=\"${empty_state_image}\" alt=\"Generic Empty State\" class=\"null-state\">\n\t\t\t</div>\n\t\t\t${no_result_message_html}\n\t\t\t${customize_button}\n\t\t</div>`;\n\n\t\tthis.$dashboard_wrapper.append(empty_state_html);\n\t\tthis.$empty_state = this.$dashboard_wrapper.find('.empty-dashboard');\n\t}\n\n\tcustomize() {\n\t\tif (this.in_customize_mode) {\n\t\t\treturn;\n\t\t}\n\n\t\tthis.page.standard_actions.hide();\n\n\t\tif (this.$empty_state) {\n\t\t\tthis.$empty_state.remove();\n\t\t}\n\n\t\tthis.toggle_customize(true);\n\t\tthis.in_customize_mode = true;\n\t\tthis.chart_group.customize();\n\t\tthis.number_card_group.customize();\n\t}\n\n\tget_widgets_to_save(widget_group) {\n\t\tconst config = widget_group.get_widget_config();\n\t\tlet widgets = [];\n\t\tconfig.order.map(widget_name => {\n\t\t\twidgets.push(config.widgets[widget_name]);\n\t\t});\n\t\treturn this.remove_duplicates(widgets);\n\t}\n\n\tsave_dashboard_customization() {\n\t\tthis.toggle_customize(false);\n\n\t\tconst charts = this.get_widgets_to_save(this.chart_group);\n\t\tconst number_cards = this.get_widgets_to_save(this.number_card_group);\n\n\t\tthis.dashboard_settings = {\n\t\t\tcharts: charts,\n\t\t\tnumber_cards: number_cards,\n\t\t};\n\n\t\tfrappe.model.user_settings.save(this.doctype, 'dashboard_settings', this.dashboard_settings);\n\t\tthis.make_dashboard();\n\t}\n\n\tdiscard_dashboard_customization() {\n\t\tthis.dashboard_settings = frappe.get_user_settings(this.doctype)['dashboard_settings'] || null;\n\t\tthis.toggle_customize(false);\n\t\tthis.render_dashboard();\n\t}\n\n\treset_dashboard_customization() {\n\t\tfrappe.confirm(__(\"Are you sure you want to reset all customizations?\"), () => {\n\t\t\tthis.dashboard_settings = null;\n\t\t\tfrappe.model.user_settings.save(\n\t\t\t\tthis.doctype, 'dashboard_settings', this.dashboard_settings\n\t\t\t).then(() => this.make_dashboard());\n\n\t\t\tthis.toggle_customize(false);\n\t\t});\n\t}\n\n\ttoggle_customize(show) {\n\t\tthis.toggle_customization_buttons(show);\n\t\tthis.in_customize_mode = show;\n\t}\n\n\tshow_add_chart_dialog() {\n\t\tlet fields = this.get_field_options();\n\t\tconst dialog = new frappe.ui.Dialog({\n\t\t\ttitle: __(\"Add a {0} Chart\", [__(this.doctype)]),\n\t\t\tfields: [\n\t\t\t\t{\n\t\t\t\t\tfieldname: 'new_or_existing',\n\t\t\t\t\tfieldtype: 'Select',\n\t\t\t\t\tlabel: 'Choose an existing chart or create a new chart',\n\t\t\t\t\toptions: ['New Chart', 'Existing Chart'],\n\t\t\t\t\treqd: 1,\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tlabel: 'Chart',\n\t\t\t\t\tfieldname: 'chart',\n\t\t\t\t\tfieldtype: 'Link',\n\t\t\t\t\tget_query: () => {\n\t\t\t\t\t\treturn {\n\t\t\t\t\t\t\t'query': 'frappe.desk.doctype.dashboard_chart.dashboard_chart.get_charts_for_user',\n\t\t\t\t\t\t\tfilters: {\n\t\t\t\t\t\t\t\tdocument_type: this.doctype,\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t};\n\t\t\t\t\t},\n\t\t\t\t\toptions: 'Dashboard Chart',\n\t\t\t\t\tdepends_on: 'eval: doc.new_or_existing == \"Existing Chart\"'\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tfieldname: 'sb_2',\n\t\t\t\t\tfieldtype: 'Section Break',\n\t\t\t\t\tdepends_on: 'eval: doc.new_or_existing == \"New Chart\"'\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tlabel: 'Chart Label',\n\t\t\t\t\tfieldname: 'label',\n\t\t\t\t\tfieldtype: 'Data',\n\t\t\t\t\tmandatory_depends_on: 'eval: doc.new_or_existing == \"New Chart\"'\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tfieldname: 'cb_1',\n\t\t\t\t\tfieldtype: 'Column Break'\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tlabel: 'Chart Type',\n\t\t\t\t\tfieldname: 'chart_type',\n\t\t\t\t\tfieldtype: 'Select',\n\t\t\t\t\toptions: ['Time Series', 'Group By'],\n\t\t\t\t\tmandatory_depends_on: 'eval: doc.new_or_existing == \"New Chart\"',\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tfieldname: 'sb_2',\n\t\t\t\t\tfieldtype: 'Section Break',\n\t\t\t\t\tlabel: 'Chart Config',\n\t\t\t\t\tdepends_on: 'eval: doc.chart_type == \"Time Series\" && doc.new_or_existing == \"New Chart\"',\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tlabel: 'Function',\n\t\t\t\t\tfieldname: 'chart_function',\n\t\t\t\t\tfieldtype: 'Select',\n\t\t\t\t\toptions: ['Count', 'Sum', 'Average'],\n\t\t\t\t\tdefault: 'Count',\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tlabel: 'Timespan',\n\t\t\t\t\tfieldtype: 'Select',\n\t\t\t\t\tfieldname: 'timespan',\n\t\t\t\t\tdepends_on: 'eval: doc.chart_type == \"Time Series\"',\n\t\t\t\t\toptions: ['Last Year', 'Last Quarter', 'Last Month', 'Last Week'],\n\t\t\t\t\tdefault: 'Last Year',\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tfieldname: 'cb_2',\n\t\t\t\t\tfieldtype: 'Column Break'\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tlabel: 'Value Based On',\n\t\t\t\t\tfieldtype: 'Select',\n\t\t\t\t\tfieldname: 'based_on',\n\t\t\t\t\toptions: fields.value_fields,\n\t\t\t\t\tdepends_on: 'eval: doc.chart_function==\"Sum\"'\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tlabel: 'Time Series Based On',\n\t\t\t\t\tfieldtype: 'Select',\n\t\t\t\t\tfieldname: 'based_on',\n\t\t\t\t\toptions: fields.date_fields,\n\t\t\t\t\tmandatory_depends_on: 'eval: doc.chart_type == \"Time Series\"'\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tlabel: 'Time Interval',\n\t\t\t\t\tfieldname: 'time_interval',\n\t\t\t\t\tfieldtype: 'Select',\n\t\t\t\t\tdepends_on: 'eval: doc.chart_type == \"Time Series\"',\n\t\t\t\t\toptions: ['Yearly', 'Quarterly', 'Monthly', 'Weekly', 'Daily'],\n\t\t\t\t\tdefault: 'Monthly'\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tfieldname: 'sb_2',\n\t\t\t\t\tfieldtype: 'Section Break',\n\t\t\t\t\tlabel: 'Chart Config',\n\t\t\t\t\tdepends_on: 'eval: doc.chart_type == \"Group By\" && doc.new_or_existing == \"New Chart\"',\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tlabel: 'Group By Type',\n\t\t\t\t\tfieldname: 'group_by_type',\n\t\t\t\t\tfieldtype: 'Select',\n\t\t\t\t\toptions: ['Count', 'Sum', 'Average'],\n\t\t\t\t\tdefault: 'Count',\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tlabel: 'Aggregate Function Based On',\n\t\t\t\t\tfieldtype: 'Select',\n\t\t\t\t\tfieldname: 'aggregate_function_based_on',\n\t\t\t\t\toptions: fields.aggregate_function_fields,\n\t\t\t\t\tdepends_on: 'eval: [\"Sum\", \"Avergage\"].includes(doc.group_by_type)',\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tfieldname: 'cb_2',\n\t\t\t\t\tfieldtype: 'Column Break'\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tlabel: 'Group By Based On',\n\t\t\t\t\tfieldtype: 'Select',\n\t\t\t\t\tfieldname: 'group_by_based_on',\n\t\t\t\t\toptions: fields.group_by_fields,\n\t\t\t\t\tdefault: 'Last Year',\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tlabel: 'Number of Groups',\n\t\t\t\t\tfieldtype: 'Int',\n\t\t\t\t\tfieldname: 'number_of_groups',\n\t\t\t\t\tdefault: 0,\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tfieldname: 'sb_3',\n\t\t\t\t\tfieldtype: 'Section Break',\n\t\t\t\t\tdepends_on: 'eval: doc.new_or_existing == \"New Chart\"'\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tlabel: 'Chart Type',\n\t\t\t\t\tfieldname: 'type',\n\t\t\t\t\tfieldtype: 'Select',\n\t\t\t\t\toptions: ['Line', 'Bar', 'Percentage', 'Pie'],\n\t\t\t\t\tdepends_on: 'eval: doc.new_or_existing == \"New Chart\"'\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tfieldname: 'cb_1',\n\t\t\t\t\tfieldtype: 'Column Break'\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tlabel: 'Chart Color',\n\t\t\t\t\tfieldname: 'color',\n\t\t\t\t\tfieldtype: 'Color',\n\t\t\t\t\tdepends_on: 'eval: doc.new_or_existing == \"New Chart\"',\n\t\t\t\t},\n\t\t\t],\n\t\t\tprimary_action_label: __('Add'),\n\t\t\tprimary_action: (values) => {\n\t\t\t\tlet chart = values;\n\t\t\t\tif (chart.new_or_existing == 'New Chart') {\n\t\t\t\t\tchart.chart_name = chart.label;\n\t\t\t\t\tchart.chart_type = chart.chart_type == 'Time Series' ? chart.chart_function : chart.chart_type;\n\t\t\t\t\tchart.document_type = this.doctype;\n\t\t\t\t\tchart.filters_json = '[]';\n\t\t\t\t\tfrappe.xcall('frappe.desk.doctype.dashboard_chart.dashboard_chart.create_dashboard_chart', {'args': chart}).then((doc)=> {\n\t\t\t\t\t\tthis.chart_group.new_widget.on_create({'chart_name': doc.chart_name, 'name': doc.chart_name, 'label': chart.label});\n\t\t\t\t\t});\n\t\t\t\t} else {\n\t\t\t\t\tthis.chart_group.new_widget.on_create({'chart_name': chart.chart, 'label': chart.chart, 'name': chart.chart});\n\t\t\t\t}\n\t\t\t\tdialog.hide();\n\t\t\t}\n\t\t});\n\t\tdialog.show();\n\t}\n\n\tget_field_options() {\n\t\tlet date_fields = [\n\t\t\t{label: __('Created On'), value: 'creation'},\n\t\t\t{label: __('Last Modified On'), value: 'modified'}\n\t\t];\n\t\tlet value_fields = [];\n\t\tlet group_by_fields = [];\n\t\tlet aggregate_function_fields = [];\n\n\t\tfrappe.get_meta(this.doctype).fields.map(df => {\n\t\t\tif (['Date', 'Datetime'].includes(df.fieldtype)) {\n\t\t\t\tdate_fields.push({label: df.label, value: df.fieldname});\n\t\t\t}\n\t\t\tif (frappe.model.numeric_fieldtypes.includes(df.fieldtype)) {\n\t\t\t\tif (df.fieldtype == 'Currency') {\n\t\t\t\t\tif (!df.options || df.options !== 'Company:company:default_currency') {\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tvalue_fields.push({label: df.label, value: df.fieldname});\n\t\t\t\taggregate_function_fields.push({label: df.label, value: df.fieldname});\n\t\t\t}\n\t\t\tif (['Link', 'Select'].includes(df.fieldtype)) {\n\t\t\t\tgroup_by_fields.push({label: df.label, value: df.fieldname});\n\t\t\t}\n\t\t});\n\n\t\treturn {\n\t\t\tdate_fields: date_fields,\n\t\t\tvalue_fields: value_fields,\n\t\t\tgroup_by_fields: group_by_fields,\n\t\t\taggregate_function_fields: aggregate_function_fields\n\t\t};\n\t}\n\n\tremove_duplicates(items) {\n\t\treturn items.filter((item, index) => items.indexOf(item) === index);\n\t}\n\n};\n", "/**\n * frappe.views.ImageView\n */\nfrappe.provide(\"frappe.views\");\n\nfrappe.views.ImageView = class ImageView extends frappe.views.ListView {\n\tget view_name() {\n\t\treturn \"Image\";\n\t}\n\n\tsetup_defaults() {\n\t\treturn super.setup_defaults().then(() => {\n\t\t\tthis.page_title = this.page_title + \" \" + __(\"Images\");\n\t\t});\n\t}\n\n\tsetup_view() {\n\t\tthis.setup_columns();\n\t\tthis.setup_check_events();\n\t\tthis.setup_like();\n\t}\n\n\tset_fields() {\n\t\tthis.fields = [\n\t\t\t\"name\",\n\t\t\t...this.get_fields_in_list_view().map(el => el.fieldname),\n\t\t\tthis.meta.title_field,\n\t\t\tthis.meta.image_field,\n\t\t\t\"_liked_by\"\n\t\t];\n\t}\n\n\tprepare_data(data) {\n\t\tsuper.prepare_data(data);\n\t\tthis.items = this.data.map(d => {\n\t\t\t// absolute url if cordova, else relative\n\t\t\td._image_url = this.get_image_url(d);\n\t\t\treturn d;\n\t\t});\n\t}\n\n\trender() {\n\t\tthis.get_attached_images().then(() => {\n\t\t\tthis.render_image_view();\n\n\t\t\tif (!this.gallery) {\n\t\t\t\tthis.setup_gallery();\n\t\t\t} else {\n\t\t\t\tthis.gallery.prepare_pswp_items(this.items, this.images_map);\n\t\t\t}\n\t\t});\n\t}\n\n\trender_image_view() {\n\t\tvar html = this.items.map(this.item_html.bind(this)).join(\"\");\n\n\t\tthis.$page.find(\".layout-main-section-wrapper\").addClass(\"image-view\");\n\n\t\tthis.$result.html(`\n\t\t\t<div class=\"image-view-container\">\n\t\t\t\t${html}\n\t\t\t</div>\n\t\t`);\n\n\t\tthis.render_count();\n\t}\n\n\titem_details_html(item) {\n\t\t// TODO: Image view field in DocType\n\t\tlet info_fields =\n\t\t\tthis.get_fields_in_list_view().map(el => el.fieldname) || [];\n\t\tconst title_field = this.meta.title_field || \"name\";\n\t\tinfo_fields = info_fields.filter(field => field !== title_field);\n\t\tlet info_html = `<div><ul class=\"list-unstyled image-view-info\">`;\n\t\tlet set = false;\n\t\tinfo_fields.forEach((field, index) => {\n\t\t\tif (item[field] && !set) {\n\t\t\t\tif (index == 0) info_html += `<li>${__(item[field])}</li>`;\n\t\t\t\telse info_html += `<li class=\"text-muted\">${__(item[field])}</li>`;\n\t\t\t\tset = true;\n\t\t\t}\n\t\t});\n\t\tinfo_html += `</ul></div>`;\n\t\treturn info_html;\n\t}\n\n\titem_html(item) {\n\t\titem._name = encodeURI(item.name);\n\t\tconst encoded_name = item._name;\n\t\tconst title = strip_html(item[this.meta.title_field || \"name\"]);\n\t\tconst escaped_title = frappe.utils.escape_html(title);\n\t\tconst _class = !item._image_url ? \"no-image\" : \"\";\n\t\tconst _html = item._image_url\n\t\t\t? `<img data-name=\"${encoded_name}\" src=\"${item._image_url}\" alt=\"${title}\">`\n\t\t\t: `<span class=\"placeholder-text\">\n\t\t\t\t${frappe.get_abbr(title)}\n\t\t\t</span>`;\n\n\t\tlet details = this.item_details_html(item);\n\n\t\tconst expand_button_html = item._image_url\n\t\t\t? `<div class=\"zoom-view\" data-name=\"${encoded_name}\">\n\t\t\t\t${frappe.utils.icon(\"expand\", \"xs\")}\n\t\t\t</div>`\n\t\t\t: \"\";\n\n\t\treturn `\n\t\t\t<div class=\"image-view-item ellipsis\">\n\t\t\t\t<div class=\"image-view-header\">\n\t\t\t\t\t<div>\n\t\t\t\t\t\t<input class=\"level-item list-row-checkbox hidden-xs\"\n\t\t\t\t\t\t\ttype=\"checkbox\" data-name=\"${escape(item.name)}\">\n\t\t\t\t\t\t${this.get_like_html(item)}\n\t\t\t\t\t</div>\n\t\t\t\t</span>\n\t\t\t\t</div>\n\t\t\t\t<div class=\"image-view-body ${_class}\">\n\t\t\t\t\t<a data-name=\"${encoded_name}\"\n\t\t\t\t\t\ttitle=\"${encoded_name}\"\n\t\t\t\t\t\thref=\"${this.get_form_link(item)}\"\n\t\t\t\t\t>\n\t\t\t\t\t\t<div class=\"image-field\"\n\t\t\t\t\t\t\tdata-name=\"${encoded_name}\"\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t${_html}\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</a>\n\t\t\t\t\t${expand_button_html}\n\t\t\t\t</div>\n\t\t\t\t<div class=\"image-view-footer\">\n\t\t\t\t\t<div class=\"image-title\">\n\t\t\t\t\t\t<span class=\"ellipsis\" title=\"${escaped_title}\">\n\t\t\t\t\t\t\t<a class=\"ellipsis\" href=\"${this.get_form_link(item)}\"\n\t\t\t\t\t\t\t\ttitle=\"${escaped_title}\" data-doctype=\"${this.doctype}\" data-name=\"${item.name}\">\n\t\t\t\t\t\t\t\t${title}\n\t\t\t\t\t\t\t</a>\n\t\t\t\t\t\t</span>\n\t\t\t\t\t</div>\n\t\t\t\t\t${details}\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t`;\n\t}\n\n\tget_attached_images() {\n\t\treturn frappe\n\t\t\t.call({\n\t\t\t\tmethod: \"frappe.core.api.file.get_attached_images\",\n\t\t\t\targs: {\n\t\t\t\t\tdoctype: this.doctype,\n\t\t\t\t\tnames: this.items.map(i => i.name)\n\t\t\t\t}\n\t\t\t})\n\t\t\t.then(r => {\n\t\t\t\tthis.images_map = Object.assign(\n\t\t\t\t\tthis.images_map || {},\n\t\t\t\t\tr.message\n\t\t\t\t);\n\t\t\t});\n\t}\n\n\tget_header_html() {\n\t\t// return this.get_header_html_skeleton(`\n\t\t// \t<div class=\"list-image-header\">\n\t\t// \t\t<div class=\"list-image-header-item\">\n\t\t// \t\t\t<input class=\"level-item list-check-all hidden-xs\" type=\"checkbox\" title=\"Select All\">\n\t\t// \t\t\t<div>${__(this.doctype)} &nbsp;</div>\n\t\t// \t\t\t(<span class=\"text-muted list-count\"></span>)\n\t\t// \t\t</div>\n\t\t// \t\t<div class=\"list-image-header-item\">\n\t\t// \t\t\t<div class=\"level-item list-liked-by-me\">\n\t\t// \t\t\t\t${frappe.utils.icon('heart', 'sm', 'like-icon')}\n\t\t// \t\t\t</div>\n\t\t// \t\t\t<div>${__('Liked')}</div>\n\t\t// \t\t</div>\n\t\t// \t</div>\n\t\t// `);\n\t}\n\n\tsetup_gallery() {\n\t\tvar me = this;\n\t\tthis.gallery = new frappe.views.GalleryView({\n\t\t\tdoctype: this.doctype,\n\t\t\titems: this.items,\n\t\t\twrapper: this.$result,\n\t\t\timages_map: this.images_map\n\t\t});\n\t\tthis.$result.on(\"click\", \".zoom-view\", function(e) {\n\t\t\te.preventDefault();\n\t\t\te.stopPropagation();\n\t\t\tvar name = $(this).data().name;\n\t\t\tname = decodeURIComponent(name);\n\t\t\tme.gallery.show(name);\n\t\t\treturn false;\n\t\t});\n\t}\n};\n\nfrappe.views.GalleryView = class GalleryView {\n\tconstructor(opts) {\n\t\t$.extend(this, opts);\n\t\tvar me = this;\n\n\t\tthis.lib_ready = this.load_lib();\n\t\tthis.lib_ready.then(function() {\n\t\t\tme.prepare();\n\t\t});\n\t}\n\tprepare() {\n\t\t// keep only one pswp dom element\n\t\tthis.pswp_root = $(\"body > .pswp\");\n\t\tif (this.pswp_root.length === 0) {\n\t\t\tvar pswp = frappe.render_template(\"photoswipe_dom\");\n\t\t\tthis.pswp_root = $(pswp).appendTo(\"body\");\n\t\t}\n\t}\n\tprepare_pswp_items(_items, _images_map) {\n\t\tvar me = this;\n\n\t\tif (_items) {\n\t\t\t// passed when more button clicked\n\t\t\tthis.items = this.items.concat(_items);\n\t\t\tthis.images_map = _images_map;\n\t\t}\n\n\t\treturn new Promise(resolve => {\n\t\t\tconst items = this.items.map(function(i) {\n\t\t\t\tconst query = 'img[data-name=\"' + i._name + '\"]';\n\t\t\t\tlet el = me.wrapper.find(query).get(0);\n\n\t\t\t\tlet width, height;\n\t\t\t\tif (el) {\n\t\t\t\t\twidth = el.naturalWidth;\n\t\t\t\t\theight = el.naturalHeight;\n\t\t\t\t}\n\n\t\t\t\tif (!el) {\n\t\t\t\t\tel = me.wrapper\n\t\t\t\t\t\t.find('.image-field[data-name=\"' + i._name + '\"]')\n\t\t\t\t\t\t.get(0);\n\t\t\t\t\twidth = el.getBoundingClientRect().width;\n\t\t\t\t\theight = el.getBoundingClientRect().height;\n\t\t\t\t}\n\n\t\t\t\treturn {\n\t\t\t\t\tsrc: i._image_url,\n\t\t\t\t\tmsrc: i._image_url,\n\t\t\t\t\tname: i.name,\n\t\t\t\t\tw: width,\n\t\t\t\t\th: height,\n\t\t\t\t\tel: el\n\t\t\t\t};\n\t\t\t});\n\t\t\tthis.pswp_items = items;\n\t\t\tresolve();\n\t\t});\n\t}\n\tshow(docname) {\n\t\tthis.lib_ready\n\t\t\t.then(() => this.prepare_pswp_items())\n\t\t\t.then(() => this._show(docname));\n\t}\n\t_show(docname) {\n\t\tconst me = this;\n\t\tconst items = this.pswp_items;\n\t\tconst item_index = items.findIndex(item => item.name === docname);\n\n\t\tvar options = {\n\t\t\tindex: item_index,\n\t\t\tgetThumbBoundsFn: function(index) {\n\t\t\t\tconst query = 'img[data-name=\"' + items[index]._name + '\"]';\n\t\t\t\tlet thumbnail = me.wrapper.find(query).get(0);\n\n\t\t\t\tif (!thumbnail) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tvar pageYScroll =\n\t\t\t\t\t\twindow.pageYOffset ||\n\t\t\t\t\t\tdocument.documentElement.scrollTop,\n\t\t\t\t\trect = thumbnail.getBoundingClientRect();\n\n\t\t\t\treturn {\n\t\t\t\t\tx: rect.left,\n\t\t\t\t\ty: rect.top + pageYScroll,\n\t\t\t\t\tw: rect.width\n\t\t\t\t};\n\t\t\t},\n\t\t\thistory: false,\n\t\t\tshareEl: false,\n\t\t\tshowHideOpacity: true\n\t\t};\n\n\t\t// init\n\t\tthis.pswp = new PhotoSwipe(\n\t\t\tthis.pswp_root.get(0),\n\t\t\tPhotoSwipeUI_Default,\n\t\t\titems,\n\t\t\toptions\n\t\t);\n\t\tthis.browse_images();\n\t\tthis.pswp.init();\n\t}\n\tbrowse_images() {\n\t\tconst $more_items = this.pswp_root.find(\".pswp__more-items\");\n\t\tconst images_map = this.images_map;\n\t\tlet last_hide_timeout = null;\n\n\t\tthis.pswp.listen(\"afterChange\", function() {\n\t\t\tconst images = images_map[this.currItem.name];\n\t\t\tif (!images || images.length === 1) {\n\t\t\t\t$more_items.html(\"\");\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\thide_more_items_after_2s();\n\t\t\tconst html = images.map(img_html).join(\"\");\n\t\t\t$more_items.html(html);\n\t\t});\n\n\t\tthis.pswp.listen(\"beforeChange\", hide_more_items);\n\t\tthis.pswp.listen(\"initialZoomOut\", hide_more_items);\n\t\tthis.pswp.listen(\"destroy\", () => {\n\t\t\t$(document).off(\"mousemove\", hide_more_items_after_2s);\n\t\t});\n\n\t\t// Replace current image on click\n\t\t$more_items.on(\"click\", \".pswp__more-item\", e => {\n\t\t\tconst img_el = e.target;\n\t\t\tconst index = this.pswp.items.findIndex(\n\t\t\t\ti => i.name === this.pswp.currItem.name\n\t\t\t);\n\n\t\t\tthis.pswp.goTo(index);\n\t\t\tthis.pswp.items.splice(index, 1, {\n\t\t\t\tsrc: img_el.src,\n\t\t\t\tw: img_el.naturalWidth,\n\t\t\t\th: img_el.naturalHeight,\n\t\t\t\tname: this.pswp.currItem.name\n\t\t\t});\n\t\t\tthis.pswp.invalidateCurrItems();\n\t\t\tthis.pswp.updateSize(true);\n\t\t});\n\n\t\t// hide more-images 2s after mousemove\n\t\t$(document).on(\"mousemove\", hide_more_items_after_2s);\n\n\t\tfunction hide_more_items_after_2s() {\n\t\t\tclearTimeout(last_hide_timeout);\n\t\t\tshow_more_items();\n\t\t\tlast_hide_timeout = setTimeout(hide_more_items, 2000);\n\t\t}\n\n\t\tfunction show_more_items() {\n\t\t\t$more_items.show();\n\t\t}\n\n\t\tfunction hide_more_items() {\n\t\t\t$more_items.hide();\n\t\t}\n\n\t\tfunction img_html(src) {\n\t\t\treturn `<div class=\"pswp__more-item\">\n\t\t\t\t<img src=\"${src}\">\n\t\t\t</div>`;\n\t\t}\n\t}\n\tload_lib() {\n\t\treturn new Promise(resolve => {\n\t\t\tvar asset_dir = \"assets/frappe/js/lib/photoswipe/\";\n\t\t\tfrappe.require(\n\t\t\t\t[\n\t\t\t\t\tasset_dir + \"photoswipe.css\",\n\t\t\t\t\tasset_dir + \"default-skin.css\",\n\t\t\t\t\tasset_dir + \"photoswipe.js\",\n\t\t\t\t\tasset_dir + \"photoswipe-ui-default.js\"\n\t\t\t\t],\n\t\t\t\tresolve\n\t\t\t);\n\t\t});\n\t}\n};\n", "/**\n * frappe.views.MapView\n */\nfrappe.provide('frappe.utils.utils');\nfrappe.provide(\"frappe.views\");\n\nfrappe.views.MapView = class MapView extends frappe.views.ListView {\n\tget view_name() {\n\t\treturn 'Map';\n\t}\n\n\tsetup_defaults() {\n\t\tsuper.setup_defaults();\n\t\tthis.page_title = __('{0} Map', [this.page_title]);\n\t}\n\n\tsetup_view() {\n\t}\n\n\ton_filter_change() {\n\t\tthis.get_coords();\n\t}\n\n\trender() {\n\t\tthis.get_coords()\n\t\t\t.then(() => {\n\t\t\t\tthis.render_map_view();\n\t\t\t});\n\t\tthis.$paging_area.find('.level-left').append('<div></div>');\n\t}\n\n\trender_map_view() {\n\t\tthis.map_id = frappe.dom.get_unique_id();\n\n\t\tthis.$result.html(`<div id=\"${this.map_id}\" class=\"map-view-container\"></div>`);\n\n\t\tL.Icon.Default.imagePath = '/assets/frappe/images/leaflet/';\n\t\tthis.map = L.map(this.map_id).setView(frappe.utils.map_defaults.center,\n\t\t\tfrappe.utils.map_defaults.zoom);\n\n\t\tL.tileLayer(frappe.utils.map_defaults.tiles,\n\t\t\tfrappe.utils.map_defaults.options).addTo(this.map);\n\n\t\tL.control.scale().addTo(this.map);\n\t\tif (this.coords.features && this.coords.features.length) {\n\t\t\tthis.coords.features.forEach(\n\t\t\t\tcoords => L.geoJSON(coords).bindPopup(coords.properties.name).addTo(this.map)\n\t\t\t);\n\t\t\tlet lastCoords = this.coords.features[0].geometry.coordinates.reverse();\n\t\t\tthis.map.panTo(lastCoords, 8);\n\t\t}\n\t}\n\n\tget_coords() {\n\t\tlet get_coords_method = this.settings && this.settings.get_coords_method || 'frappe.geo.utils.get_coords';\n\n\t\tif (cur_list.meta.fields.find(i => i.fieldname === 'location' && i.fieldtype === 'Geolocation')) {\n\t\t\tthis.type = 'location_field';\n\t\t} else if  (cur_list.meta.fields.find(i => i.fieldname === \"latitude\") &&\n\t\t\tcur_list.meta.fields.find(i => i.fieldname === \"longitude\")) {\n\t\t\tthis.type = 'coordinates';\n\t\t}\n\t\treturn frappe.call({\n\t\t\tmethod: get_coords_method,\n\t\t\targs: {\n\t\t\t\tdoctype: this.doctype,\n\t\t\t\tfilters: cur_list.filter_area.get(),\n\t\t\t\ttype: this.type\n\t\t\t}\n\t\t}).then(r => {\n\t\t\tthis.coords = r.message;\n\n\t\t});\n\t}\n\n\n\tget required_libs() {\n\t\treturn [\n\t\t\t\"assets/frappe/js/lib/leaflet/leaflet.css\",\n\t\t\t\"assets/frappe/js/lib/leaflet/leaflet.js\"\n\t\t];\n\t}\n\n\n};\n", "export default class KanbanSettings {\n\tconstructor({ kanbanview, doctype, meta, settings }) {\n\t\tif (!doctype) {\n\t\t\tfrappe.throw(__(\"DocType required\"));\n\t\t}\n\n\t\tthis.kanbanview = kanbanview;\n\t\tthis.doctype = doctype;\n\t\tthis.meta = meta;\n\t\tthis.settings = settings;\n\t\tthis.dialog = null;\n\t\tthis.fields = this.settings && this.settings.fields;\n\n\t\tfrappe.model.with_doctype(\"List View Settings\", () => {\n\t\t\tthis.make();\n\t\t\tthis.get_fields();\n\t\t\tthis.setup_fields();\n\t\t\tthis.setup_remove_fields();\n\t\t\tthis.add_new_fields();\n\t\t\tthis.show_dialog();\n\t\t});\n\t}\n\n\tmake() {\n\t\tthis.dialog = new frappe.ui.Dialog({\n\t\t\ttitle: __(\"{0} Settings\", [__(this.doctype)]),\n\t\t\tfields: [\n\t\t\t\t{\n\t\t\t\t\tfieldname: \"show_labels\",\n\t\t\t\t\tlabel: __(\"Show Labels\"),\n\t\t\t\t\tfieldtype: \"Check\",\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tfieldname: \"fields_html\",\n\t\t\t\t\tfieldtype: \"HTML\"\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tfieldname: \"fields\",\n\t\t\t\t\tfieldtype: \"Code\",\n\t\t\t\t\thidden: 1\n\t\t\t\t}\n\t\t\t]\n\t\t});\n\t\tthis.dialog.set_values(this.settings);\n\t\tthis.dialog.set_primary_action(__(\"Save\"), () => {\n\t\t\tfrappe.show_alert({\n\t\t\t\tmessage: __(\"Saving\"),\n\t\t\t\tindicator: \"green\"\n\t\t\t});\n\n\t\t\tfrappe.call({\n\t\t\t\tmethod:\n\t\t\t\t\t\"frappe.desk.doctype.kanban_board.kanban_board.save_settings\",\n\t\t\t\targs: {\n\t\t\t\t\tboard_name: this.settings.name,\n\t\t\t\t\tsettings: this.dialog.get_values()\n\t\t\t\t},\n\t\t\t\tcallback: r => {\n\t\t\t\t\tthis.kanbanview.board = r.message;\n\t\t\t\t\tthis.kanbanview.render();\n\t\t\t\t\tthis.dialog.hide();\n\t\t\t\t}\n\t\t\t});\n\t\t});\n\t}\n\n\trefresh() {\n\t\tthis.setup_fields();\n\t\tthis.add_new_fields();\n\t\tthis.setup_remove_fields();\n\t}\n\n\tshow_dialog() {\n\t\tif (!this.settings.fields) {\n\t\t\tthis.update_fields();\n\t\t}\n\n\t\tthis.dialog.show();\n\t}\n\n\tsetup_fields() {\n\t\tconst fields_html = this.dialog.get_field(\"fields_html\");\n\t\tconst wrapper = fields_html.$wrapper[0];\n\t\tlet fields = \"\";\n\n\t\tfor (let fieldname of this.fields) {\n\t\t\tlet field = this.get_docfield(fieldname);\n\n\t\t\tfields += `\n\t\t\t\t<div class=\"control-input flex align-center form-control fields_order sortable\"\n\t\t\t\t\tstyle=\"display: block; margin-bottom: 5px;\"\n\t\t\t\t\tdata-fieldname=\"${field.fieldname}\"\n\t\t\t\t\tdata-label=\"${field.label}\"\n\t\t\t\t\tdata-type=\"${field.type}\">\n\n\t\t\t\t\t<div class=\"row\">\n\t\t\t\t\t\t<div class=\"col-md-1\">\n\t\t\t\t\t\t\t${frappe.utils.icon(\"drag\", \"xs\", \"\", \"\", \"sortable-handle\")}\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<div class=\"col-md-10\" style=\"padding-left:0px;\">\n\t\t\t\t\t\t\t${__(field.label)}\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<div class=\"col-md-1\">\n\t\t\t\t\t\t\t<a class=\"text-muted remove-field\" data-fieldname=\"${field.fieldname}\">\n\t\t\t\t\t\t\t\t${frappe.utils.icon(\"delete\", \"xs\")}\n\t\t\t\t\t\t\t</a>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t</div>`;\n\t\t}\n\n\t\tfields_html.html(`\n\t\t\t<div class=\"form-group\">\n\t\t\t\t<div class=\"clearfix\">\n\t\t\t\t\t<label class=\"control-label\" style=\"padding-right: 0px;\">Fields</label>\n\t\t\t\t</div>\n\t\t\t\t<div class=\"control-input-wrapper\">\n\t\t\t\t${fields}\n\t\t\t\t</div>\n\t\t\t\t<p class=\"help-box small text-muted\">\n\t\t\t\t\t<a class=\"add-new-fields text-muted\">\n\t\t\t\t\t\t+ Add / Remove Fields\n\t\t\t\t\t</a>\n\t\t\t\t</p>\n\t\t\t</div>\n\t\t`);\n\n\t\tnew Sortable(\n\t\t\twrapper.getElementsByClassName(\"control-input-wrapper\")[0],\n\t\t\t{\n\t\t\t\thandle: \".sortable-handle\",\n\t\t\t\tdraggable: \".sortable\",\n\t\t\t\tonUpdate: params => {\n\t\t\t\t\tthis.fields.splice(\n\t\t\t\t\t\tparams.newIndex,\n\t\t\t\t\t\t0,\n\t\t\t\t\t\tthis.fields.splice(params.oldIndex, 1)[0]\n\t\t\t\t\t);\n\t\t\t\t\tthis.dialog.set_value(\n\t\t\t\t\t\t\"fields\",\n\t\t\t\t\t\tJSON.stringify(this.fields)\n\t\t\t\t\t);\n\t\t\t\t\tthis.refresh();\n\t\t\t\t}\n\t\t\t}\n\t\t);\n\t}\n\n\tadd_new_fields() {\n\t\tlet add_new_fields = this.get_dialog_fields_wrapper().getElementsByClassName(\n\t\t\t\"add-new-fields\"\n\t\t)[0];\n\t\tadd_new_fields.onclick = () => this.show_column_selector();\n\t}\n\n\tsetup_remove_fields() {\n\t\tlet remove_fields = this.get_dialog_fields_wrapper().getElementsByClassName(\n\t\t\t\"remove-field\"\n\t\t);\n\n\t\tfor (let idx = 0; idx < remove_fields.length; idx++) {\n\t\t\tremove_fields.item(idx).onclick = () =>\n\t\t\t\tthis.remove_fields(\n\t\t\t\t\tremove_fields.item(idx).getAttribute(\"data-fieldname\")\n\t\t\t\t);\n\t\t}\n\t}\n\n\tget_dialog_fields_wrapper() {\n\t\treturn this.dialog.get_field(\"fields_html\").$wrapper[0];\n\t}\n\n\tremove_fields(fieldname) {\n\t\tthis.fields = this.fields.filter(field => field !== fieldname);\n\t\tthis.dialog.set_value(\"fields\", JSON.stringify(this.fields));\n\t\tthis.refresh();\n\t}\n\n\tupdate_fields() {\n\t\tconst wrapper = this.dialog.get_field(\"fields_html\").$wrapper[0];\n\t\tlet fields_order = wrapper.getElementsByClassName(\"fields_order\");\n\t\tthis.fields = [];\n\n\t\tfor (let idx = 0; idx < fields_order.length; idx++) {\n\t\t\tthis.fields.push(\n\t\t\t\tfields_order.item(idx).getAttribute(\"data-fieldname\")\n\t\t\t);\n\t\t}\n\n\t\tthis.dialog.set_value(\"fields\", JSON.stringify(this.fields));\n\t}\n\n\tshow_column_selector() {\n\t\tlet dialog = new frappe.ui.Dialog({\n\t\t\ttitle: __(\"{0} Fields\", [__(this.doctype)]),\n\t\t\tfields: [\n\t\t\t\t{\n\t\t\t\t\tlabel: __(\"Select Fields\"),\n\t\t\t\t\tfieldtype: \"MultiCheck\",\n\t\t\t\t\tfieldname: \"fields\",\n\t\t\t\t\toptions: this.get_multiselect_fields(),\n\t\t\t\t\tcolumns: 2\n\t\t\t\t}\n\t\t\t]\n\t\t});\n\t\tdialog.set_primary_action(__(\"Save\"), () => {\n\t\t\tthis.fields = dialog.get_values().fields || [];\n\t\t\tthis.dialog.set_value(\"fields\", JSON.stringify(this.fields));\n\t\t\tthis.refresh();\n\t\t\tdialog.hide();\n\t\t});\n\t\tdialog.show();\n\t}\n\n\tget_fields() {\n\t\tthis.fields = this.settings.fields;\n\t\tthis.fields.uniqBy(f => f.fieldname);\n\t}\n\n\tget_docfield(field_name) {\n\t\treturn (\n\t\t\tfrappe.meta.get_docfield(this.doctype, field_name) ||\n\t\t\tfrappe.model.get_std_field(field_name)\n\t\t);\n\t}\n\n\tget_multiselect_fields() {\n\t\tconst ignore_fields = [\n\t\t\t\"idx\",\n\t\t\t\"lft\",\n\t\t\t\"rgt\",\n\t\t\t\"old_parent\",\n\t\t\t\"_user_tags\",\n\t\t\t\"_liked_by\",\n\t\t\t\"_comments\",\n\t\t\t\"_assign\",\n\t\t\tthis.meta.title_field || \"name\"\n\t\t];\n\n\t\tconst ignore_fieldtypes = [\n\t\t\t\"Attach Image\",\n\t\t\t\"Text Editor\",\n\t\t\t\"HTML Editor\",\n\t\t\t\"Code\",\n\t\t\t\"Color\",\n\t\t\t...frappe.model.no_value_type\n\t\t];\n\n\t\treturn frappe.model.std_fields\n\t\t\t.concat(this.kanbanview.get_fields_in_list_view())\n\t\t\t.filter(\n\t\t\t\tfield =>\n\t\t\t\t\t!ignore_fields.includes(field.fieldname) &&\n\t\t\t\t\t!ignore_fieldtypes.includes(field.fieldtype)\n\t\t\t)\n\t\t\t.map(field => {\n\t\t\t\treturn {\n\t\t\t\t\tlabel: __(field.label),\n\t\t\t\t\tvalue: field.fieldname,\n\t\t\t\t\tchecked: this.fields.includes(field.fieldname)\n\t\t\t\t};\n\t\t\t});\n\t}\n}\n", "import KanbanSettings from \"./kanban_settings\";\n\nfrappe.provide('frappe.views');\n\nfrappe.views.KanbanView = class KanbanView extends frappe.views.ListView {\n\tstatic load_last_view() {\n\t\tconst route = frappe.get_route();\n\t\tif (route.length === 3) {\n\t\t\tconst doctype = route[1];\n\t\t\tconst user_settings = frappe.get_user_settings(doctype)['Kanban'] || {};\n\t\t\tif (!user_settings.last_kanban_board) {\n\t\t\t\tfrappe.msgprint({\n\t\t\t\t\ttitle: __('Error'),\n\t\t\t\t\tindicator: 'red',\n\t\t\t\t\tmessage: __('Missing parameter Kanban Board Name')\n\t\t\t\t});\n\t\t\t\tfrappe.set_route('List', doctype, 'List');\n\t\t\t\treturn true;\n\t\t\t}\n\t\t\troute.push(user_settings.last_kanban_board);\n\t\t\tfrappe.set_route(route);\n\t\t\treturn true;\n\t\t}\n\t\treturn false;\n\t}\n\n\tget view_name() {\n\t\treturn 'Kanban';\n\t}\n\n\tsetup_defaults() {\n\t\treturn super.setup_defaults()\n\t\t\t.then(() => {\n\t\t\t\tthis.board_name = frappe.get_route()[3];\n\t\t\t\tthis.page_title = __(this.board_name);\n\t\t\t\tthis.card_meta = this.get_card_meta();\n\t\t\t\tthis.page_length = 0;\n\n\t\t\t\tthis.menu_items.push({\n\t\t\t\t\tlabel: __('Save filters'),\n\t\t\t\t\taction: () => {\n\t\t\t\t\t\tthis.save_kanban_board_filters();\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t\treturn this.get_board();\n\t\t\t});\n\t}\n\n\tsetup_paging_area() {\n\t\t// pass\n\t}\n\n\ttoggle_result_area() {\n\t\tthis.$result.toggle(this.data.length > 0);\n\t}\n\n\tget_board() {\n\t\treturn frappe.db.get_doc('Kanban Board', this.board_name)\n\t\t\t.then(board => {\n\t\t\t\tthis.board = board;\n\t\t\t\tthis.board.filters_array = JSON.parse(this.board.filters || '[]');\n\t\t\t\tthis.board.fields = JSON.parse(this.board.fields || '[]');\n\t\t\t\tthis.filters = this.board.filters_array;\n\t\t\t});\n\t}\n\n\tsetup_page() {\n\t\tthis.hide_sidebar = true;\n\t\tthis.hide_page_form = true;\n\t\tthis.hide_card_layout = true;\n\t\tsuper.setup_page();\n\t}\n\n\tsetup_view() {\n\t\tif (this.board.columns.length > 5) {\n\t\t\tthis.page.container.addClass('full-width');\n\t\t}\n\t\tthis.setup_realtime_updates();\n\t\tthis.setup_like();\n\t}\n\n\tset_fields() {\n\t\tsuper.set_fields();\n\t\tthis._add_field(this.card_meta.title_field);\n\t}\n\n\tbefore_render() {\n\t\tfrappe.model.user_settings.save(this.doctype, 'last_view', this.view_name);\n\t\tthis.save_view_user_settings({\n\t\t\tlast_kanban_board: this.board_name\n\t\t});\n\t}\n\n\trender_list() {\n\n\t}\n\n\ton_filter_change() {\n\t\tif (JSON.stringify(this.board.filters_array) !== JSON.stringify(this.filter_area.get())) {\n\t\t\tthis.page.set_indicator(__('Not Saved'), 'orange');\n\t\t} else {\n\t\t\tthis.page.clear_indicator();\n\t\t}\n\t}\n\n\tsave_kanban_board_filters() {\n\t\tconst filters = this.filter_area.get();\n\n\t\tfrappe.db.set_value(\"Kanban Board\", this.board_name, \"filters\", filters).then(r => {\n\t\t\tif (r.exc) {\n\t\t\t\tfrappe.show_alert({\n\t\t\t\t\tindicator: 'red',\n\t\t\t\t\tmessage: __('There was an error saving filters')\n\t\t\t\t});\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tfrappe.show_alert({\n\t\t\t\tindicator: 'green',\n\t\t\t\tmessage: __('Filters saved')\n\t\t\t});\n\n\t\t\tthis.board.filters_array = filters;\n\t\t\tthis.on_filter_change();\n\t\t});\n\t}\n\n\tget_fields() {\n\t\tthis.fields.push([this.board.field_name, this.board.reference_doctype]);\n\t\treturn super.get_fields();\n\t}\n\n\trender() {\n\t\tconst board_name = this.board_name;\n\t\tif (this.kanban && board_name === this.kanban.board_name) {\n\t\t\tthis.kanban.update(this.data);\n\t\t\treturn;\n\t\t}\n\n\t\tthis.kanban = new frappe.views.KanbanBoard({\n\t\t\tdoctype: this.doctype,\n\t\t\tboard: this.board,\n\t\t\tboard_name: board_name,\n\t\t\tcards: this.data,\n\t\t\tcard_meta: this.card_meta,\n\t\t\twrapper: this.$result,\n\t\t\tcur_list: this,\n\t\t\tuser_settings: this.view_user_settings\n\t\t});\n\t}\n\n\tget_card_meta() {\n\t\tvar meta = frappe.get_meta(this.doctype);\n\t\t// preserve route options erased by new doc\n\t\tlet route_options = {...frappe.route_options};\n\t\tvar doc = frappe.model.get_new_doc(this.doctype);\n\t\tfrappe.route_options = route_options;\n\t\tvar title_field = null;\n\t\tvar quick_entry = false;\n\n\t\tif (this.meta.title_field) {\n\t\t\ttitle_field = frappe.meta.get_field(this.doctype, this.meta.title_field);\n\t\t}\n\n\t\tthis.meta.fields.forEach((df) => {\n\t\t\tconst is_valid_field =\n\t\t\t\tin_list(['Data', 'Text', 'Small Text', 'Text Editor'], df.fieldtype)\n\t\t\t\t&& !df.hidden;\n\n\t\t\tif (is_valid_field && !title_field) {\n\t\t\t\t// can be mapped to textarea\n\t\t\t\ttitle_field = df;\n\t\t\t}\n\t\t});\n\n\t\t// quick entry\n\t\tvar mandatory = meta.fields.filter((df) => df.reqd && !doc[df.fieldname]);\n\n\t\tif (mandatory.some(df => frappe.model.table_fields.includes(df.fieldtype)) || mandatory.length > 1) {\n\t\t\tquick_entry = true;\n\t\t}\n\n\t\tif (!title_field) {\n\t\t\ttitle_field = frappe.meta.get_field(this.doctype, 'name');\n\t\t}\n\n\t\treturn {\n\t\t\tquick_entry: quick_entry,\n\t\t\ttitle_field: title_field\n\t\t};\n\t}\n\n\tget_view_settings() {\n\t\treturn {\n\t\t\tlabel: __(\"Kanban Settings\", null, \"Button in kanban view menu\"),\n\t\t\taction: () => this.show_kanban_settings(),\n\t\t\tstandard: true,\n\t\t};\n\t}\n\n\tshow_kanban_settings() {\n\t\tfrappe.model.with_doctype(this.doctype, () => {\n\t\t\tnew KanbanSettings({\n\t\t\t\tkanbanview: this,\n\t\t\t\tdoctype: this.doctype,\n\t\t\t\tsettings: this.board,\n\t\t\t\tmeta: frappe.get_meta(this.doctype)\n\t\t\t});\n\t\t});\n\t}\n\n\tget required_libs() {\n\t\treturn 'kanban_board.bundle.js';\n\t}\n};\n\n\nfrappe.views.KanbanView.get_kanbans = function (doctype) {\n\tlet kanbans = [];\n\n\treturn get_kanban_boards()\n\t\t.then((kanban_boards) => {\n\t\t\tif (kanban_boards) {\n\t\t\t\tkanban_boards.forEach(board => {\n\t\t\t\t\tlet route = `/app/${frappe.router.slug(board.reference_doctype)}/view/kanban/${board.name}`;\n\t\t\t\t\tkanbans.push({ name: board.name, route: route });\n\t\t\t\t});\n\t\t\t}\n\n\t\t\treturn kanbans;\n\t\t});\n\n\tfunction get_kanban_boards() {\n\t\treturn frappe.call('frappe.desk.doctype.kanban_board.kanban_board.get_kanban_boards', { doctype })\n\t\t\t.then(r => r.message);\n\t}\n};\n\n\nfrappe.views.KanbanView.show_kanban_dialog = function (doctype, show_existing) {\n\tlet dialog = null;\n\n\tfrappe.views.KanbanView.get_kanbans(doctype).then(kanbans => {\n\t\tdialog = new_kanban_dialog(kanbans, show_existing);\n\t\tdialog.show();\n\t});\n\n\tfunction make_kanban_board(board_name, field_name, project) {\n\t\treturn frappe.call({\n\t\t\tmethod: 'frappe.desk.doctype.kanban_board.kanban_board.quick_kanban_board',\n\t\t\targs: {\n\t\t\t\tdoctype,\n\t\t\t\tboard_name,\n\t\t\t\tfield_name,\n\t\t\t\tproject\n\t\t\t},\n\t\t\tcallback: function (r) {\n\t\t\t\tvar kb = r.message;\n\t\t\t\tif (kb.filters) {\n\t\t\t\t\tfrappe.provide('frappe.kanban_filters');\n\t\t\t\t\tfrappe.kanban_filters[kb.kanban_board_name] = kb.filters;\n\t\t\t\t}\n\t\t\t\tfrappe.set_route('List', doctype, 'Kanban', kb.kanban_board_name);\n\t\t\t}\n\t\t});\n\t}\n\n\tfunction new_kanban_dialog(kanbans, show_existing) {\n\t\t/* Kanban dialog can show either \"Save\" or \"Customize Form\" option depending if any Select fields exist in the DocType for Kanban creation\n\t\t*/\n\t\tif (dialog) return dialog;\n\n\t\tconst dialog_fields = get_fields_for_dialog(kanbans.map(kanban => kanban.name), show_existing);\n\t\tconst select_fields = frappe.get_meta(doctype).fields.filter(df => {\n\t\t\treturn (df.fieldtype === 'Select') && (df.fieldname !== 'kanban_column')\n\t\t});\n\t\tconst to_save = select_fields.length > 0;\n\t\tconst primary_action_label = to_save ? __('Save') : __('Customize Form');\n\n\t\tlet primary_action = () => {\n\t\t\tif (to_save) {\n\t\t\t\tconst values = dialog.get_values();\n\t\t\t\tif (!values.selected_kanban || values.selected_kanban == 'Create New Board') {\n\t\t\t\t\tmake_kanban_board(values.board_name, values.field_name, values.project).then(\n\t\t\t\t\t\t() => dialog.hide(),\n\t\t\t\t\t\t(err) => frappe.msgprint(err)\n\t\t\t\t\t);\n\t\t\t\t} else {\n\t\t\t\t\tfrappe.set_route(kanbans.find(kanban => kanban.name == values.selected_kanban).route);\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tfrappe.set_route(\"Form\", \"Customize Form\", {\"doc_type\": doctype});\n\t\t\t}\n\t\t};\n\n\t\tdialog = new frappe.ui.Dialog({\n\t\t\ttitle: __('New Kanban Board'),\n\t\t\tfields: dialog_fields,\n\t\t\tprimary_action_label,\n\t\t\tprimary_action\n\t\t});\n\t\treturn dialog;\n\t}\n\n\tfunction get_fields_for_dialog(kanban_options, show_existing = false) {\n\t\tkanban_options.push('Create New Board');\n\t\tconst select_fields = frappe.get_meta(doctype).fields.filter(df => {\n\t\t\treturn df.fieldtype === 'Select' && df.fieldname !== 'kanban_column';\n\t\t});\n\n\t\tlet fields = [\n\t\t\t{\n\t\t\t\tfieldtype: 'Select',\n\t\t\t\tfieldname: 'selected_kanban',\n\t\t\t\tlabel: __('Choose Kanban Board'),\n\t\t\t\treqd: 1,\n\t\t\t\tdepends_on: `eval: ${show_existing}`,\n\t\t\t\tmandatory_depends_on: `eval: ${show_existing}`,\n\t\t\t\toptions: kanban_options,\n\t\t\t\tdefault: kanban_options[0]\n\t\t\t},\n\t\t\t{\n\t\t\t\tfieldname: 'new_kanban_board_sb',\n\t\t\t\tfieldtype: 'Section Break',\n\t\t\t\tdepends_on: `eval: !${show_existing} || doc.selected_kanban == \"Create New Board\"`,\n\t\t\t},\n\t\t\t{\n\t\t\t\tfieldtype: 'Data',\n\t\t\t\tfieldname: 'board_name',\n\t\t\t\tlabel: __('Kanban Board Name'),\n\t\t\t\tmandatory_depends_on: 'eval: doc.selected_kanban == \"Create New Board\"',\n\t\t\t\tdescription: ['Note', 'ToDo'].includes(doctype) ?\n\t\t\t\t\t__('This Kanban Board will be private') : ''\n\t\t\t}\n\t\t];\n\n\t\tif (doctype === 'Task') {\n\t\t\tfields.push({\n\t\t\t\tfieldtype: 'Link',\n\t\t\t\tfieldname: 'project',\n\t\t\t\tlabel: __('Project'),\n\t\t\t\toptions: 'Project'\n\t\t\t});\n\t\t}\n\n\t\tif (select_fields.length > 0) {\n\t\t\tfields.push({\n\t\t\t\tfieldtype: 'Select',\n\t\t\t\tfieldname: 'field_name',\n\t\t\t\tlabel: __('Columns based on'),\n\t\t\t\toptions: select_fields.map(df => ({ label: df.label, value: df.fieldname })),\n\t\t\t\tdefault: select_fields[0],\n\t\t\t\tmandatory_depends_on: 'eval: doc.selected_kanban == \"Create New Board\"',\n\t\t\t});\n\t\t} else {\n\t\t\tfields = [{\n\t\t\t\tfieldtype: 'HTML',\n\t\t\t\toptions: `\n\t\t\t\t\t<div>\n\t\t\t\t\t\t<p class=\"text-medium\">\n\t\t\t\t\t\t${__('No fields found that can be used as a Kanban Column. Use the Customize Form to add a Custom Field of type \"Select\".')}\n\t\t\t\t\t\t</p>\n\t\t\t\t\t</div>\n\t\t\t\t`\n\t\t\t}];\n\t\t}\n\n\t\treturn fields;\n\t}\n};\n", "/**\n * frappe.views.InboxView\n */\n\nfrappe.provide(\"frappe.views\");\n\nfrappe.views.InboxView = class InboxView extends frappe.views.ListView {\n\tstatic load_last_view() {\n\t\tconst route = frappe.get_route();\n\t\tif (!route[3] && frappe.boot.email_accounts.length) {\n\t\t\tlet email_account;\n\t\t\tif (frappe.boot.email_accounts[0].email_id == \"All Accounts\") {\n\t\t\t\temail_account = \"All Accounts\";\n\t\t\t} else {\n\t\t\t\temail_account = frappe.boot.email_accounts[0].email_account;\n\t\t\t}\n\t\t\tfrappe.set_route(\"List\", \"Communication\", \"Inbox\", email_account);\n\t\t\treturn true;\n\t\t} else if (!route[3] || (route[3] !== \"All Accounts\" && !is_valid(route[3]))) {\n\t\t\tfrappe.throw(__('No email account associated with the User. Please add an account under User > Email Inbox.'));\n\t\t}\n\t\treturn false;\n\n\t\tfunction is_valid(email_account) {\n\t\t\treturn frappe.boot.email_accounts.find(d => d.email_account === email_account);\n\t\t}\n\t}\n\n\tget view_name() {\n\t\treturn 'Inbox';\n\t}\n\n\tshow() {\n\t\tsuper.show();\n\t\t// save email account in user_settings\n\t\tthis.save_view_user_settings({\n\t\t\tlast_email_account: this.current_email_account\n\t\t});\n\t}\n\n\tsetup_defaults() {\n\t\tsuper.setup_defaults();\n\n\t\t// initialize with saved order by\n\t\tthis.sort_by = this.view_user_settings.sort_by || 'communication_date';\n\t\tthis.sort_order = this.view_user_settings.sort_order || 'desc';\n\n\t\tthis.email_account = frappe.get_route()[3];\n\t\tthis.page_title = this.email_account;\n\t\tthis.filters = this.get_inbox_filters();\n\t}\n\n\tsetup_columns() {\n\t\t// setup columns for list view\n\t\tthis.columns = [];\n\t\tthis.columns.push({\n\t\t\ttype: 'Subject',\n\t\t\tdf: {\n\t\t\t\tlabel: __('Subject'),\n\t\t\t\tfieldname: 'subject'\n\t\t\t}\n\t\t});\n\t\tthis.columns.push({\n\t\t\ttype: 'Field',\n\t\t\tdf: {\n\t\t\t\tlabel: this.is_sent_emails ? __(\"To\") : __(\"From\"),\n\t\t\t\tfieldname: this.is_sent_emails ? 'recipients' : 'sender'\n\t\t\t}\n\t\t});\n\t}\n\n\tget_seen_class(doc) {\n\t\tconst seen =\n\t\t\tBoolean(doc.seen) || JSON.parse(doc._seen || '[]').includes(frappe.session.user)\n\t\t\t\t? ''\n\t\t\t\t: 'bold';\n\t\treturn seen;\n\t}\n\n\tget is_sent_emails() {\n\t\tconst f = this.filter_area.get()\n\t\t\t.find(filter => filter[1] === 'sent_or_received');\n\t\treturn f && f[3] === 'Sent';\n\t}\n\n\trender_header() {\n\t\tthis.$result.find('.list-row-head').remove();\n\t\tthis.$result.prepend(this.get_header_html());\n\t}\n\n\trender() {\n\t\tthis.setup_columns();\n\t\tthis.render_header();\n\t\tthis.render_list();\n\t\tthis.on_row_checked();\n\t\tthis.render_count();\n\t}\n\n\tget_meta_html(email) {\n\t\tconst attachment = email.has_attachment ?\n\t\t\t`<span class=\"fa fa-paperclip fa-large\" title=\"${__('Has Attachments')}\"></span>` : '';\n\n\t\tlet link = \"\";\n\t\tif (email.reference_doctype && email.reference_doctype !== this.doctype) {\n\t\t\tlink = `<a class=\"text-muted grey\"\n\t\t\t\thref=\"${frappe.utils.get_form_link(email.reference_doctype, email.reference_name)}\"\n\t\t\t\ttitle=\"${__('Linked with {0}', [email.reference_doctype])}\">\n\t\t\t\t<i class=\"fa fa-link fa-large\"></i>\n\t\t\t</a>`;\n\t\t}\n\n\t\tconst communication_date = comment_when(email.communication_date, true);\n\t\tconst status =\n\t\t\temail.status == \"Closed\" ? `<span class=\"fa fa-check fa-large\" title=\"${__(email.status)}\"></span>` :\n\t\t\t\temail.status == \"Replied\" ? `<span class=\"fa fa-mail-reply fa-large\" title=\"${__(email.status)}\"></span>` :\n\t\t\t\t\t\"\";\n\n\t\treturn `\n\t\t\t<div class=\"level-item list-row-activity\">\n\t\t\t\t${link}\n\t\t\t\t${attachment}\n\t\t\t\t${status}\n\t\t\t\t${communication_date}\n\t\t\t</div>\n\t\t`;\n\t}\n\n\tget_inbox_filters() {\n\t\tvar email_account = this.email_account;\n\t\tvar default_filters = [\n\t\t\t[\"Communication\", \"communication_type\", \"=\", \"Communication\", true],\n\t\t\t[\"Communication\", \"communication_medium\", \"=\", \"Email\", true],\n\t\t];\n\t\tvar filters = [];\n\t\tif (email_account === \"Sent\") {\n\t\t\tfilters = default_filters.concat([\n\t\t\t\t[\"Communication\", \"sent_or_received\", \"=\", \"Sent\", true],\n\t\t\t\t[\"Communication\", \"email_status\", \"not in\", \"Spam,Trash\", true],\n\t\t\t]);\n\t\t} else if (in_list([\"Spam\", \"Trash\"], email_account)) {\n\t\t\tfilters = default_filters.concat([\n\t\t\t\t[\"Communication\", \"email_status\", \"=\", email_account, true],\n\t\t\t\t[\"Communication\", \"email_account\", \"in\", frappe.boot.all_accounts, true]\n\t\t\t]);\n\t\t} else {\n\t\t\tvar op = \"=\";\n\t\t\tif (email_account == \"All Accounts\") {\n\t\t\t\top = \"in\";\n\t\t\t\temail_account = frappe.boot.all_accounts;\n\t\t\t}\n\n\t\t\tfilters = default_filters.concat([\n\t\t\t\t[\"Communication\", \"sent_or_received\", \"=\", \"Received\", true],\n\t\t\t\t[\"Communication\", \"status\", \"=\", \"Open\", true],\n\t\t\t\t[\"Communication\", \"email_account\", op, email_account, true],\n\t\t\t\t[\"Communication\", \"email_status\", \"not in\", \"Spam,Trash\", true],\n\t\t\t]);\n\t\t}\n\n\t\treturn filters;\n\t}\n\n\tget_no_result_message() {\n\t\tvar email_account = this.email_account;\n\t\tvar args;\n\t\tif (in_list([\"Spam\", \"Trash\"], email_account)) {\n\t\t\treturn __(\"No {0} mail\", [email_account]);\n\t\t} else if (!email_account && !frappe.boot.email_accounts.length) {\n\t\t\t// email account is not configured\n\t\t\targs = {\n\t\t\t\tdoctype: \"Email Account\",\n\t\t\t\tmsg: __(\"No Email Account\"),\n\t\t\t\tlabel: __(\"New Email Account\"),\n\t\t\t};\n\t\t} else {\n\t\t\t// no sent mail\n\t\t\targs = {\n\t\t\t\tdoctype: \"Communication\",\n\t\t\t\tmsg: __(\"No Emails\"),\n\t\t\t\tlabel: __(\"Compose Email\")\n\t\t\t};\n\t\t}\n\n\t\tconst html = frappe.model.can_create(args.doctype) ?\n\t\t\t`<p>${args.msg}</p>\n\t\t\t<p>\n\t\t\t\t<button class=\"btn btn-primary btn-sm btn-new-doc\">\n\t\t\t\t\t${args.label}\n\t\t\t\t</button>\n\t\t\t</p>\n\t\t\t` :\n\t\t\t`<p>${ __(\"No Email Accounts Assigned\") }</p>`;\n\n\t\treturn `\n\t\t\t<div class=\"msg-box no-border\">\n\t\t\t\t${html}\n\t\t\t</div>\n\t\t`;\n\t}\n\n\tmake_new_doc() {\n\t\tif (!this.email_account && !frappe.boot.email_accounts.length) {\n\t\t\tfrappe.route_options = {\n\t\t\t\t'email_id': frappe.session.user_email\n\t\t\t};\n\t\t\tfrappe.new_doc('Email Account');\n\t\t} else {\n\t\t\tnew frappe.views.CommunicationComposer();\n\t\t}\n\t}\n};\n", "frappe.provide(\"frappe.views\");\n\nfrappe.views.FileView = class FileView extends frappe.views.ListView {\n\tstatic load_last_view() {\n\t\tconst route = frappe.get_route();\n\t\tif (route.length === 2) {\n\t\t\tconst view_user_settings = frappe.get_user_settings(\"File\", \"File\");\n\t\t\tfrappe.set_route(\n\t\t\t\t\"List\",\n\t\t\t\t\"File\",\n\t\t\t\tview_user_settings.last_folder || frappe.boot.home_folder\n\t\t\t);\n\t\t\treturn true;\n\t\t}\n\t\treturn redirect_to_home_if_invalid_route();\n\t}\n\n\tget view_name() {\n\t\treturn \"File\";\n\t}\n\n\tshow() {\n\t\tif (!redirect_to_home_if_invalid_route()) {\n\t\t\tsuper.show();\n\t\t}\n\t}\n\n\tsetup_view() {\n\t\tthis.render_header();\n\t\tthis.setup_events();\n\t\tthis.$page.find(\".layout-main-section-wrapper\").addClass(\"file-view\");\n\t\tthis.add_file_action_buttons();\n\t\tthis.page.add_button(__(\"Toggle Grid View\"), () => {\n\t\t\tfrappe.views.FileView.grid_view = !frappe.views.FileView.grid_view;\n\t\t\tthis.refresh();\n\t\t});\n\t}\n\n\tsetup_no_result_area() {\n\t\tthis.$no_result = $(`<div class=\"no-result\">\n\t\t\t<div class=\"breadcrumbs\">${this.get_breadcrumbs_html()}</div>\n\t\t\t<div class=\"text-muted flex justify-center align-center\">\n\t\t\t\t${this.get_no_result_message()}\n\t\t\t</div>\n\t\t</div>`).hide();\n\t\tthis.$frappe_list.append(this.$no_result);\n\t}\n\n\tget_args() {\n\t\tlet args = super.get_args();\n\t\tif (frappe.views.FileView.grid_view) {\n\t\t\tObject.assign(args, {\n\t\t\t\torder_by: `is_folder desc, ${this.sort_by} ${this.sort_order}`\n\t\t\t});\n\t\t}\n\t\treturn args;\n\t}\n\n\tset_breadcrumbs() {\n\t\tconst route = frappe.get_route();\n\t\troute.splice(-1);\n\t\tconst last_folder = route[route.length - 1];\n\t\tif (last_folder === \"File\") return;\n\n\t\tfrappe.breadcrumbs.add({\n\t\t\ttype: \"Custom\",\n\t\t\tlabel: __(\"Home\"),\n\t\t\troute: \"/app/List/File/Home\"\n\t\t});\n\t}\n\n\tsetup_defaults() {\n\t\treturn super.setup_defaults().then(() => {\n\t\t\tthis.page_title = __(\"File Manager\");\n\n\t\t\tconst route = frappe.get_route();\n\t\t\tthis.current_folder = route.slice(2).join(\"/\");\n\t\t\tthis.filters = [[\"File\", \"folder\", \"=\", this.current_folder, true]];\n\t\t\tthis.order_by = this.view_user_settings.order_by || \"file_name asc\";\n\n\t\t\tthis.menu_items = this.menu_items.concat(this.file_menu_items());\n\t\t});\n\t}\n\n\tfile_menu_items() {\n\t\tconst items = [\n\t\t\t{\n\t\t\t\tlabel: __(\"Home\"),\n\t\t\t\taction: () => {\n\t\t\t\t\tfrappe.set_route(\"List\", \"File\", \"Home\");\n\t\t\t\t}\n\t\t\t},\n\t\t\t{\n\t\t\t\tlabel: __(\"New Folder\"),\n\t\t\t\taction: () => {\n\t\t\t\t\tfrappe.prompt(\n\t\t\t\t\t\t__(\"Name\"),\n\t\t\t\t\t\tvalues => {\n\t\t\t\t\t\t\tif (values.value.indexOf(\"/\") > -1) {\n\t\t\t\t\t\t\t\tfrappe.throw(\n\t\t\t\t\t\t\t\t\t__(\n\t\t\t\t\t\t\t\t\t\t\"Folder name should not include '/' (slash)\"\n\t\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tconst data = {\n\t\t\t\t\t\t\t\tfile_name: values.value,\n\t\t\t\t\t\t\t\tfolder: this.current_folder\n\t\t\t\t\t\t\t};\n\t\t\t\t\t\t\tfrappe.call({\n\t\t\t\t\t\t\t\tmethod:\n\t\t\t\t\t\t\t\t\t\"frappe.core.api.file.create_new_folder\",\n\t\t\t\t\t\t\t\targs: data\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t},\n\t\t\t\t\t\t__(\"Enter folder name\"),\n\t\t\t\t\t\t__(\"Create\")\n\t\t\t\t\t);\n\t\t\t\t}\n\t\t\t},\n\t\t\t{\n\t\t\t\tlabel: __(\"Import Zip\"),\n\t\t\t\taction: () => {\n\t\t\t\t\tnew frappe.ui.FileUploader({\n\t\t\t\t\t\tfolder: this.current_folder,\n\t\t\t\t\t\trestrictions: {\n\t\t\t\t\t\t\tallowed_file_types: [\".zip\"]\n\t\t\t\t\t\t},\n\t\t\t\t\t\ton_success: file => {\n\t\t\t\t\t\t\tfrappe.show_alert(__(\"Unzipping files...\"));\n\t\t\t\t\t\t\tfrappe\n\t\t\t\t\t\t\t\t.call(\n\t\t\t\t\t\t\t\t\t\"frappe.core.api.file.unzip_file\",\n\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\tname: file.name\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t\t.then(r => {\n\t\t\t\t\t\t\t\t\tif (r.message) {\n\t\t\t\t\t\t\t\t\t\tfrappe.show_alert(\n\t\t\t\t\t\t\t\t\t\t\t__(\"Unzipped {0} files\", [\n\t\t\t\t\t\t\t\t\t\t\t\tr.message\n\t\t\t\t\t\t\t\t\t\t\t])\n\t\t\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t}\n\t\t];\n\n\t\treturn items;\n\t}\n\n\tadd_file_action_buttons() {\n\t\tthis.$cut_button = this.page\n\t\t\t.add_button(__(\"Cut\"), () => {\n\t\t\t\tfrappe.file_manager.cut(\n\t\t\t\t\tthis.get_checked_items(),\n\t\t\t\t\tthis.current_folder\n\t\t\t\t);\n\t\t\t\tthis.$checks.parents(\".file-wrapper\").addClass(\"cut\");\n\t\t\t})\n\t\t\t.hide();\n\n\t\tthis.$paste_btn = this.page\n\t\t\t.add_button(__(\"Paste\"), () =>\n\t\t\t\tfrappe.file_manager.paste(this.current_folder)\n\t\t\t)\n\t\t\t.hide();\n\n\t\tthis.page.add_actions_menu_item(__('Export as zip'), () => {\n\t\t\tlet docnames = this.get_checked_items(true);\n\t\t\tif (docnames.length) {\n\t\t\t\topen_url_post('/api/method/frappe.core.api.file.zip_files', {\n\t\t\t\t\tfiles: JSON.stringify(docnames)\n\t\t\t\t});\n\t\t\t}\n\t\t});\n\t}\n\n\tset_fields() {\n\t\tthis.fields = this.meta.fields\n\t\t\t.filter(\n\t\t\t\tdf => frappe.model.is_value_type(df.fieldtype) && !df.hidden\n\t\t\t)\n\t\t\t.map(df => df.fieldname)\n\t\t\t.concat([\"name\", \"modified\", \"creation\"]);\n\t}\n\n\tprepare_data(data) {\n\t\tsuper.prepare_data(data);\n\n\t\tthis.data = this.data.map(d => this.prepare_datum(d));\n\n\t\t// Bring folders to the top\n\t\tconst { sort_by } = this.sort_selector;\n\t\tif (sort_by === \"file_name\") {\n\t\t\tthis.data.sort((a, b) => {\n\t\t\t\tif (a.is_folder && !b.is_folder) {\n\t\t\t\t\treturn -1;\n\t\t\t\t}\n\t\t\t\tif (!a.is_folder && b.is_folder) {\n\t\t\t\t\treturn 1;\n\t\t\t\t}\n\t\t\t\treturn 0;\n\t\t\t});\n\t\t}\n\t}\n\n\tprepare_datum(d) {\n\t\tlet icon_class = \"\";\n\t\tlet type = \"\";\n\t\tif (d.is_folder) {\n\t\t\ticon_class = \"folder-normal\";\n\t\t\ttype = \"folder\";\n\t\t} else if (frappe.utils.is_image_file(d.file_name)) {\n\t\t\ticon_class = \"image\";\n\t\t\ttype = \"image\";\n\t\t} else {\n\t\t\ticon_class = \"file\";\n\t\t\ttype = \"file\";\n\t\t}\n\n\t\tlet title = d.file_name || d.file_url;\n\t\ttitle = title.slice(0, 60);\n\t\td._title = title;\n\t\td.icon_class = icon_class;\n\t\td._type = type;\n\n\t\td.subject_html = `\n\t\t\t${frappe.utils.icon(icon_class)}\n\t\t\t<span>${title}</span>\n\t\t\t${d.is_private ? '<i class=\"fa fa-lock fa-fw text-warning\"></i>' : \"\"}\n\t\t`;\n\t\treturn d;\n\t}\n\n\tbefore_render() {\n\t\tsuper.before_render();\n\t\tfrappe.model.user_settings.save(\n\t\t\t\"File\",\n\t\t\t\"grid_view\",\n\t\t\tfrappe.views.FileView.grid_view\n\t\t);\n\t\tthis.save_view_user_settings({\n\t\t\tlast_folder: this.current_folder\n\t\t});\n\t}\n\n\trender() {\n\t\tthis.$result.empty().removeClass(\"file-grid-view\");\n\t\tif (frappe.views.FileView.grid_view) {\n\t\t\tthis.render_grid_view();\n\t\t} else {\n\t\t\tsuper.render();\n\t\t\tthis.render_header();\n\t\t}\n\t}\n\n\tafter_render() {}\n\n\trender_list() {\n\t\tif (frappe.views.FileView.grid_view) {\n\t\t\tthis.render_grid_view();\n\t\t} else {\n\t\t\tsuper.render_list();\n\t\t}\n\t}\n\n\trender_grid_view() {\n\t\tlet html = this.data\n\t\t\t.map(d => {\n\t\t\t\tconst icon_class = d.icon_class + \"-large\";\n\t\t\t\tlet file_body_html =\n\t\t\t\t\td._type == \"image\"\n\t\t\t\t\t\t? `<div class=\"file-image\"><img src=\"${\n\t\t\t\t\t\t\td.file_url\n\t\t\t\t\t\t}\" alt=\"${d.file_name}\"></div>`\n\t\t\t\t\t\t: frappe.utils.icon(icon_class, {\n\t\t\t\t\t\t\twidth: \"40px\",\n\t\t\t\t\t\t\theight: \"45px\"\n\t\t\t\t\t\t});\n\t\t\t\tconst name = escape(d.name);\n\t\t\t\tconst draggable = d.type == \"Folder\" ? false : true;\n\t\t\t\treturn `\n\t\t\t\t<a href=\"${this.get_route_url(d)}\"\n\t\t\t\t\tdraggable=\"${draggable}\" class=\"file-wrapper ellipsis\" data-name=\"${name}\">\n\t\t\t\t\t<div class=\"file-header\">\n\t\t\t\t\t\t<input class=\"level-item list-row-checkbox hidden-xs\" type=\"checkbox\" data-name=\"${name}\">\n\t\t\t\t\t</div>\n\t\t\t\t\t<div class=\"file-body\">\n\t\t\t\t\t\t${file_body_html}\n\t\t\t\t\t</div>\n\t\t\t\t\t<div class=\"file-footer\">\n\t\t\t\t\t\t<div class=\"file-title ellipsis\">${d._title}</div>\n\t\t\t\t\t\t<div class=\"file-creation\">${this.get_creation_date(d)}</div>\n\t\t\t\t\t</div>\n\t\t\t\t</a>\n\t\t\t`;\n\t\t\t})\n\t\t\t.join(\"\");\n\n\t\tthis.$result.addClass(\"file-grid-view\");\n\t\tthis.$result.empty().html(\n\t\t\t`<div class=\"file-grid\">\n\t\t\t\t${html}\n\t\t\t</div>`\n\t\t);\n\t}\n\n\tget_breadcrumbs_html() {\n\t\tconst route = frappe.router.parse();\n\t\tconst folders = route.slice(2);\n\n\t\treturn folders\n\t\t\t.map((folder, i) => {\n\t\t\t\tif (i === folders.length - 1) {\n\t\t\t\t\treturn `<span>${folder}</span>`;\n\t\t\t\t}\n\t\t\t\tconst route = folders.reduce((acc, curr, j) => {\n\t\t\t\t\tif (j <= i) {\n\t\t\t\t\t\tacc += \"/\" + curr;\n\t\t\t\t\t}\n\t\t\t\t\treturn acc;\n\t\t\t\t}, \"/app/file/view\");\n\n\t\t\t\treturn `<a href=\"${route}\">${folder}</a>`;\n\t\t\t})\n\t\t\t.join(\"&nbsp;/&nbsp;\");\n\t}\n\n\tget_header_html() {\n\t\tconst breadcrumbs_html = this.get_breadcrumbs_html();\n\n\t\tlet header_selector_html = !frappe.views.FileView.grid_view\n\t\t\t? `<input class=\"level-item list-check-all hidden-xs\" type=\"checkbox\" title=\"${__(\n\t\t\t\t\"Select All\"\n\t\t\t)}\">`\n\t\t\t: \"\";\n\n\t\tlet header_columns_html = !frappe.views.FileView.grid_view\n\t\t\t? `<div class=\"list-row-col ellipsis hidden-xs\">\n\t\t\t\t\t<span>${__(\"Size\")}</span>\n\t\t\t\t</div>\n\t\t\t\t<div class=\"list-row-col ellipsis hidden-xs\">\n\t\t\t\t\t<span>${__(\"Created\")}</span>\n\t\t\t\t</div>`\n\t\t\t: \"\";\n\n\t\tlet subject_html = `\n\t\t\t<div class=\"list-row-col list-subject level\">\n\t\t\t\t${header_selector_html}\n\t\t\t\t<span class=\"level-item\">${breadcrumbs_html}</span>\n\t\t\t</div>\n\t\t\t${header_columns_html}\n\t\t`;\n\n\t\treturn this.get_header_html_skeleton(\n\t\t\tsubject_html,\n\t\t\t'<span class=\"list-count\"></span>'\n\t\t);\n\t}\n\n\tget_route_url(file) {\n\t\treturn file.is_folder\n\t\t\t? \"/app/List/File/\" + file.name\n\t\t\t: this.get_form_link(file);\n\t}\n\n\tget_creation_date(file) {\n\t\tconst [date] = file.creation.split(\" \");\n\t\tlet created_on;\n\t\tif (date === frappe.datetime.now_date()) {\n\t\t\tcreated_on = comment_when(file.creation);\n\t\t} else {\n\t\t\tcreated_on = frappe.datetime.str_to_user(date);\n\t\t}\n\t\treturn created_on;\n\t}\n\n\tget_left_html(file) {\n\t\tfile = this.prepare_datum(file);\n\t\tconst file_size = file.file_size\n\t\t\t? frappe.form.formatters.FileSize(file.file_size)\n\t\t\t: \"\";\n\t\tconst route_url = this.get_route_url(file);\n\n\t\treturn `\n\t\t\t<div class=\"list-row-col ellipsis list-subject level\">\n\t\t\t\t<span class=\"level-item file-select\">\n\t\t\t\t\t<input class=\"list-row-checkbox\"\n\t\t\t\t\t\ttype=\"checkbox\" data-name=\"${file.name}\">\n\t\t\t\t</span>\n\t\t\t\t<span class=\"level-item  ellipsis\" title=\"${file.file_name}\">\n\t\t\t\t\t<a class=\"ellipsis\" href=\"${route_url}\" title=\"${file.file_name}\">\n\t\t\t\t\t\t${file.subject_html}\n\t\t\t\t\t</a>\n\t\t\t\t</span>\n\t\t\t</div>\n\t\t\t<div class=\"list-row-col ellipsis hidden-xs text-muted\">\n\t\t\t\t<span>${file_size}</span>\n\t\t\t</div>\n\t\t\t<div class=\"list-row-col ellipsis hidden-xs text-muted\">\n\t\t\t\t<span>${this.get_creation_date(file)}</span>\n\t\t\t</div>\n\t\t`;\n\t}\n\n\tget_right_html(file) {\n\t\treturn `\n\t\t\t<div class=\"level-item list-row-activity\">\n\t\t\t\t${comment_when(file.modified)}\n\t\t\t</div>\n\t\t`;\n\t}\n\n\tsetup_events() {\n\t\tsuper.setup_events();\n\t\tthis.setup_drag_events();\n\t}\n\n\tsetup_drag_events() {\n\t\tthis.$result.on(\"dragstart\", \".files .file-wrapper\", e => {\n\t\t\te.stopPropagation();\n\t\t\te.originalEvent.dataTransfer.setData(\n\t\t\t\t\"Text\",\n\t\t\t\t$(e.currentTarget).attr(\"data-name\")\n\t\t\t);\n\t\t\te.target.style.opacity = \"0.4\";\n\t\t\tfrappe.file_manager.cut(\n\t\t\t\t[{ name: $(e.currentTarget).attr(\"data-name\") }],\n\t\t\t\tthis.current_folder\n\t\t\t);\n\t\t});\n\n\t\tthis.$result.on(\n\t\t\t\"dragover\",\n\t\t\te => {\n\t\t\t\te.preventDefault();\n\t\t\t},\n\t\t\tfalse\n\t\t);\n\n\t\tthis.$result.on(\"dragend\", \".files .file-wrapper\", e => {\n\t\t\te.preventDefault();\n\t\t\te.stopPropagation();\n\t\t\te.target.style.opacity = \"1\";\n\t\t});\n\n\t\tthis.$result.on(\"drop\", e => {\n\t\t\te.stopPropagation();\n\t\t\te.preventDefault();\n\t\t\tconst $el = $(e.target).parents(\".file-wrapper\");\n\n\t\t\tlet dataTransfer = e.originalEvent.dataTransfer;\n\t\t\tif (!dataTransfer) return;\n\n\t\t\tif (dataTransfer.files && dataTransfer.files.length > 0) {\n\t\t\t\tnew frappe.ui.FileUploader({\n\t\t\t\t\tfiles: dataTransfer.files,\n\t\t\t\t\tfolder: this.current_folder\n\t\t\t\t});\n\t\t\t} else if (dataTransfer.getData(\"Text\")) {\n\t\t\t\tif ($el.parents(\".folders\").length !== 0) {\n\t\t\t\t\tconst file_name = dataTransfer.getData(\"Text\");\n\t\t\t\t\tconst folder_name = decodeURIComponent(\n\t\t\t\t\t\t$el.attr(\"data-name\")\n\t\t\t\t\t);\n\t\t\t\t\tfrappe.file_manager.paste(folder_name);\n\t\t\t\t\tfrappe.show_alert(\n\t\t\t\t\t\t`File ${file_name} moved to ${folder_name}`\n\t\t\t\t\t);\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\t}\n\n\ttoggle_result_area() {\n\t\tsuper.toggle_result_area();\n\t\tthis.toggle_cut_paste_buttons();\n\t}\n\n\ton_row_checked() {\n\t\tsuper.on_row_checked();\n\t\tthis.toggle_cut_paste_buttons();\n\t}\n\n\ttoggle_cut_paste_buttons() {\n\t\tconst hide_paste_btn =\n\t\t\t!frappe.file_manager.can_paste ||\n\t\t\tfrappe.file_manager.old_folder === this.current_folder;\n\t\tconst hide_cut_btn = !(this.$checks && this.$checks.length > 0);\n\n\t\tthis.$paste_btn.toggle(!hide_paste_btn);\n\t\tthis.$cut_button.toggle(!hide_cut_btn);\n\t}\n};\n\nfrappe.views.FileView.grid_view =\n\tfrappe.get_user_settings(\"File\").grid_view || false;\n\nfunction redirect_to_home_if_invalid_route() {\n\tconst route = frappe.get_route();\n\tif (route[2] === \"List\") {\n\t\t// if the user somehow redirects to List/File/List\n\t\t// redirect back to Home\n\t\tfrappe.set_route(\"List\", \"File\", \"Home\");\n\t\treturn true;\n\t}\n\treturn false;\n}\n", "import \"./frappe/ui/listing.html\";\n\nimport \"./frappe/model/indicator.js\";\nimport \"./frappe/ui/filters/filter.js\";\nimport \"./frappe/ui/filters/filter_list.js\";\nimport \"./frappe/ui/filters/field_select.js\";\nimport \"./frappe/ui/filters/edit_filter.html\";\nimport \"./frappe/ui/tags.js\";\nimport \"./frappe/ui/tag_editor.js\";\nimport \"./frappe/ui/like.js\";\n// import \"./frappe/ui/liked_by.html\";\nimport \"../html/print_template.html\";\n\nimport \"./frappe/list/base_list.js\";\nimport \"./frappe/list/list_view.js\";\nimport \"./frappe/list/list_factory.js\";\n\nimport \"./frappe/list/list_view_select.js\";\nimport \"./frappe/list/list_sidebar.js\";\nimport \"./frappe/list/list_sidebar.html\";\nimport \"./frappe/list/list_sidebar_stat.html\";\nimport \"./frappe/list/list_sidebar_group_by.js\";\nimport \"./frappe/list/list_view_permission_restrictions.html\";\n\nimport \"./frappe/views/gantt/gantt_view.js\";\nimport \"./frappe/views/calendar/calendar.js\";\nimport \"./frappe/views/dashboard/dashboard_view.js\";\nimport \"./frappe/views/image/image_view.js\";\nimport \"./frappe/views/map/map_view.js\";\nimport \"./frappe/views/kanban/kanban_view.js\";\nimport \"./frappe/views/inbox/inbox_view.js\";\nimport \"./frappe/views/file/file_view.js\";\n\nimport \"./frappe/views/treeview.js\";\nimport \"./frappe/views/interaction.js\";\n\nimport \"./frappe/views/image/image_view_item_row.html\";\nimport \"./frappe/views/image/photoswipe_dom.html\";\n\nimport \"./frappe/views/kanban/kanban_board.html\";\nimport \"./frappe/views/kanban/kanban_column.html\";\nimport \"./frappe/views/kanban/kanban_card.html\";\n", "// Copyright (c) 2018, Frappe Technologies Pvt. Ltd. and Contributors\n// MIT License. See license.txt\nfrappe.provide('frappe.views');\nfrappe.provide(\"frappe.interaction_settings\");\n\nfrappe.views.InteractionComposer = class InteractionComposer {\n\tconstructor(opts) {\n\t\t$.extend(this, opts);\n\t\tthis.make();\n\t}\n\n\tmake() {\n\t\tlet me = this;\n\t\tme.dialog = new frappe.ui.Dialog({\n\t\t\ttitle: (me.title || me.subject || __(\"New Activity\")),\n\t\t\tno_submit_on_enter: true,\n\t\t\tfields: me.get_fields(),\n\t\t\tprimary_action_label: __('Create'),\n\t\t\tprimary_action: function() {\n\t\t\t\tme.create_action();\n\t\t\t}\n\t\t});\n\n\t\t$(document).on(\"upload_complete\", function(event, attachment) {\n\t\t\tif(me.dialog.display) {\n\t\t\t\tlet wrapper = $(me.dialog.fields_dict.select_attachments.wrapper);\n\n\t\t\t\t// find already checked items\n\t\t\t\tlet checked_items = wrapper.find('[data-file-name]:checked').map(function() {\n\t\t\t\t\treturn $(this).attr(\"data-file-name\");\n\t\t\t\t});\n\n\t\t\t\t// reset attachment list\n\t\t\t\tme.render_attach();\n\n\t\t\t\t// check latest added\n\t\t\t\tchecked_items.push(attachment.name);\n\n\t\t\t\t$.each(checked_items, function(i, filename) {\n\t\t\t\t\twrapper.find('[data-file-name=\"'+ filename +'\"]').prop(\"checked\", true);\n\t\t\t\t});\n\t\t\t}\n\t\t});\n\t\tme.prepare();\n\t\tme.dialog.show();\n\t}\n\n\tget_fields() {\n\t\tlet me = this;\n\t\tlet interaction_docs = Object.keys(get_doc_mappings());\n\n\t\tlet fields = [\n\t\t\t{label:__(\"Reference\"), fieldtype:\"Select\",\n\t\t\t\tfieldname:\"interaction_type\", options: interaction_docs,\n\t\t\t\treqd: 1,\n\t\t\t\tonchange: () => {\n\t\t\t\t\tlet values = me.get_values();\n\t\t\t\t\tme.get_fields().forEach(field => {\n\t\t\t\t\t\tif (field.fieldname != \"interaction_type\") {\n\t\t\t\t\t\t\tme.dialog.set_df_property(field.fieldname, \"reqd\", 0);\n\t\t\t\t\t\t\tme.dialog.set_df_property(field.fieldname, \"hidden\", 0);\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\t\t\t\t\tme.set_reqd_hidden_fields(values);\n\t\t\t\t\tme.get_event_categories();\n\t\t\t\t}\n\t\t\t},\n\t\t\t{label:__(\"Category\"), fieldtype:\"Select\",\n\t\t\t\tfieldname:\"category\", options: \"\", hidden: 1},\n\t\t\t{label:__(\"Public\"), fieldtype:\"Check\",\n\t\t\t\tfieldname:\"public\", default: \"1\"},\n\t\t\t{fieldtype: \"Column Break\"},\n\t\t\t{label:__(\"Date\"), fieldtype:\"Datetime\",\n\t\t\t\tfieldname:\"due_date\"},\n\t\t\t{label:__(\"Assigned To\"), fieldtype:\"Link\",\n\t\t\t\tfieldname:\"assigned_to\", options:\"User\"},\n\t\t\t{fieldtype: \"Section Break\"},\n\t\t\t{label:__(\"Summary\"), fieldtype:\"Data\",\n\t\t\t\tfieldname:\"summary\"},\n\t\t\t{fieldtype: \"Section Break\"},\n\t\t\t{fieldtype:\"Text Editor\", fieldname:\"description\"},\n\t\t\t{fieldtype: \"Section Break\"},\n\t\t\t{label:__(\"Select Attachments\"), fieldtype:\"HTML\",\n\t\t\t\tfieldname:\"select_attachments\"}\n\t\t];\n\n\t\treturn fields;\n\n\t}\n\n\tget_event_categories() {\n\t\tlet me = this;\n\t\tfrappe.model.with_doctype('Event', () => {\n\t\t\tlet categories = frappe.meta.get_docfield(\"Event\", \"event_category\").options.split(\"\\n\");\n\t\t\tme.dialog.get_input(\"category\").empty().add_options(categories);\n\t\t});\n\t}\n\n\tprepare() {\n\t\tthis.setup_attach();\n\t}\n\n\tset_reqd_hidden_fields(values) {\n\t\tlet me = this;\n\t\tif (values&&\"interaction_type\" in values) {\n\t\t\tlet doc_mapping = get_doc_mappings();\n\t\t\tdoc_mapping[values.interaction_type][\"reqd_fields\"].forEach(value => {\n\t\t\t\tme.dialog.set_df_property(value, 'reqd', 1);\n\t\t\t});\n\n\t\t\tdoc_mapping[values.interaction_type][\"hidden_fields\"].forEach(value => {\n\t\t\t\tme.dialog.set_df_property(value, 'hidden', 1);\n\t\t\t});\n\t\t}\n\t}\n\n\tsetup_attach() {\n\t\tvar fields = this.dialog.fields_dict;\n\t\tvar attach = $(fields.select_attachments.wrapper);\n\n\t\tif (!this.attachments) {\n\t\t\tthis.attachments = [];\n\t\t}\n\n\t\tlet args = {\n\t\t\tfolder: 'Home/Attachments',\n\t\t\ton_success: attachment => this.attachments.push(attachment)\n\t\t};\n\n\t\tif (this.frm) {\n\t\t\targs = {\n\t\t\t\tdoctype: this.frm.doctype,\n\t\t\t\tdocname: this.frm.docname,\n\t\t\t\tfolder: 'Home/Attachments',\n\t\t\t\ton_success: attachment => {\n\t\t\t\t\tthis.frm.attachments.attachment_uploaded(attachment);\n\t\t\t\t\tthis.render_attach();\n\t\t\t\t}\n\t\t\t};\n\t\t}\n\n\t\t$(\"<h6 class='text-muted add-attachment' style='margin-top: 12px; cursor:pointer;'>\"\n\t\t\t+__(\"Select Attachments\")+\"</h6><div class='attach-list'></div>\\\n\t\t\t<p class='add-more-attachments'>\\\n\t\t\t<a class='text-muted small'><i class='octicon octicon-plus' style='font-size: 12px'></i> \"\n\t\t\t+__(\"Add Attachment\")+\"</a></p>\").appendTo(attach.empty());\n\t\tattach\n\t\t\t.find(\".add-more-attachments a\")\n\t\t\t.on('click',() => new frappe.ui.FileUploader(args));\n\t\tthis.render_attach();\n\t}\n\n\trender_attach(){\n\t\tlet fields = this.dialog.fields_dict;\n\t\tlet attach = $(fields.select_attachments.wrapper).find(\".attach-list\").empty();\n\n\t\tlet files = [];\n\t\tif (this.attachments && this.attachments.length) {\n\t\t\tfiles = files.concat(this.attachments);\n\t\t}\n\t\tif (cur_frm) {\n\t\t\tfiles = files.concat(cur_frm.get_files());\n\t\t}\n\n\t\tif(files.length) {\n\t\t\t$.each(files, function(i, f) {\n\t\t\t\tif (!f.file_name) return;\n\t\t\t\tf.file_url = frappe.urllib.get_full_url(f.file_url);\n\n\t\t\t\t$(repl('<p class=\"checkbox\">'\n\t\t\t\t\t+\t'<label><span><input type=\"checkbox\" data-file-name=\"%(name)s\"></input></span>'\n\t\t\t\t\t+\t\t'<span class=\"small\">%(file_name)s</span>'\n\t\t\t\t\t+\t' <a href=\"%(file_url)s\" target=\"_blank\" class=\"text-muted small\">'\n\t\t\t\t\t+\t\t'<i class=\"fa fa-share\" style=\"vertical-align: middle; margin-left: 3px;\"></i>'\n\t\t\t\t\t+ '</label></p>', f))\n\t\t\t\t\t.appendTo(attach);\n\t\t\t});\n\t\t}\n\t}\n\n\tcreate_action() {\n\t\tlet me = this;\n\t\tlet btn = me.dialog.get_primary_btn();\n\n\t\tlet form_values = this.get_values();\n\t\tif(!form_values) return;\n\n\t\tlet selected_attachments =\n\t\t\t$.map($(me.dialog.wrapper).find(\"[data-file-name]:checked\"), function(element){\n\t\t\t\treturn $(element).attr(\"data-file-name\");\n\t\t\t});\n\n\t\tme.create_interaction(btn, form_values, selected_attachments);\n\t}\n\n\tget_values() {\n\t\tlet me = this;\n\t\tlet values = this.dialog.get_values(true);\n\t\tif (values) {\n\t\t\tvalues[\"reference_doctype\"] = me.frm.doc.doctype;\n\t\t\tvalues[\"reference_document\"] = me.frm.doc.name;\n\t\t}\n\n\t\treturn values;\n\t}\n\n\tcreate_interaction(btn, form_values, selected_attachments) {\n\t\tlet me = this;\n\t\tme.dialog.hide();\n\n\t\tlet field_map = get_doc_mappings();\n\t\tlet interaction_values = {};\n\t\tObject.keys(form_values).forEach(value => {\n\t\t\tinteraction_values[field_map[form_values.interaction_type][\"field_map\"][value]] = form_values[value];\n\t\t});\n\n\t\tif (\"event_type\" in interaction_values){\n\t\t\tinteraction_values[\"event_type\"] = (form_values.public == 1) ? \"Public\" : \"Private\";\n\t\t}\n\t\tif (interaction_values[\"doctype\"] == \"Event\") {\n\t\t\tinteraction_values[\"event_participants\"] = [{\"reference_doctype\": form_values.reference_doctype,\n\t\t\t\t\"reference_docname\": form_values.reference_document}];\n\t\t}\n\t\tif (!(\"owner\" in interaction_values)){\n\t\t\tinteraction_values[\"owner\"] = frappe.session.user;\n\t\t}\n\t\tif (!(\"assigned_by\" in interaction_values) && interaction_values[\"doctype\"] == \"ToDo\") {\n\t\t\tinteraction_values[\"assigned_by\"] = frappe.session.user;\n\t\t}\n\t\treturn frappe.call({\n\t\t\tmethod:\"frappe.client.insert\",\n\t\t\targs: { doc: interaction_values},\n\t\t\tbtn: btn,\n\t\t\tcallback: function(r) {\n\t\t\t\tif(!r.exc) {\n\t\t\t\t\tfrappe.show_alert({\n\t\t\t\t\t\tmessage: __(\"{0} created successfully\", [form_values.interaction_type]),\n\t\t\t\t\t\tindicator: 'green'\n\t\t\t\t\t});\n\t\t\t\t\tif (\"assigned_to\" in form_values) {\n\t\t\t\t\t\tme.assign_document(r.message, form_values[\"assigned_to\"]);\n\t\t\t\t\t}\n\n\t\t\t\t\tif (selected_attachments) {\n\t\t\t\t\t\tme.add_attachments(r.message, selected_attachments);\n\t\t\t\t\t}\n\t\t\t\t\tif (cur_frm) {\n\t\t\t\t\t\tcur_frm.reload_doc();\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tfrappe.msgprint(__(\"There were errors while creating the document. Please try again.\"));\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\n\t}\n\n\tassign_document(doc, assignee) {\n\t\tif (doc.doctype != \"ToDo\") {\n\t\t\tfrappe.call({\n\t\t\t\tmethod:'frappe.desk.form.assign_to.add',\n\t\t\t\targs: {\n\t\t\t\t\tdoctype: doc.doctype,\n\t\t\t\t\tname: doc.name,\n\t\t\t\t\tassign_to: JSON.stringify([assignee]),\n\t\t\t\t},\n\t\t\t\tcallback:function(r) {\n\t\t\t\t\tif(!r.exc) {\n\t\t\t\t\t\tfrappe.show_alert({\n\t\t\t\t\t\t\tmessage: __(\"The document has been assigned to {0}\", [assignee]),\n\t\t\t\t\t\t\tindicator: 'green'\n\t\t\t\t\t\t});\n\t\t\t\t\t\treturn;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tfrappe.show_alert({\n\t\t\t\t\t\t\tmessage: __(\"The document could not be correctly assigned\"),\n\t\t\t\t\t\t\tindicator: 'orange'\n\t\t\t\t\t\t});\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\n\t}\n\n\tadd_attachments(doc, attachments) {\n\t\tfrappe.call({\n\t\t\tmethod:'frappe.utils.file_manager.add_attachments',\n\t\t\targs: {\n\t\t\t\tdoctype: doc.doctype,\n\t\t\t\tname: doc.name,\n\t\t\t\tattachments: JSON.stringify(attachments)\n\t\t\t},\n\t\t\tcallback:function(r) {\n\t\t\t\tif(!r.exc) {\n\t\t\t\t\treturn;\n\t\t\t\t} else {\n\t\t\t\t\tfrappe.show_alert({\n\t\t\t\t\t\tmessage: __(\"The attachments could not be correctly linked to the new document\"),\n\t\t\t\t\t\tindicator: 'orange'\n\t\t\t\t\t});\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\n\t}\n};\n\nfunction get_doc_mappings() {\n\tconst doc_map = {\n\t\t\"Event\": {\n\t\t\t\"field_map\": {\n\t\t\t\t\"interaction_type\": \"doctype\",\n\t\t\t\t\"summary\": \"subject\",\n\t\t\t\t\"description\": \"description\",\n\t\t\t\t\"category\": \"event_category\",\n\t\t\t\t\"due_date\": \"starts_on\",\n\t\t\t\t\"public\": \"event_type\"\n\t\t\t},\n\t\t\t\"reqd_fields\": [\"summary\", \"due_date\"],\n\t\t\t\"hidden_fields\": []\n\t\t} ,\n\t\t\"ToDo\": {\n\t\t\t\"field_map\": {\n\t\t\t\t\"interaction_type\": \"doctype\",\n\t\t\t\t\"description\": \"description\",\n\t\t\t\t\"due_date\": \"date\",\n\t\t\t\t\"reference_doctype\": \"reference_type\",\n\t\t\t\t\"reference_document\": \"reference_name\",\n\t\t\t\t\"assigned_to\": \"owner\"\n\t\t\t},\n\t\t\t\"reqd_fields\": [\"description\"],\n\t\t\t\"hidden_fields\": [\"public\", \"category\"]\n\t\t}\n\t};\n\n\treturn doc_map;\n}\n", "\n\tfrappe.templates['image_view_item_row'] = `<div class=\"image-view-item has-checkbox ellipsis\">\n\t<div class=\"image-view-header doclist-row\">\n\t\t<div class=\"list-value\">\n\t\t{{ subject }}\n\t\t</div>\n\t</div>\n\t<!-- Image -->\n\t<div class=\"image-view-body\">\n\t\t<a  data-name=\"{{ data.name }}\"\n\t\t\ttitle=\"{{ data.name }}\"\n\t\t\thref=\"/app/Form/{{ data.doctype }}/{{ data.name }}\"\n\t\t>\n\t\t\t<div class=\"image-field\"\n\t\t\t\tdata-name=\"{{ data.name }}\"\n\t\t\t\tstyle=\"\n\t\t\t\t{% if (!data._image_url) { %}\n\t\t\t\t\tbackground-color: {{ color }};\n\t\t\t\t{% } %}\n\t\t\t\tborder: 0px;\"\n\t\t\t>\n\t\t\t\t{% if (!data._image_url) { %}\n\t\t\t\t<span class=\"placeholder-text\">\n\t\t\t\t\t{%= frappe.get_abbr(data._title) %}\n\t\t\t\t</span>\n\t\t\t\t{% } %}\n\t\t\t\t{% if (data._image_url) { %}\n\t\t\t\t<img data-name=\"{{ data.name }}\" src=\"{{ data._image_url }}\" alt=\"{{data.title}}\">\n\t\t\t\t{% } %}\n\t\t\t\t<button class=\"btn btn-default zoom-view\" data-name=\"{{data.name}}\">\n\t\t\t\t\t<i class=\"fa fa-search-plus\"></i>\n\t\t\t\t</button>\n\t\t\t</div>\n\t\t</a>\n\t</div>\n</div>\n`;\n", "\n\tfrappe.templates['photoswipe_dom'] = `\n\n<!-- http://photoswipe.com/documentation/getting-started.html -->\n<!-- Root element of PhotoSwipe. -->\n<div class=\"pswp\" tabindex=\"-1\" role=\"dialog\" aria-hidden=\"true\">\n\n\t<!-- Background of PhotoSwipe.\n\t\t It's a separate element as animating opacity is faster than rgba(). -->\n\t<div class=\"pswp__bg\"></div>\n\n\t<!-- Slides wrapper with overflow:hidden. -->\n\t<div class=\"pswp__scroll-wrap\">\n\n\t\t<!-- Container that holds slides.\n\t\t\tPhotoSwipe keeps only 3 of them in the DOM to save memory.\n\t\t\tDon't modify these 3 pswp__item elements, data is added later on. -->\n\t\t<div class=\"pswp__container\">\n\t\t\t<div class=\"pswp__item\"></div>\n\t\t\t<div class=\"pswp__item\"></div>\n\t\t\t<div class=\"pswp__item\"></div>\n\t\t</div>\n\n\t\t<div class=\"pswp__more-items\">\n\n\t\t</div>\n\n\t\t<!-- Default (PhotoSwipeUI_Default) interface on top of sliding area. Can be changed. -->\n\t\t<div class=\"pswp__ui pswp__ui--hidden\">\n\n\t\t\t<div class=\"pswp__top-bar\">\n\n\t\t\t\t<!--  Controls are self-explanatory. Order can be changed. -->\n\n\t\t\t\t<div class=\"pswp__counter\"></div>\n\n\t\t\t\t<button class=\"pswp__button pswp__button--close\" title=\"Close (Esc)\"></button>\n\n\t\t\t\t<button class=\"pswp__button pswp__button--share\" title=\"Share\"></button>\n\n\t\t\t\t<button class=\"pswp__button pswp__button--fs\" title=\"Toggle fullscreen\"></button>\n\n\t\t\t\t<button class=\"pswp__button pswp__button--zoom\" title=\"Zoom in/out\"></button>\n\n\t\t\t\t<!-- Preloader demo http://codepen.io/dimsemenov/pen/yyBWoR -->\n\t\t\t\t<!-- element will get class pswp__preloader--active when preloader is running -->\n\t\t\t\t<div class=\"pswp__preloader\">\n\t\t\t\t\t<div class=\"pswp__preloader__icn\">\n\t\t\t\t\t  <div class=\"pswp__preloader__cut\">\n\t\t\t\t\t\t<div class=\"pswp__preloader__donut\"></div>\n\t\t\t\t\t  </div>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</div>\n\n\t\t\t<div class=\"pswp__share-modal pswp__share-modal--hidden pswp__single-tap\">\n\t\t\t\t<div class=\"pswp__share-tooltip\"></div>\n\t\t\t</div>\n\n\t\t\t<button class=\"pswp__button pswp__button--arrow--left\" title=\"Previous (arrow left)\">\n\t\t\t</button>\n\n\t\t\t<button class=\"pswp__button pswp__button--arrow--right\" title=\"Next (arrow right)\">\n\t\t\t</button>\n\n\t\t\t<div class=\"pswp__caption\">\n\t\t\t\t<div class=\"pswp__caption__center\"></div>\n\t\t\t</div>\n\n\t\t</div>\n\n\t</div>\n\n</div>`;\n", "\n\tfrappe.templates['kanban_board'] = `<div class=\"kanban\">\n\t<div class=\"kanban-column add-new-column\">\n\t\t<div class=\"kanban-column-title compose-column\">\n\t\t\t<a> + {{ __(\"Add Column\") }}</a>\n\t\t</div>\n\t\t<form class=\"compose-column-form kanban-column-title\">\n\t\t\t<input class=\"new-column-title\" name=\"title\" type=\"text\" autocomplete=\"off\">\n\t\t</form>\n\t</div>\n\t<div class=\"kanban-empty-state text-muted text-center\" style=\"display: none;\">\n\t\t{{ __(\"Loading...\") }}\n\t</div>\n</div>`;\n", "\n\tfrappe.templates['kanban_column'] = `<div class=\"kanban-column\" data-column-value=\"{{title}}\">\n\t<div class=\"kanban-column-header\">\n\t\t<span class=\"kanban-column-title\">\n\t\t\t<span class=\"indicator-pill {{indicator}}\"></span>\n\t\t\t<span class=\"kanban-title ellipsis\" title=\"{{title}}\">{{ __(title) }}</span>\n\t\t</span>\n\t\t<div class=\"column-options dropdown pull-right\">\n\t\t\t<a data-toggle=\"dropdown\" aria-haspopup=\"true\" aria-expanded=\"false\">\n\t\t\t\t<svg class=\"icon icon-sm\">\n\t\t\t\t\t<use href=\"#icon-dot-horizontal\"></use>\n\t\t\t\t</svg>\n\t\t\t</a>\n\t\t\t<ul class=\"dropdown-menu\" style=\"max-height: 300px; overflow-y: auto;\">\n\t\t\t\t<li><a class=\"dropdown-item\" data-action=\"archive\">{{ __(\"Archive\") }}</a></li>\n\t\t\t</ul>\n\t\t</div>\n\t</div>\n\t<div class=\"add-card\">\n\t\t<div class=\"ellipsis\">\n\t\t\t+ {{ __(\"Add {0}\", [__(doctype)]) }}\n\t\t</div>\n\t</div>\n\t<div class=\"kanban-card new-card-area\">\n\t\t<textarea name=\"title\"></textarea>\n\t</div>\n\t<div class=\"kanban-cards\">\n\t</div>\n</div>`;\n", "\n\tfrappe.templates['kanban_card'] = `<div class=\"kanban-card-wrapper {{ disable_click }}\" data-name=\"{{encodeURIComponent(name)}}\">\n\t<div class=\"kanban-card content\">\n\t\t{% if(image_url) { %}\n\t\t<div class=\"kanban-image\">\n\t\t\t<img  src=\"{{image_url}}\" alt=\"{{title}}\">\n\t\t</div>\n\t\t{% } %}\n\t\t<div class=\"kanban-card-body\">\n\t\t\t<div class=\"kanban-title-area\">\n\t\t\t\t<a href=\"{{ form_link }}\">\n\t\t\t\t\t<div class=\"kanban-card-title ellipsis\" title=\"{{title}}\">\n\t\t\t\t\t\t{{ title }}\n\t\t\t\t\t</div>\n\t\t\t\t</a>\n\t\t\t\t<br>\n\t\t\t\t<div class=\"kanban-card-doc text-muted\">\n\t\t\t\t\t{{ doc_content }}\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t\t<div class=\"kanban-card-meta\">\n\t\t\t</div>\n\t\t</div>\n\t</div>\n</div>\n`;\n"],
  "mappings": ";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AAAA;AAGA,aAAO,QAAQ,0BAA0B;AACzC,aAAO,QAAQ,oBAAoB;AACnC,aAAO,WAAW;AAElB,aAAO,MAAM,cAAc,MAAM,oBAAoB,OAAO,MAAM,QAAQ;AAAA,QACzE,KAAK,OAAO;AACX,iBAAO,MAAM,aAAa,MAAM,IAAI,WAAW;AAC9C,gBAAI,UAAU;AAAA,cACb,SAAS,MAAM;AAAA,cACf,MAAM,OAAO,SAAS,MAAM,EAAE;AAAA,YAC/B;AAEA,gBAAI,CAAC,OAAO,kBAAkB,MAAM,OAAO,CAAC,OAAO,KAAK,aAAa,MAAM,IAAI,UAAU,GAAG;AAC3F,qBAAO,SAAS,GAAG,sCAAsC,CAAC,MAAM,EAAE,CAAE,CAAC;AACrE,qBAAO;AAAA,YACR;AACA,cAAE,OAAO,SAAS,OAAO,kBAAkB,MAAM,OAAO,CAAC,CAAC;AAC1D,mBAAO,MAAM,MAAM,QAAQ,WAAW,IAAI,OAAO,MAAM,SAAS,OAAO;AAAA,UACxE,CAAC;AAAA,QACF;AAAA,QAEA,UAAU;AAQT,cAAI,QAAQ,OAAO,UAAU;AAC7B,cAAI,WAAW,OAAO,MAAM,MAAM,MAAM;AACxC,sBAAY,SAAS,UAAU;AAAA,QAChC;AAAA,MACD;AAEA,aAAO,MAAM,WAAW,MAAM,SAAS;AAAA,QACtC,YAAY,MAAM;AACjB,cAAI,MAAK;AAET,eAAK,OAAO,CAAC;AACb,eAAK,KAAK,gBAAgB;AAC1B,eAAK,KAAK,kBAAkB;AAC5B,YAAE,OAAO,KAAK,MAAM,IAAI;AACxB,eAAK,UAAU,KAAK;AACpB,eAAK,OAAO,EAAC,SAAS,IAAG,QAAO;AAChC,eAAK,YAAY,OAAO,cAAc;AACtC,eAAK,iBAAkB,IAAG,KAAK,kBAAkB;AAEjD,eAAK,gBAAgB;AACrB,eAAK,UAAU;AACf,eAAK,aAAa;AAClB,eAAK,aAAa;AAElB,cAAI,IAAG,KAAK,eAAe;AAC1B,iBAAK,SAAS;AAAA,UACf;AAEA,eAAK,OAAO;AACZ,eAAK,cAAc;AACnB,eAAK,mBAAmB;AAAA,QACzB;AAAA,QACA,kBAAiB;AAChB,eAAK,WAAW,OAAO,MAAM,SAAS,KAAK,OAAO;AAClD,eAAK,aAAa,OAAO,KAAK,KAAK,WAAW,QAAQ,KAAK,OAAO,MAAM,MACrE,OAAO,KAAK,KAAK,UAAU,QAAQ,KAAK,OAAO,MAAM;AACxD,eAAK,YAAY,OAAO,MAAM,UAAU,KAAK,OAAO;AACpD,eAAK,aAAa,OAAO,MAAM,WAAW,KAAK,OAAO;AAAA,QACvD;AAAA,QACA,YAAY;AACX,cAAI,MAAK;AACT,eAAK,SAAS,OAAO,UAAU,SAAS,KAAK,SAAS;AACtD,iBAAO,GAAG,cAAc,EAAC,QAAO,KAAK,QAAQ,eAAc,KAAI,CAAC;AAEhE,eAAK,OAAO,KAAK,OAAO;AACxB,iBAAO,UAAU,UAAU,KAAK,SAAS;AACzC,iBAAO,YAAY,IAAI,IAAG,KAAK,cAAc,OAAO,QAAQ,IAAG,SAAS,QAAQ,IAAG,OAAO;AAE1F,eAAK,UAAU;AAEf,eAAK,KAAK,KAAK,IAAI;AAAA,YAClB,cAAc;AAAA,UACf,CAAC;AAED,eAAK,KAAK,KAAK,SAAS,aAAa;AAErC,cAAG,KAAK,KAAK,iBAAiB;AAC7B,iBAAK,KAAK,iBAAiB,GAAG,YAAY,GAAG,WAAW;AACvD,kBAAG,KAAK,cAAc,IAAG,KAAK,WAAW,IAAI;AAAA,YAC9C,CAAC;AAAA,UACF;AAEA,cAAG,KAAK,KAAK,eAAe;AAC3B,gBAAI,MAAM,EAAE,wBAAwB,EAAE,SAAS,KAAK,KAAK,IAAI;AAC7D,iBAAK,OAAO,EAAE,wCAAwC,EAAE,SAAS,GAAG;AACpE,iBAAK,YAAY,EAAE,wCAAwC,EAAE,SAAS,GAAG;AAAA,UAC1E,OAAO;AACN,iBAAK,OAAO,KAAK,KAAK;AAAA,UACvB;AAAA,QACD;AAAA,QACA,YAAY;AACX,eAAK,KAAK,UAAU,KAAK,KAAK,SAAS,GAAG,YAAY,CAAC,GAAG,KAAK,OAAO,CAAC,CAAC,CAAC;AAAA,QAC1E;AAAA,QACA,SAAS;AACR,cAAI,MAAK;AACT,eAAK,KAAK,UAAU,KAAK,KAAK,OAAO,GAAE;AAAA,QACxC;AAAA,QACA,eAAe;AACd,cAAI,MAAK;AACT,iBAAO,kBAAkB,UAAU,CAAC;AACpC,YAAE,KAAK,KAAK,KAAK,WAAW,CAAC,GAAG,SAAS,IAAG,QAAQ;AACnD,gBAAI,OAAO,iBAAiB,OAAO,cAAc,OAAO,YAAY;AACnE,qBAAO,UAAU,OAAO,cAAc,OAAO;AAAA,YAC9C;AAEA,gBAAI,CAAC,OAAO,kBAAkB;AAC7B,qBAAO,SAAS,WAAW;AAC1B,uBAAO,YAAY,OAAO,SAAS;AACnC,oBAAI,MAAM,KAAK,UAAU;AACzB,oBAAG,KAAK,OAAO,aAAa;AAC5B,oBAAI,KAAK;AACR,sBAAG,aAAa;AAAA,gBACjB,OAAO;AACN,sBAAG,aAAa,IAAG,KAAK;AAAA,gBACzB;AACA,oBAAG,UAAU;AACb,oBAAG,UAAU;AAAA,cACd;AAAA,YACD;AAEA,gBAAG,KAAK,UAAU,MAAM;AAExB,gBAAI,OAAO,SAAS;AACnB,gBAAE,sBAAoB,OAAO,YAAU,IAAI,EAAE,QAAQ,QAAQ;AAAA,YAC9D;AAAA,UACD,CAAC;AAAA,QACF;AAAA,QACA,WAAW;AACV,cAAI,MAAK;AACT,iBAAO,KAAK;AAAA,YACX,QAAQ,IAAG;AAAA,YACX,MAAM,IAAG;AAAA,YACT,UAAU,SAAS,GAAG;AACrB,kBAAI,EAAE,SAAS;AACd,oBAAI,EAAE,QAAQ,SAAS,GAAG;AACzB,sBAAG,aAAa,IAAG;AACnB,sBAAG,aAAa;AAAA,gBACjB,OAAO;AACN,sBAAG,aAAa,EAAE,QAAQ,GAAG;AAC7B,sBAAG,aAAa,IAAG;AAAA,gBACpB;AACA,oBAAG,UAAU;AAAA,cACd;AAAA,YACD;AAAA,UACD,CAAC;AAAA,QACF;AAAA,QACA,YAAY;AACX,YAAE,KAAK,MAAM,EAAE,KAAK,OAAO,EAAE,OAAO;AAEpC,cAAI,YAAY,KAAK,KAAK,KAAK,KAAK,eAAe,KAAK,cAAc,KAAK,KAAK;AAChF,cAAI,YAAY,KAAK;AACrB,cAAI,aAAa,MAAM;AACtB,wBAAY;AAAA,UACb;AACA,eAAK,OAAO,IAAI,OAAO,GAAG,KAAK;AAAA,YAC9B,QAAQ,KAAK;AAAA,YACb,OAAO;AAAA,YACP,YAAY;AAAA,YACZ,YAAY;AAAA,YAEZ,MAAM,KAAK;AAAA,YACX,QAAQ,KAAK;AAAA,YAGb,SAAS,KAAK,YAAY;AAAA,YAE1B,WAAW,KAAK,KAAK;AAAA,YACrB,WAAW,KAAK,KAAK;AAAA,YACrB,aAAa,KAAK,KAAK;AAAA,YACvB,UAAU,CAAC,SAAS;AAAE,mBAAK,YAAY,IAAI;AAAA,YAAG;AAAA,UAC/C,CAAC;AAED,qBAAW,KAAK;AAChB,eAAK,YAAY;AAAA,QAClB;AAAA,QAEA,eAAe;AACd,cAAI,MAAK;AAET,iBAAO,KAAK;AAAA,YACX,UAAU;AAAA,YACV,QAAQ;AAAA,cACP,WAAW,IAAG;AAAA,cACd,gBAAgB,YAAU,IAAG,QAAQ,YAAY,EAAE,QAAQ,MAAM,GAAG;AAAA,YACrE;AAAA,YACA,YAAY,SAAS,GAAG;AACvB,kBAAI,CAAC,EAAE,KAAK;AACX,oBAAG,UAAU;AAAA,cACd;AAAA,YACD;AAAA,UACD,CAAC;AAAA,QACF;AAAA,QAEA,cAAc;AACb,cAAI,MAAK;AACT,cAAG,KAAK,eAAe,IAAG,KAAK,YAAY,GAAE;AAAA,QAC9C;AAAA,QAEA,YAAY,MAAM;AACjB,cAAI,MAAK;AACT,cAAG,KAAK,KAAK,OAAO;AACnB,iBAAK,KAAK,MAAM,IAAI;AAAA,UACrB;AACA,cAAG,KAAK,KAAK,eAAe;AAC3B,iBAAK,UAAU,MAAM;AACrB,cAAE,OAAO,gBAAgB,IAAG,KAAK,eAChC,EAAC,MAAK,KAAK,MAAM,SAAQ,IAAG,QAAO,CAAC,CAAC,EAAE,SAAS,KAAK,SAAS;AAAA,UAChE;AAAA,QACD;AAAA,QACA,cAAc;AACb,cAAI,MAAK;AAET,cAAI,UAAU;AAAA,YACb;AAAA,cACC,OAAM,GAAG,IAAG,YAAW,SAAQ,SAAS;AAAA,cACxC,WAAW,SAAS,MAAM;AACzB,uBAAO,CAAC,KAAK,WAAW,IAAG;AAAA,cAC5B;AAAA,cACA,OAAO,SAAS,MAAM;AACrB,uBAAO,UAAU,QAAQ,IAAG,SAAS,KAAK,KAAK;AAAA,cAChD;AAAA,YACD;AAAA,YACA;AAAA,cACC,OAAM,GAAG,WAAW;AAAA,cACpB,WAAW,SAAS,MAAM;AACzB,uBAAO,IAAG,cAAc,KAAK,cAAc,CAAC,KAAK;AAAA,cAClD;AAAA,cACA,OAAO,SAAS,MAAM;AACrB,oBAAG,SAAS;AAAA,cACb;AAAA,cACA,UAAU;AAAA,YACX;AAAA,YACA;AAAA,cACC,OAAM,GAAG,QAAQ;AAAA,cACjB,WAAW,SAAS,MAAM;AACzB,oBAAI,eAAe;AACnB,oBAAI,IAAG,WAAW,OAAO,SAAS,IAAG,OAAO,GAAG;AAC9C,sBAAG,CAAC,OAAO,SAAS,IAAG,OAAO,EAAE;AAAc,mCAAe;AAAA,gBAC9D;AACA,uBAAO,CAAC,KAAK,WAAW,IAAG,aAAa;AAAA,cACzC;AAAA,cACA,OAAO,SAAS,MAAM;AACrB,uBAAO,MAAM,WAAW,IAAG,SAAS,KAAK,OAAO,SAAS,UAAU;AAClE,uBAAK,WAAW,KAAK,GAAG,EAAE,KAAK,QAAQ;AACvC,uBAAK,QAAQ;AACb,sBAAG,KAAK,QAAQ;AAAA,gBACjB,CAAC;AAAA,cACF;AAAA,cACA,UAAU;AAAA,YACX;AAAA,YACA;AAAA,cACC,OAAM,GAAG,QAAQ;AAAA,cACjB,WAAW,SAAS,MAAM;AAAE,uBAAO,CAAC,KAAK,WAAW,IAAG;AAAA,cAAY;AAAA,cACnE,OAAO,SAAS,MAAM;AACrB,uBAAO,MAAM,WAAW,IAAG,SAAS,KAAK,OAAO,WAAW;AAC1D,uBAAK,OAAO,OAAO;AAAA,gBACpB,CAAC;AAAA,cACF;AAAA,cACA,UAAU;AAAA,YACX;AAAA,UACD;AAEA,cAAG,KAAK,KAAK,WAAW,KAAK,KAAK,gBAAgB;AACjD,sBAAU,QAAQ,OAAO,SAAO;AAC/B,qBAAO,CAAC,IAAG,KAAK,QAAQ,KAAK,OAAK,EAAE,YAAU,IAAI,QAAQ;AAAA,YAC3D,CAAC;AACD,mBAAO,QAAQ,OAAO,KAAK,KAAK,OAAO;AAAA,UACxC,WAAW,KAAK,KAAK,WAAW,CAAC,KAAK,KAAK,gBAAgB;AAC1D,mBAAO,KAAK,KAAK;AAAA,UAClB,OAAO;AACN,mBAAO;AAAA,UACR;AAAA,QACD;AAAA,QACA,WAAW;AACV,cAAI,MAAK;AACT,cAAI,OAAO,IAAG,KAAK,kBAAkB;AAErC,cAAG,CAAE,SAAQ,KAAK,aAAa;AAC9B,mBAAO,SAAS,GAAG,4BAA4B,CAAC;AAChD;AAAA,UACD;AAEA,eAAK,eAAe;AAGpB,cAAI,IAAI,IAAI,OAAO,GAAG,OAAO;AAAA,YAC5B,OAAO,GAAG,WAAU,CAAC,GAAG,IAAG,OAAO,CAAC,CAAC;AAAA,YACpC,QAAQ,IAAG;AAAA,UACZ,CAAC;AAED,cAAI,OAAO,EAAE,OAAO,CAAC,GAAG,IAAG,IAAI;AAC/B,eAAK,YAAU,IAAG,QAAQ,YAAY,EAAE,QAAQ,MAAK,GAAG,KAAK,IAAG,KAAK;AAErE,YAAE,UAAU,YAAY,CAAC;AACzB,YAAE,WAAW,IAAI;AAGjB,YAAE,mBAAmB,GAAG,YAAY,GAAG,WAAW;AACjD,gBAAI,MAAM;AACV,gBAAI,IAAI,EAAE,WAAW;AACrB,gBAAG,CAAC;AAAG;AAEP,cAAE,SAAS,KAAK;AAChB,cAAE,UAAU,IAAG;AAEf,gBAAG,KAAK,SAAQ;AACf,gBAAE,aAAa,KAAK;AAAA,YACrB,OACI;AACH,gBAAE,aAAa;AAAA,YAChB;AAEA,cAAE,KAAK;AACP,mBAAO,IAAI,OAAO,GAAG,gBAAgB,CAAC,IAAG,OAAO,CAAC,CAAC;AAElD,cAAE,OAAO,MAAM,CAAC;AAChB,mBAAO,OAAO,KAAK;AAAA,cAClB,QAAQ,IAAG,KAAK,iBAAiB;AAAA,cACjC;AAAA,cACA,UAAU,SAAS,GAAG;AACrB,oBAAG,CAAC,EAAE,KAAK;AACV,sBAAG,KAAK,cAAc,IAAI;AAAA,gBAC3B;AAAA,cACD;AAAA,cACA,QAAQ,WAAW;AAClB,uBAAO,IAAI,SAAS;AAAA,cACrB;AAAA,YACD,CAAC;AAAA,UACF,CAAC;AACD,YAAE,KAAK;AAAA,QACR;AAAA,QACA,iBAAgB;AACf,cAAI,MAAK;AAET,eAAK,SAAS;AAAA,YACb;AAAA,cAAC,WAAU;AAAA,cAAS,WAAU;AAAA,cAAY,OAAM,GAAG,YAAY;AAAA,cAC9D,aAAa,GAAG,4DAA4D;AAAA,YAAC;AAAA,UAC/E;AAEA,cAAI,KAAK,KAAK,QAAQ;AACrB,iBAAK,SAAS,KAAK,KAAK;AAAA,UACzB;AAEA,eAAK,gBAAgB,KAAK,KAAK,iBAAiB,CAAC;AAEjD,cAAI,mBAAmB,EAAE,IAAI,IAAG,KAAK,KAAK,QAAQ,SAAS,GAAG;AAC7D,mBAAQ,EAAE,QAAQ,EAAE,QAAQ,CAAC,EAAE,aAAa,CAAC,CAAC,EAAE,aAAc,IAAI;AAAA,UAAK,CAAC;AAEzE,cAAI,mBAAmB,KAAK,OAAO,IAAI,SAAS,GAAG;AAClD,mBAAO,EAAE;AAAA,UACV,CAAC;AAED,2BAAiB,IAAI,SAAS,GAAG;AAChC,gBAAG,EAAE,QAAQ,EAAE,WAAW,IAAG,aAAa,MAAM,MAAM,EAAE,QAAQ,EAAE,WAAW,gBAAgB,MAAM,IAAI;AACtG,kBAAG,OAAO,KAAK,CAAC;AAAA,YACjB;AAAA,UACD,CAAC;AAAA,QACF;AAAA,QACA,aAAa;AACZ,cAAG,CAAC,OAAO,MAAM,UAAU,KAAK,OAAO,GAAG;AACzC,mBAAO,SAAS,GAAG,0CAA0C,CAAC;AAC9D,mBAAO;AAAA,UACR;AACA,cAAI,OAAO,EAAE,eAAe,EAAE,KAAK;AACnC,cAAI,MAAK;AACT,iBAAO,GAAG,mBAAmB,OAAO,SAAS,gBAAgB;AAC5D,gBAAI,QAAS,GAAG,IAAG,WAAW,IAAG,OAAO;AACxC,mBAAO,YAAY,EAAC,OAAc,MAAY,eAA6B,CAAC;AAC5E,mBAAO,KAAK;AAAA,cACX,QAAQ;AAAA,cACR,MAAM;AAAA,gBACL,SAAS,IAAG;AAAA,gBACZ,aAAa,IAAG;AAAA,gBAChB,MAAM;AAAA,gBACN,QAAQ;AAAA,cACT;AAAA,YACD,CAAC;AAAA,UACF,CAAC;AAAA,QACF;AAAA,QACA,qBAAqB;AACpB,cAAI,MAAK;AACT,cAAI,CAAC,KAAK,KAAK,oBAAoB,KAAK,YAAY;AACnD,gBAAG,KAAK,mBAAmB,GAAG,KAAK,GAAG,WAAW;AAChD,kBAAG,SAAS;AAAA,YACb,GAAG,KAAK;AAAA,UACT;AAAA,QACD;AAAA,QACA,gBAAgB;AACf,cAAI,KAAK;AAET,eAAK,aAAa;AAAA,YACjB;AAAA,cACC,OAAO,GAAG,WAAW;AAAA,cACrB,QAAQ,WAAW;AAClB,uBAAO,UAAU,QAAQ,GAAG,OAAO;AAAA,cACpC;AAAA,YACD;AAAA,YACA;AAAA,cACC,OAAO,GAAG,OAAO;AAAA,cACjB,QAAQ,WAAW;AAClB,mBAAG,WAAW;AAAA,cACf;AAAA,YAED;AAAA,YACA;AAAA,cACC,OAAO,GAAG,SAAS;AAAA,cACnB,QAAQ,WAAW;AAClB,mBAAG,UAAU;AAAA,cACd;AAAA,YACD;AAAA,UACD;AAEA,cAAI,OAAO,KAAK,SAAS,gBAAgB,KACxC,OAAO,KAAK,UAAU,GAAG,SAAS,KAAK,KACvC,OAAO,KAAK,UAAU,GAAG,SAAS,KAAK,GAAG;AAC1C,iBAAK,WAAW,KACf;AAAA,cACC,OAAO,GAAG,cAAc;AAAA,cACxB,QAAQ,WAAW;AAClB,mBAAG,aAAa;AAAA,cACjB;AAAA,YACD,CACD;AAAA,UACD;AAEA,cAAI,GAAG,KAAK,YAAY;AACvB,eAAG,WAAW,KAAK,MAAM,GAAG,YAAY,GAAG,KAAK,UAAU;AAAA,UAC3D;AAEA,YAAE,KAAK,GAAG,YAAY,SAAS,GAAG,WAAU;AAC3C,gBAAI,WAAW;AACf,gBAAG,UAAU,cAAc;AAC1B,yBAAW,KAAK,UAAU,YAAY;AAAA,YACvC;AAEA,gBAAI,UAAU;AACb,iBAAG,KAAK,cAAc,UAAU,UAAU,UAAU,SAAS;AAAA,YAC9D;AAAA,UACD,CAAC;AAAA,QACF;AAAA,MACD;AAAA;AAAA;;;ACncC,SAAO,UAAU,aAAa;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;;ACC/B,SAAO,gBAAgB,SAAS,SAAS;AAExC,QAAG,OAAO,MAAM,eAAe,OAAO,GAAG;AACxC,aAAO;AAAA,IACR,WAAW,QAAO,kBAAkB,YAAY,CAAC,GAAG,iBAChD,OAAO,SAAS,oBAAoB,OAAO,GAAG;AACjD,aAAO;AAAA,IACR,WAAU,OAAO,KAAK,UAAU,SAAS,SAAS,KAC9C,OAAO,KAAK,UAAU,SAAS,UAAU,GAAG;AAC/C,aAAO;AAAA,IACR,WAAW,OAAO,KAAK,UAAU,SAAS,QAAQ,KAAK,OAAO,SAAS,OAAO,EAAE,OAAO,QAAQ;AAC9F,aAAO;AAAA,IACR;AACA,WAAO;AAAA,EACR;AAEA,SAAO,gBAAgB,SAAS,KAAK,SAAS;AAC7C,QAAG,IAAI,WAAW;AACjB,aAAO,CAAC,GAAG,WAAW,GAAG,QAAQ;AAAA,IAClC;AAEA,QAAG,CAAC;AAAS,gBAAU,IAAI;AAE3B,QAAI,OAAO,OAAO,SAAS,OAAO;AAClC,QAAI,WAAW,OAAO,SAAS,UAAU;AACzC,QAAI,mBAAmB,WAAW,SAAS,qBAAqB;AAEhE,QAAI,WAAW,OAAO,kBAAkB,YAAY,CAAC;AAErD,QAAI,iBAAiB,OAAO,MAAM,eAAe,OAAO,GACvD,qBAAqB,OAAO,SAAS,oBAAoB,OAAO;AAGjE,QAAG,sBAAsB,CAAC,kBAAkB;AAC3C,UAAI,QAAQ,IAAI;AAChB,UAAG,OAAO;AACT,YAAI,SAAS;AAEb,YAAG,OAAO,kBAAkB,UAAU,OAAO,kBAAkB,OAAO,OAAO;AAC5E,cAAI,SAAS;AAAA,YACZ,WAAW;AAAA,YACX,WAAW;AAAA,YACX,UAAU;AAAA,YACV,WAAW;AAAA,YACX,WAAW;AAAA,YACX,QAAQ;AAAA,UACT,EAAE,OAAO,kBAAkB,OAAO;AAAA,QACnC;AACA,YAAI,CAAC;AAAQ,mBAAS;AAEtB,eAAO,CAAC,GAAG,KAAK,GAAG,QAAQ,qBAAqB,QAAQ,KAAK;AAAA,MAC9D;AAAA,IACD;AAGA,QAAG,kBAAkB,IAAI,aAAW,KAAK,CAAC,SAAS,yBAAyB;AAC3E,aAAO,CAAC,GAAG,OAAO,GAAG,OAAO,eAAe;AAAA,IAC5C;AAGA,QAAG,kBAAkB,IAAI,aAAW,KAAK,CAAC,SAAS,6BAA6B;AAC/E,aAAO,CAAC,GAAG,WAAW,GAAG,OAAO,eAAe;AAAA,IAChD;AAGA,QAAI,IAAI,UAAU,QAAQ,KAAK,UAAU,KAAK,OAAO,KAAK,OAAK,EAAE,UAAU,IAAI,MAAM,GAAG;AACvF,UAAI,QAAQ,KAAK,OAAO,KAAK,OAAK,EAAE,UAAU,IAAI,MAAM;AACxD,UAAI,cAAc,OAAO,MAAM,MAAM,OAAO,GAAG;AAC/C,aAAO,CAAC,GAAG,IAAI,MAAM,GAAG,aAAa,cAAc,IAAI,MAAM;AAAA,IAC9D;AAEA,QAAG,SAAS,eAAe;AAC1B,UAAI,YAAY,SAAS,cAAc,GAAG;AAC1C,UAAG;AAAW,eAAO;AAAA,IACtB;AAGA,QAAG,kBAAkB,IAAI,aAAW,GAAG;AACtC,aAAO,CAAC,GAAG,WAAW,GAAG,QAAQ,eAAe;AAAA,IACjD;AAGA,QAAG,IAAI,QAAQ;AACd,aAAO,CAAC,GAAG,IAAI,MAAM,GAAG,OAAO,MAAM,aAAa,IAAI,MAAM,CAAC;AAAA,IAC9D;AAGA,QAAG,OAAO,KAAK,UAAU,SAAS,SAAS,GAAG;AAC7C,UAAG,IAAI,SAAS;AACf,eAAO,CAAC,GAAG,SAAS,GAAG,QAAQ,aAAa;AAAA,MAC7C,OAAO;AACN,eAAO,CAAC,GAAG,UAAU,GAAG,QAAQ,aAAa;AAAA,MAC9C;AAAA,IACD;AAGA,QAAG,OAAO,KAAK,UAAU,SAAS,UAAU,GAAG;AAC9C,UAAG,IAAI,UAAU;AAChB,eAAO,CAAC,GAAG,UAAU,GAAG,QAAQ,cAAc;AAAA,MAC/C,OAAO;AACN,eAAO,CAAC,GAAG,SAAS,GAAG,QAAQ,cAAc;AAAA,MAC9C;AAAA,IACD;AAAA,EACD;;;ACzGA,SAAO,GAAG,SAAS,MAAM;AAAA,IACxB,YAAY,MAAM;AACjB,QAAE,OAAO,MAAM,IAAI;AACnB,UAAI,KAAK,UAAU,QAAQ,KAAK,UAAU,QAAW;AACpD,aAAK,QAAQ;AAAA,MACd;AAEA,WAAK,QAAQ,OAAO,GAAG;AACvB,WAAK,eAAe;AACpB,WAAK,2BAA2B;AAChC,WAAK,KAAK;AAAA,IACX;AAAA,IAEA,iBAAiB;AAChB,WAAK,aAAa;AAAA,QACjB,CAAC,KAAK,GAAG,QAAQ,CAAC;AAAA,QAClB,CAAC,MAAM,GAAG,YAAY,CAAC;AAAA,QACvB,CAAC,QAAQ,GAAG,MAAM,CAAC;AAAA,QACnB,CAAC,YAAY,GAAG,UAAU,CAAC;AAAA,QAC3B,CAAC,MAAM,GAAG,IAAI,CAAC;AAAA,QACf,CAAC,UAAU,GAAG,QAAQ,CAAC;AAAA,QACvB,CAAC,MAAM,GAAG,IAAI,CAAC;AAAA,QACf,CAAC,KAAK,GAAG;AAAA,QACT,CAAC,KAAK,GAAG;AAAA,QACT,CAAC,MAAM,IAAI;AAAA,QACX,CAAC,MAAM,IAAI;AAAA,QACX,CAAC,WAAW,GAAG,SAAS,CAAC;AAAA,QACzB,CAAC,YAAY,GAAG,UAAU,CAAC;AAAA,MAC5B;AAEA,WAAK,wBAAwB;AAAA,QAC5B,CAAC,kBAAkB,GAAG,gBAAgB,CAAC;AAAA,QACvC,CAAC,sBAAsB,GAAG,oBAAoB,CAAC;AAAA,QAC/C,CAAC,gBAAgB,GAAG,cAAc,CAAC;AAAA,QACnC,CAAC,oBAAoB,GAAG,kBAAkB,CAAC;AAAA,MAC5C;AAEA,WAAK,WAAW,KAAK,GAAG,KAAK,qBAAqB;AAElD,WAAK,wBAAwB;AAAA,QAC5B,MAAM,CAAC,QAAQ,UAAU;AAAA,QACzB,UAAU,CAAC,QAAQ,UAAU;AAAA,QAC7B,MAAM,CAAC,WAAW,UAAU;AAAA,QAC5B,QAAQ,CAAC,QAAQ,YAAY,WAAW,UAAU;AAAA,QAClD,MAAM,CAAC,WAAW,YAAY,KAAK,KAAK,MAAM,IAAI;AAAA,QAClD,UAAU,CAAC,WAAW,UAAU;AAAA,QAChC,OAAO,CAAC,WAAW,UAAU;AAAA,QAC7B,OAAO,KAAK,WAAW,IAAI,CAAC,MAAM,EAAE,EAAE,EAAE,OAAO,CAAC,MAAM,MAAM,GAAG;AAAA,MAChE;AAAA,IACD;AAAA,IAEA,6BAA6B;AAC5B,UAAI,OAAO,KAAK,2BAA2B;AAC1C,aAAK,iBAAiB,OAAO,KAAK;AAClC,iBAAS,OAAO,OAAO,KAAK,KAAK,cAAc,GAAG;AACjD,gBAAM,SAAS,KAAK,eAAe;AACnC,eAAK,WAAW,KAAK,CAAC,KAAK,GAAG,OAAO,KAAK,CAAC,CAAC;AAC5C,mBAAS,aAAa,OAAO,KAAK,KAAK,qBAAqB,GAAG;AAC9D,gBAAI,CAAC,OAAO,qBAAqB,SAAS,SAAS,GAAG;AACrD,mBAAK,sBAAsB,WAAW,KAAK,GAAG;AAAA,YAC/C;AAAA,UACD;AAAA,QACD;AAAA,MACD;AAAA,IACD;AAAA,IAEA,OAAO;AACN,WAAK,mBAAmB,EACvB,OAAO,gBAAgB,eAAe;AAAA,QACrC,YAAY,KAAK;AAAA,MAClB,CAAC,CACF;AACA,WAAK,UAAU,KAAK,iBAAiB,SAAS,KAAK,OAAO,KAAK,mBAAmB,CAAC;AACnF,WAAK,YAAY;AACjB,WAAK,WAAW;AAChB,WAAK,MAAM;AAAA,IACZ;AAAA,IAEA,cAAc;AACb,WAAK,cAAc,IAAI,OAAO,GAAG,YAAY;AAAA,QAC5C,QAAQ,KAAK,iBAAiB,KAAK,wBAAwB;AAAA,QAC3D,SAAS,KAAK;AAAA,QACd,gBAAgB,KAAK;AAAA,QACrB,eAAe,KAAK;AAAA,QACpB,aAAa;AAAA,QACb,QAAQ,CAAC,SAAS,cAAc;AAC/B,eAAK,UAAU,SAAS,SAAS;AAAA,QAClC;AAAA,MACD,CAAC;AAED,UAAI,KAAK,WAAW;AACnB,aAAK,YAAY,UAAU,KAAK,SAAS,KAAK,SAAS;AAAA,MACxD;AAAA,IACD;AAAA,IAEA,aAAa;AACZ,WAAK,iBAAiB,KAAK,gBAAgB,EAAE,GAAG,SAAS,MAAM;AAC9D,aAAK,OAAO;AACZ,aAAK,UAAU;AAAA,MAChB,CAAC;AAED,WAAK,iBAAiB,KAAK,YAAY,EAAE,OAAO,MAAM;AACrD,YAAI,CAAC,KAAK;AAAO;AAEjB,YAAI,YAAY,KAAK,cAAc;AACnC,YAAI,YAAY;AAEhB,YAAI,CAAC,MAAM,QAAQ,UAAU,UAAU,EAAE,SAAS,SAAS,GAAG;AAC7D,sBAAY;AACZ,eAAK,mBAAmB,SAAS;AAAA,QAClC,OAAO;AACN,eAAK,iBAAiB,KAAK,qBAAqB,EAAE,MAAM;AAAA,QACzD;AAEA,YACC,CAAC,UAAU,aAAa,EAAE,SAAS,KAAK,MAAM,GAAG,SAAS,KAC1D,CAAC,MAAM,QAAQ,EAAE,SAAS,SAAS,GAClC;AACD,sBAAY;AAAA,QACb;AAEA,aAAK,UACJ,KAAK,MAAM,GAAG,QACd,KAAK,MAAM,GAAG,WACd,WACA,SACD;AAAA,MACD,CAAC;AAAA,IACF;AAAA,IAEA,QAAQ;AACP,YAAM,YAAY,KAAK,aAAa;AAEpC,aAAO,KAAK,WAAW,KAAK,SAAS,WAAW,KAAK,WAAW,KAAK,KAAK;AAAA,IAC3E;AAAA,IAEA,YAAY,QAAQ;AACnB,UAAI,UAAU,QAAQ,QAAQ;AAC9B,UAAI,QAAQ;AACX,aAAK,iBAAiB,SAAS,YAAY;AAAA,MAC5C,OAAO;AACN,kBAAU,KAAK,kBAAkB;AAAA,MAClC;AAEA,UAAI,KAAK,QAAQ;AAChB,gBAAQ,KAAK,MAAM,KAAK,YAAY,KAAK,CAAC;AAAA,MAC3C;AAAA,IACD;AAAA,IAEA,SAAS;AACR,WAAK,kBAAkB;AAAA,IACxB;AAAA,IAEA,oBAAoB;AACnB,UAAI,KAAK,mBAAmB;AAC3B,eAAO,KAAK,kBAAkB,KAAK,MAAM;AACxC,WAAC,KAAK,cAAc,KAAK,SAAS,IAAI,KAAK,uBAAuB;AAClE,eAAK,iBAAiB,KAAK;AAAA,QAC5B,CAAC;AAAA,MACF,OAAO;AACN,eAAO,QAAQ,QAAQ;AAAA,MACxB;AAAA,IACD;AAAA,IAEA,SAAS;AACR,WAAK,iBAAiB,OAAO;AAC7B,WAAK,QAAQ;AAAA,IAEd;AAAA,IAEA,WAAW,SAAS,WAAW,WAAW,OAAO;AAEhD,UAAI,KAAK,UAAU,SAAS,SAAS,MAAM,OAAO;AACjD;AAAA,MACD;AAEA,UAAI,KAAK,MAAM,GAAG,kBAAkB,SAAS;AAC5C,gBAAQ,SAAS,IAAI,QAAQ;AAAA,MAC9B;AACA,UAAI;AAAW,aAAK,cAAc,WAAW,IAAI;AAGjD,WAAK,oBAAoB,QAAQ,QAAQ;AAEzC,UAAI,CAAC,MAAM,QAAQ,EAAE,SAAS,SAAS,KAAK,MAAM,QAAQ,KAAK,GAAG;AACjE,gBAAQ,MAAM,KAAK,GAAG;AAAA,MACvB;AAEA,UAAI,MAAM,QAAQ,KAAK,GAAG;AACzB,aAAK,oBAAoB,KAAK,MAAM,UAAU,KAAK;AAAA,MACpD,WAAW,UAAU,UAAa,UAAU,MAAM;AACjD,aAAK,oBAAoB,KAAK,MAAM,UAAW,SAAQ,IAAI,KAAK,CAAC;AAAA,MAClE;AACA,aAAO,KAAK;AAAA,IACb;AAAA,IAEA,UAAU,SAAS,WAAW,WAAW,WAAW;AAEnD,UAAI,MAAM,CAAC;AACX,UAAI,KAAK;AAAO,iBAAS,KAAK,KAAK,MAAM;AAAI,cAAI,KAAK,KAAK,MAAM,GAAG;AAEpE,UAAI,oBAAqB,MAAK,YAAY,eAAe,YAAY,CAAC,GACrE;AAGD,UAAI,CAAC,mBAAmB;AACvB,gBAAQ,KAAK,SAAS,8BAA8B;AACpD,aAAK,OAAO;AACZ,eAAO;AAAA,MACR;AAEA,UAAI,KAAK,UAAU,iBAAiB;AAGpC,SAAG,YAAY;AACf,SAAG,SAAS;AACZ,SAAG,YAAY;AACf,aAAO,GAAG;AAEV,UAAI,IAAI,YAAY,YAAY,KAAK,MAAM,sBAAsB,EAAE;AACnE,WAAK,cAAc,CAAC;AAEpB,WAAK,MAAM,cAAc,IAAI,WAAW,KAAK,cAAc,CAAC;AAI5D,UACC,KAAK,SACL,IAAI,aAAa,aACjB,GAAG,aAAa,IAAI,aACpB,GAAG,UAAU,IAAI,UACjB,GAAG,WAAW,IAAI,SACjB;AACD;AAAA,MACD;AAGA,WAAK,YAAY,mBAAmB;AACpC,WAAK,YAAY,qBAAqB;AAEtC,UACC,KAAK,kBACL,KAAK,eAAe,cACpB,KAAK,eAAe,WAAW,qBAAqB,SAAS,GAAG,SAAS,GACxE;AACD,YAAI,OAAO,CAAC;AACZ,YAAI,KAAK,eAAe,WAAW,YAAY;AAC9C,gBAAM,aAAa,KAAK,eAAe,WAAW;AAClD,gBAAM,eAAe,KAAK,YAAY,iBAAiB,SAAS;AAChE,eAAK,cAAc;AAAA,QACpB;AACA,YAAI,cAAc,CAAC,UAAU;AAC5B,aAAG,YAAY,MAAM;AACrB,aAAG,UAAU,MAAM;AACnB,aAAG,YAAY;AACf,eAAK,WAAW,IAAI,IAAI,SAAS;AAAA,QAClC;AACA,YAAI,KAAK,eAAe,WAAW,MAAM;AACxC,cAAI,QAAQ,KAAK,eAAe,WAAW;AAC3C,sBAAY,KAAK;AAAA,QAClB,OAAO;AACN,iBAAO,MAAM,KAAK,eAAe,WAAW,WAAW,IAAI,EAAE,KAAK,WAAS;AAC1E,iBAAK,eAAe,WAAW,OAAO;AACtC,wBAAY,KAAK;AAAA,UAClB,CAAC;AAAA,QACF;AAAA,MACD,OAAO;AACN,aAAK,WAAW,IAAI,IAAI,SAAS;AAAA,MAClC;AAAA,IACD;AAAA,IAEA,WAAW,IAAI,eAAe;AAC7B,UAAI,WAAW,KAAK,QAAQ,KAAK,MAAM,UAAU,IAAI;AACrD,WAAK,wBAAwB,GAAG,WAAW,GAAG,aAAa;AAC3D,WAAK,6BAA6B,EAAE;AACpC,UAAI,aAAa,KAAK,iBACpB,KAAK,eAAe,EACpB,MAAM,EACN,IAAI,CAAC;AACP,SAAG,cAAc;AACjB,UAAI,IAAI,OAAO,GAAG,KAAK,aAAa;AAAA,QACnC;AAAA,QACA,QAAQ;AAAA,QACR,YAAY;AAAA,MACb,CAAC;AACD,QAAE,QAAQ;AAEV,WAAK,QAAQ;AACb,UAAI,YAAY,EAAE,cAAc,eAAe;AAC9C,aAAK,MAAM,UAAU,QAAQ;AAAA,MAC9B;AAEA,WAAK,yBAAyB;AAAA,IAC/B;AAAA,IAEA,2BAA2B;AAE1B,WAAK,MAAM,OAAO,GAAG,YAAY,MAAM,KAAK,UAAU,CAAC;AAGvD,QAAE,KAAK,MAAM,OAAO,EAClB,KAAK,QAAQ,EACb,QAAQ,OAAK;AACb,YAAI,EAAE,SAAS,MAAM,KAAK,MAAM,GAAG,cAAc,eAAe;AAC/D,eAAK,UAAU;AAAA,QAChB;AAAA,MACD,CAAC;AAAA,IACH;AAAA,IAEA,YAAY;AACX,aAAO;AAAA,QACN,KAAK,YAAY;AAAA,QACjB,KAAK,MAAM,GAAG;AAAA,QACd,KAAK,cAAc;AAAA,QACnB,KAAK,mBAAmB;AAAA,QACxB,KAAK;AAAA,MACN;AAAA,IACD;AAAA,IAEA,qBAAqB;AACpB,aAAO,KAAK,MAAM,mBAAmB,KAAK,OAAO,KAAK,cAAc,CAAC;AAAA,IACtE;AAAA,IAEA,qBAAqB;AACpB,aAAO,KAAK,MAAM,mBAAmB,KAAK,KAAK;AAAA,IAChD;AAAA,IAEA,gBAAgB;AACf,aAAO,KAAK,iBAAiB,KAAK,YAAY,EAAE,IAAI;AAAA,IACrD;AAAA,IAEA,cAAc,WAAW,iBAAiB,OAAO;AAChD,UAAI,mBAAmB,KAAK,iBAAiB,KAAK,YAAY;AAC9D,uBAAiB,IAAI,SAAS;AAC9B,UAAI;AAAgB,yBAAiB,OAAO;AAAA,IAC7C;AAAA,IAEA,mBAAmB,WAAW;AAC7B,YAAM,cAAc,CAAC,MAAM,QAAQ,EAAE,SAAS,SAAS,IACpD,GAAG,4BAA4B,IAC/B,GAAG,mBAAmB;AAEzB,WAAK,iBAAiB,KAAK,qBAAqB,EAAE,KAAK,WAAW;AAAA,IACnE;AAAA,IAEA,WAAW;AACV,UAAI,CAAC,KAAK;AAAO;AACjB,WAAK,cAAc,KAAK,uBAAuB,EAAE,YAChD,KAAK,OAAO,KAAK,oCAAoC,CACtD;AACA,WAAK,uBAAuB;AAC5B,WAAK,SAAS;AAAA,IACf;AAAA,IAEA,WAAW;AACV,WAAK,YAAY,KAAK,gBAAgB,EAAE,GAAG,SAAS,KAAK,OAAO,KAAK,IAAI,CAAC;AAE1E,UAAI,gBAAgB,KAAK,YAAY,KAAK,gBAAgB;AAC1D,oBAAc,GAAG,SAAS,MAAM;AAC/B,sBACE,QAAQ,mBAAmB,EAC3B,KAAK,mBAAmB,EACxB,KAAK;AACP,aAAK,iBAAiB,OAAO;AAAA,MAC9B,CAAC;AAAA,IACF;AAAA,IAEA,yBAAyB;AACxB,WAAK,YAAY,KAAK,gBAAgB,EAAE,KAAK,KAAK,uBAAuB,CAAC;AAAA,IAC3E;AAAA,IAEA,yBAAyB;AACxB,UAAI,QAAQ,KAAK,MAAM,oBACtB,KAAK,OACL,KAAK,mBAAmB,KAAK,KAAK,mBAAmB,CACtD;AACA,aAAO,GAAG,GAAG,KAAK,MAAM,GAAG,KAAK,KAAK,GAAG,KAAK,cAAc,CAAC,KAAK,GAChE,KACD;AAAA,IACD;AAAA,IAEA,yBAAyB;AACxB,aAAO,EAAE;AAAA;AAAA,aAEE,GAAG,aAAa;AAAA;AAAA;AAAA,aAGhB,GAAG,eAAe;AAAA,MACzB,OAAO,MAAM,KAAK,OAAO;AAAA;AAAA,SAEtB;AAAA,IACR;AAAA,IAEA,wBAAwB,WAAW,eAAe;AACjD,UAAI,qBACH,KAAK,sBAAsB,kBAC3B,KAAK,sBAAsB,cAC3B,CAAC;AAEF,eAAS,aAAa,KAAK,YAAY;AACtC,aAAK,iBACH,KAAK,4BAA4B,UAAU,MAAM,EACjD,OAAO,CAAC,mBAAmB,SAAS,UAAU,EAAE,CAAC;AAAA,MACpD;AAAA,IACD;AAAA,IAEA,6BAA6B,IAAI;AAChC,UAAI,iBACH,GAAG,cAAc,UACjB,OAAO,KAAK,oBAAoB,SAAS,GAAG,OAAO;AACpD,WAAK,sBAAsB,QAAQ,CAAC,cAAc;AACjD,aAAK,iBACH,KAAK,4BAA4B,UAAU,MAAM,EACjD,OAAO,cAAc;AAAA,MACxB,CAAC;AAAA,IACF;AAAA,EACD;AAEA,SAAO,GAAG,eAAe;AAAA,IACxB,oBAAoB,OAAO,OAAO;AACjC,UAAI,MAAM,GAAG,cAAc,aAAa;AACvC,gBAAQ,EAAE,GAAG,SAAS,GAAG,aAAa,GAAG,YAAY,EAAE,UAAU;AAAA,MAClE,WAAW,MAAM,GAAG,kBAAkB,SAAS;AAC9C,gBAAQ,EAAE,GAAG,MAAM,GAAG,MAAM,EAAE,KAAK,KAAK;AAAA,MACzC;AACA,aAAO,OAAO,OAAO,OAAO,MAAM,IAAI,EAAE,YAAY,EAAE,CAAC;AAAA,IACxD;AAAA,IAEA,mBAAmB,OAAO,WAAW;AACpC,UAAI,CAAC;AAAO;AAEZ,UAAI,MAAM,MAAM,UAAU;AAE1B,UAAI,OAAO,QAAQ,UAAU;AAC5B,cAAM,MAAM,GAAG;AAAA,MAChB;AAEA,UAAI,aAAa,QAAQ,CAAC,KAAK;AAC9B,cAAM,MAAM,GAAG,QAAQ,GAAG;AAAA,MAC3B;AAEA,UAAI,MAAM,GAAG,iBAAiB,SAAS;AACtC,cAAM,OAAO,QAAQ,IAAI;AAAA,MAC1B;AAEA,UAAI,CAAC,QAAQ,UAAU,EAAE,SAAS,SAAS,GAAG;AAE7C,YAAI,OAAO,CAAE,KAAI,WAAW,GAAG,KAAK,IAAI,SAAS,GAAG,IAAI;AACvD,gBAAM,MAAM,MAAM;AAAA,QACnB;AAAA,MACD,WAAW,CAAC,MAAM,QAAQ,EAAE,SAAS,SAAS,GAAG;AAChD,YAAI,KAAK;AACR,gBAAM,IAAI,MAAM,GAAG,EAAE,IAAI,CAAC,MAAM,MAAM,CAAC,CAAC;AAAA,QACzC;AAAA,MACD,WAAW,OAAO,KAAK,0BAA0B,YAAY;AAC5D,cAAM,MAAM,SAAS;AAAA,MACtB;AACA,UAAI,QAAQ,KAAK;AAChB,cAAM;AAAA,MACP;AAEA,aAAO;AAAA,IACR;AAAA,IAEA,mBAAmB,OAAO;AACzB,UAAI,QAAQ,CAAC,QAAQ,cAAc,GAAG,MAAM,GAAG,SAAS,GAAG;AAC1D,eAAO,MAAM,gBAAgB;AAAA,MAC9B;AAAA,IACD;AAAA,IAEA,sBAAsB,IAAI;AACzB,UAAI,GAAG,aAAa,QAAQ;AAC3B,eAAO;AAAA,MACR,WAAW,GAAG,aAAa,UAAU,GAAG,aAAa,YAAY;AAChE,eAAO;AAAA,MACR,OAAO;AACN,eAAO;AAAA,MACR;AAAA,IACD;AAAA,IAEA,cAAc,IAAI,WAAW,WAAW;AAEvC,UAAI,GAAG;AAAe,WAAG,YAAY,GAAG;AAAA;AACnC,WAAG,gBAAgB,GAAG;AAE3B,SAAG,cAAc;AACjB,SAAG,OAAO;AACV,SAAG,yBAAyB;AAG5B,UAAI,WAAW;AACd,WAAG,YAAY;AACf;AAAA,MACD;AAGA,UAAI,GAAG,aAAa,aAAa;AAChC,WAAG,YAAY;AACf,WAAG,UAAU;AAAA,UACZ,EAAE,OAAO,GAAG,OAAO,GAAG,OAAO,EAAE;AAAA,UAC/B,EAAE,OAAO,GAAG,OAAO,GAAG,WAAW,EAAE;AAAA,UACnC,EAAE,OAAO,GAAG,OAAO,GAAG,WAAW,EAAE;AAAA,QACpC;AAAA,MACD,WAAW,GAAG,aAAa,SAAS;AACnC,WAAG,YAAY;AACf,WAAG,UAAU;AAAA,MACd,WACC;AAAA,QACC;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,MACD,EAAE,QAAQ,GAAG,SAAS,KAAK,IAC1B;AACD,WAAG,YAAY;AAAA,MAChB,WACC,GAAG,aAAa,UAChB;AAAA,QACC;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,MACD,EAAE,QAAQ,SAAS,KAAK,IACvB;AACD,WAAG,YAAY;AAAA,MAChB;AACA,UACC,GAAG,cAAc,UAChB,IAAG,WAAW,IAAI,YAAY,MAAM,SACpC;AACD,WAAG,UAAU;AAAA,MACd;AACA,UACC,aAAa,aACZ,IAAG,aAAa,UAAU,GAAG,aAAa,aAC1C;AACD,WAAG,YAAY;AAAA,MAChB;AACA,UACC,aAAa,cACb,CAAC,QAAQ,YAAY,aAAa,QAAQ,EAAE,SAAS,GAAG,SAAS,GAChE;AACD,WAAG,YAAY;AACf,WAAG,UAAU,KAAK,qBAAqB,CAAC,QAAQ,aAAa,SAAS,YAAY,QAAQ,MAAM,CAAC;AAAA,MAClG;AACA,UAAI,cAAc,MAAM;AACvB,WAAG,YAAY;AACf,WAAG,UAAU;AAAA,UACZ,EAAE,OAAO,GAAG,OAAO,MAAM,oBAAoB,GAAG,OAAO,MAAM;AAAA,UAC7D,EAAE,OAAO,GAAG,WAAW,MAAM,wBAAwB,GAAG,OAAO,UAAU;AAAA,QAC1E;AAAA,MACD;AACA;AAAA,IACD;AAAA,IAEA,qBAAqB,SAAS;AAC7B,YAAM,aAAa;AAAA,QAClB,MAAM,CAAC,QAAQ,SAAS,WAAW,YAAY,MAAM;AAAA,QACrD,MAAM,CAAC,QAAQ,SAAS,WAAW,MAAM;AAAA,QACzC,MAAM,CAAC,QAAQ,SAAS,WAAW,YAAY,MAAM;AAAA,MACtD;AACA,UAAI,UAAU,CAAC;AACf,cAAQ,QAAQ,CAAC,WAAW;AAC3B,YAAI,WAAW,SAAS;AACvB,qBAAW,QAAQ,QAAQ,CAAC,MAAM;AACjC,oBAAQ,KAAK;AAAA,cACZ,OAAO,GAAG,UAAU;AAAA,cACpB,OAAO,GAAG,OAAO,YAAY,KAAK,EAAE,YAAY;AAAA,YACjD,CAAC;AAAA,UACF,CAAC;AAAA,QACF,OAAO;AACN,kBAAQ,KAAK;AAAA,YACZ,OAAO,GAAG,MAAM;AAAA,YAChB,OAAO,GAAG,OAAO,YAAY;AAAA,UAC9B,CAAC;AAAA,QACF;AAAA,MACD,CAAC;AACD,aAAO;AAAA,IACR;AAAA,EACD;;;AC7kBA,SAAO,GAAG,cAAc,MAAM;AAAA,IAC7B,YAAY,MAAM;AACjB,QAAE,OAAO,MAAM,IAAI;AACnB,WAAK,UAAU,CAAC;AAChB,aAAO,OAAO;AACd,UAAI,CAAC,KAAK,eAAe;AACxB,aAAK,UAAU,KAAK;AACpB,aAAK,QAAQ,OAAO,KAAK,yBAAyB,CAAC;AACnD,aAAK,kBAAkB;AAAA,MACxB,OAAO;AACN,aAAK,aAAa;AAAA,MACnB;AAAA,IACD;AAAA,IAEA,eAAe;AACd,WAAK,oBAAoB;AACzB,WAAK,mBAAmB;AAAA,IACzB;AAAA,IAEA,sBAAsB;AACrB,WAAK,cAAc,QAAQ;AAAA,QAC1B,SAAS,KAAK,yBAAyB;AAAA,QACvC,UAAU;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAOV,MAAM;AAAA,QACN,SAAS;AAAA,QACT,WAAW;AAAA,QACX,WAAW;AAAA,QACX,QAAQ;AAAA,MACT,CAAC;AAAA,IACF;AAAA,IAEA,qBAAqB,MAAM;AAC1B,WAAK,WACJ,KAAK,QAAQ,KAAK,gBAAgB,EAAE,OAAO,IAAI;AAAA,IACjD;AAAA,IAEA,qBAAqB;AACpB,QAAE,SAAS,IAAI,EAAE,GAAG,SAAS,CAAC,MAAM;AACnC,YAAI,KAAK,WAAW,KAAK,QAAQ,GAAG,UAAU,GAAG;AAChD,gBAAM,gBAAgB,EAAE,EAAE,MAAM,EAAE,GAAG,mBAAmB,KACpD,EAAE,EAAE,MAAM,EAAE,QAAQ,wBAAwB,EAAE,WAAW,KACzD,EAAE,EAAE,MAAM,EAAE,QAAQ,yBAAyB,EAAE,WAAW;AAE9D,cACC,EAAE,EAAE,MAAM,EAAE,QAAQ,iBAAiB,EAAE,WAAW,KAC/C,EAAE,EAAE,MAAM,EAAE,QAAQ,aAAa,EAAE,WAAW,KAC9C,KAAK,cAAc,KAAK,EAAE,EAAE,MAAM,CAAC,EAAE,WAAW,KAChD,CAAC,EAAE,EAAE,MAAM,EAAE,GAAG,KAAK,aAAa,KAClC,CAAC,eACH;AACD,iBAAK,WAAW,KAAK,cAAc,QAAQ,MAAM;AAAA,UAClD;AAAA,QACD;AAAA,MACD,CAAC;AAED,WAAK,cAAc,GAAG,SAAS,MAAM;AACpC,aAAK,cAAc,QAAQ,QAAQ;AAAA,MACpC,CAAC;AAED,WAAK,cAAc,GAAG,oBAAoB,MAAM;AAC/C,YAAI,qBAAqB,KAAK,WAAW,KAAK,QAAQ,SAAS;AAE/D,YAAI,CAAC,KAAK,SAAS;AAClB,eAAK,UAAU,EAAE,iBAAiB;AAClC,cAAI,oBAAoB;AACvB,iBAAK,qBAAqB,KAAK;AAC/B,iBAAK,uBAAuB,KAAK,OAAO;AAAA,UACzC;AACA,eAAK,kBAAkB;AAAA,QACxB;AACA,aAAK,qBAAqB,KAAK;AAC/B,SAAC,sBAAsB,KAAK,WAAW,KAAK,SAAS,MAAM;AAAA,MAC5D,CAAC;AAED,WAAK,cAAc,GAAG,qBAAqB,MAAM;AAChD,aAAK,MAAM;AAAA,MACZ,CAAC;AAGD,aAAO,OAAO,GAAG,UAAU,MAAM;AAChC,YAAI,KAAK,WAAW,KAAK,QAAQ,GAAG,UAAU,GAAG;AAChD,eAAK,cAAc,QAAQ,MAAM;AAAA,QAClC;AAAA,MACD,CAAC;AAAA,IACF;AAAA,IAEA,uBAAuB,SAAS;AAC/B,cAAQ,QAAQ,YAAU;AACzB,eAAO,SAAS,KAAK;AACrB,eAAO,QAAQ;AACf,eAAO,KAAK;AAAA,MACb,CAAC;AAAA,IACF;AAAA,IAEA,QAAQ;AACP,WAAK,eAAe;AACpB,WAAK,UAAU;AAAA,IAChB;AAAA,IAEA,uBAAuB;AACtB,YAAM,kBAAkB,KAAK,QAAQ,SAAS;AAC9C,YAAM,eAAe,kBAClB,KAAK,QAAQ,SAAS,IACrB,GAAG,eAAe,CAAC,KAAK,QAAQ,MAAM,CAAC,IACvC,GAAG,cAAc,CAAC,KAAK,QAAQ,MAAM,CAAC,IACvC,GAAG,QAAQ;AAGd,WAAK,cACH,YAAY,eAAe,CAAC,eAAe,EAC3C,YAAY,qBAAqB,eAAe;AAElD,WAAK,cAAc,KAAK,cAAc,EACpC,YAAY,UAAU,eAAe;AAEvC,WAAK,cAAc,KAAK,eAAe,EAAE,KAAK,YAAY;AAAA,IAC3D;AAAA,IAEA,oBAAoB;AACnB,WAAK,QAAQ,KAAK,aAAa,EAAE,GAAG,SAAS,MAAM;AAClD,aAAK,qBAAqB,KAAK;AAC/B,aAAK,WAAW,KAAK,SAAS,MAAM;AAAA,MACrC,CAAC;AAED,WAAK,QAAQ,KAAK,gBAAgB,EAAE,GAAG,SAAS,MAAM;AACrD,aAAK,qBAAqB,IAAI;AAC9B,aAAK,cAAc;AACnB,aAAK,UAAU;AAAA,MAChB,CAAC;AAED,WAAK,QAAQ,KAAK,gBAAgB,EAAE,GAAG,SAAS,MAAM;AACrD,aAAK,cAAc,QAAQ,MAAM;AAAA,MAClC,CAAC;AAAA,IACF;AAAA,IAEA,YAAY,SAAS;AACpB,UAAI,WAAW,CAAC;AAEhB,iBAAW,UAAU,SAAS;AAC7B,iBAAS,KAAK,MAAM,KAAK,WAAW,GAAG,MAAM,CAAC;AAAA,MAC/C;AAEA,aAAO,OAAO,aAAa,QAAQ,EAAE,KAAK,MAAM,KAAK,eAAe,CAAC;AAAA,IACtE;AAAA,IAEA,WAAW,SAAS,WAAW,WAAW,OAAO,QAAQ;AACxD,UAAI,CAAC;AAAW,eAAO,QAAQ,QAAQ;AAKvC,UAAI,CAAC,KAAK,cAAc,SAAS,SAAS;AAAG,eAAO;AACpD,YAAM,gBAAgB,UAAU,SAAS;AACzC,UAAI,iBAAiB,KAAK,QAAQ,KAAK,qBAAqB,EAAE,QAAQ;AAErE,eAAO,QAAQ,QAAQ;AAAA,MACxB,OAAO;AACN,YAAI,OAAO,CAAC,SAAS,WAAW,WAAW,OAAO,MAAM;AACxD,cAAM,UAAU,KAAK,gBAAgB,MAAM,aAAa;AACxD,eAAQ,WAAW,QAAQ,OAAQ,UAAU,QAAQ,QAAQ;AAAA,MAC9D;AAAA,IACD;AAAA,IAEA,cAAc,SAAS,WAAW;AACjC,UAAI,WAAW,aACX,CAAC,OAAO,KAAK,UAAU,SAAS,SAAS,KACzC,OAAO,MAAM,iBAAiB,SAAS,GAAG;AAE7C,eAAO,SAAS;AAAA,UACf,SAAS,GAAG,uBAAuB,CAAC,UAAU,KAAK,CAAC,CAAC;AAAA,UACrD,WAAW;AAAA,QACZ,CAAC;AAED,eAAO;AAAA,MACR;AACA,aAAO;AAAA,IACR;AAAA,IAEA,gBAAgB,MAAM;AAErB,UAAI,KAAK,cAAc,IAAI;AAAG;AAI9B,UAAI,SAAS,KAAK,iBAAiB,GAAG,IAAI;AAE1C,UAAI,UAAU,OAAO,OAAO;AAE3B,eAAO,OAAO;AAAA,MACf;AAAA,IACD;AAAA,IAEA,iBAAiB,SAAS,WAAW,WAAW,OAAO,SAAS,OAAO;AACtE,UAAI,OAAO;AAAA,QACV,QAAQ,KAAK;AAAA,QACb,gBAAgB,KAAK;AAAA,QACrB;AAAA,QACA,iBAAiB,KAAK;AAAA,QACtB;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA,OAAO,KAAK,QAAQ,SAAS;AAAA,QAC7B,WAAW,CAAC,WAAW;AACtB,cAAI;AAAQ,iBAAK,eAAe;AAChC,eAAK,UAAU;AAAA,QAChB;AAAA,QACA,cAAc,CAAC,UAAS,eAAc;AACrC,iBAAO,CAAC,KAAK,cAAc,CAAC,UAAS,UAAS,CAAC;AAAA,QAChD;AAAA,QACA,aAAa,KAAK,aAAa;AAAA,MAChC;AACA,UAAI,SAAS,IAAI,OAAO,GAAG,OAAO,IAAI;AACtC,WAAK,QAAQ,KAAK,MAAM;AACxB,aAAO;AAAA,IACR;AAAA,IAEA,iBAAiB,WAAW;AAC3B,UAAI,aAAa,KAAK,QAAQ,KAAK,OAAK,EAAE,aAAa,SAAS,KAAK,CAAC;AACtE,aAAO,WAAW;AAAA,IACnB;AAAA,IAEA,cAAc,cAAc;AAE3B,UAAI,SAAS;AACb,WAAK,QACH,OAAO,CAAC,MAAM,EAAE,KAAK,EACrB,IAAI,CAAC,MAAM;AACX,YAAI,UAAU,EAAE,UAAU;AAC1B,YAAI,aAAa,WAAW,GAAG;AAC9B,mBACC,aAAa,OAAO,QAAQ,MAAM,aAAa,OAAO,QAAQ;AAC/D;AAAA,QACD;AAEA,YAAI,QAAQ,aAAa;AACzB,YAAI,QAAQ,OAAO,MAAM;AAEzB,YACC,MAAM,QAAQ,MAAM,GAAG,CAAC,GAAG,aAAa,MAAM,GAAG,CAAC,CAAC,KAClD,MAAM,QAAQ,KAAK,KAAK,MAAM,OAAO,QAAQ,EAAE,GAC/C;AACD,mBAAS;AAAA,QACV;AAAA,MACD,CAAC;AACF,aAAO;AAAA,IACR;AAAA,IAEA,cAAc;AACb,aAAO,KAAK,QACV,OAAO,CAAC,MAAM,EAAE,KAAK,EACrB,IAAI,CAAC,MAAM;AACX,eAAO,EAAE,UAAU;AAAA,MACpB,CAAC;AAAA,IAEH;AAAA,IAEA,iBAAiB;AAEhB,YAAM,gBAAgB,CAAC,MAAM,CAAC,CAAC,QAAW,IAAI,EAAE,SAAS,EAAE,mBAAmB,CAAC;AAC/E,WAAK,QAAQ,IAAI,OAAK,CAAC,cAAc,CAAC,KAAK,EAAE,OAAO,CAAC;AACrD,WAAK,UAAU,KAAK,QAAQ,OAAO,OAAK,cAAc,CAAC,KAAK,EAAE,KAAK;AACnE,WAAK,qBAAqB;AAC1B,WAAK,QAAQ,WAAW,KACvB,KAAK,qBAAqB,IAAI;AAAA,IAChC;AAAA,IAEA,gBAAgB;AACf,WAAK,QAAQ,IAAI,CAAC,MAAM,EAAE,OAAO,IAAI,CAAC;AAEtC,WAAK,UAAU,CAAC;AAAA,IACjB;AAAA,IAEA,WAAW,WAAW;AACrB,aAAO,KAAK,QAAQ,OAAO,CAAC,MAAM;AACjC,eAAO,EAAE,SAAS,EAAE,MAAM,GAAG,aAAa;AAAA,MAC3C,CAAC,EAAE;AAAA,IACJ;AAAA,IAEA,2BAA2B;AAE1B,aAAO,EAAE;AAAA;AAAA;AAAA;AAAA,QAIH,GAAG,qBAAqB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAMtB,GAAG,cAAc;AAAA;AAAA;AAAA;AAAA,SAIlB,GAAG,eAAe;AAAA;AAAA,QAEnB,KAAK,gBACN;AAAA,UACG,GAAG,eAAe;AAAA,oBAEnB;AAAA;AAAA;AAAA,UAKP;AAAA,IAED;AAAA,IAEA,wBAAwB;AACvB,UAAI,UAAU,KAAK,YAAY,EAAE,OAAO,CAAC,KAAK,WAAW;AACxD,eAAO,OAAO,OAAO,KAAK;AAAA,WACxB,OAAO,KAAK,CAAC,OAAO,IAAI,OAAO,EAAE;AAAA,QACnC,CAAC;AAAA,MACF,GAAG,CAAC,CAAC;AACL,aAAO;AAAA,IACR;AAAA,IAEA,4BAA4B,SAAS;AACpC,UAAI,WAAW,QAAQ,QAAQ;AAC9B,aAAK,qBAAqB,KAAK;AAC/B,gBAAQ,QAAQ,CAAC,WAAW;AAC3B,eAAK,WAAW,OAAO,IAAI,OAAO,IAAI,OAAO,IAAI,OAAO,EAAE;AAAA,QAC3D,CAAC;AAAA,MACF;AAAA,IACD;AAAA,IAEA,IAAI,SAAS,UAAU,MAAM;AAC5B,UAAI,CAAC,WAAY,MAAM,QAAQ,OAAO,KAAK,QAAQ,WAAW;AAC7D,eAAO,QAAQ,QAAQ;AAExB,UAAI,OAAO,QAAQ,OAAO,UAAU;AAEnC,cAAM,SAAS,MAAM,KAAK,SAAS;AACnC,kBAAU,CAAC,MAAM;AAAA,MAClB;AAEA,gBAAU,QAAQ,OAAO,CAAC,MAAM;AAC/B,eAAO,CAAC,KAAK,OAAO,CAAC;AAAA,MACtB,CAAC;AAED,YAAM,EAAE,sBAAsB,YAAY,KAAK,oBAC9C,OACD;AAEA,aAAO,QACL,KAAK,MAAM;AACX,eACC,qBAAqB,SAAS,KAC9B,KAAK,YAAY,YAAY,oBAAoB;AAAA,MAEnD,CAAC,EACA,KAAK,MAAM;AACX,mBAAW,KAAK,UAAU,QAAQ;AAAA,MACnC,CAAC;AAAA,IACH;AAAA,EACD;;;AC1WA,SAAO,GAAG,cAAc,MAAM,YAAY;AAAA,IAEzC,YAAY,MAAM;AACjB,UAAI,MAAK;AACT,QAAE,OAAO,MAAM,IAAI;AACnB,WAAK,iBAAiB,CAAC;AACvB,WAAK,UAAU,CAAC;AAChB,WAAK,SAAS,EAAE,8BAA8B,EAC5C,SAAS,KAAK,MAAM,EACpB,GAAG,SAAS,WAAY;AAAE,UAAE,IAAI,EAAE,OAAO;AAAA,MAAG,CAAC;AAC/C,WAAK,eAAe,KAAK,OAAO,SAAS,KAAK,WAAW;AACzD,WAAK,eAAe,KAAK,OAAO,IAAI,CAAC;AACrC,WAAK,cAAc,IAAI,YAAY,KAAK,cAAc;AAAA,QACrD,UAAU;AAAA,QACV,UAAU;AAAA,QACV,WAAW;AAAA,QACX,MAAM,IAAG;AAAA,QACT,KAAK,MAAM;AACV,iBAAO,EAAE,KAAK,yDAAyD,IAAI,CAAC,EAC1E,KAAK,qBAAqB,IAAI,EAC9B,IAAI,CAAC;AAAA,QACR;AAAA,MACD,CAAC;AACD,WAAK,OAAO,GAAG,sBAAsB,SAAS,GAAG;AAChD,YAAI,IAAI,EAAE;AACV,YAAI,QAAQ,EAAE,KAAK;AACnB,YAAI,OAAO,IAAG,YAAY,SAAS,KAAK;AACxC,YAAG,mBAAmB,KAAK;AAC3B,YAAG,qBAAqB,KAAK;AAC7B,YAAG,IAAG;AAAQ,cAAG,OAAO,KAAK,SAAS,KAAK,SAAS;AAAA,MACrD,CAAC;AACD,WAAK,OAAO,GAAG,8BAA8B,SAAS,GAAG;AACxD,YAAI,IAAI,EAAE;AACV,YAAI,QAAQ,EAAE,KAAK;AACnB,YAAI,OAAO,IAAG,YAAY,SAAS,KAAK;AACxC,YAAG,OAAO,IAAI,KAAK,KAAK;AAAA,MACzB,CAAC;AAED,UAAG,KAAK,eAAe;AACtB,iBAAQ,MAAK,KAAK;AACjB,eAAK,iBAAiB,KAAK,cAAc,GAAE;AAAA,MAC7C,OAAO;AACN,aAAK,cAAc;AAAA,MACpB;AACA,WAAK,UAAU,KAAK,SAAS,MAAM;AAAA,IACpC;AAAA,IACA,YAAY;AACX,aAAO,KAAK,mBAAmB,KAAK,mBAAmB,MAAM,KAAK,qBAAqB;AAAA,IACxF;AAAA,IACA,IAAI,OAAO;AACV,UAAG,UAAQ,QAAW;AACrB,eAAO,KAAK,UAAU;AAAA,MACvB,OAAO;AACN,aAAK,UAAU,KAAK;AAAA,MACrB;AAAA,IACD;AAAA,IACA,QAAQ;AACP,WAAK,mBAAmB;AACxB,WAAK,qBAAqB;AAC1B,WAAK,OAAO,IAAI,EAAE;AAAA,IACnB;AAAA,IACA,UAAU,SAAS,WAAW;AAC7B,UAAI,MAAK;AACT,WAAK,MAAM;AACX,UAAG,CAAC;AAAS;AAGb,UAAG,QAAQ,QAAQ,GAAG,MAAI,IAAI;AAC7B,YAAI,QAAQ,QAAQ,MAAM,GAAG;AAC7B,kBAAU,MAAM;AAChB,oBAAY,MAAM;AAAA,MACnB;AAEA,QAAE,KAAK,KAAK,SAAS,SAAS,IAAG,GAAG;AACnC,YAAG,EAAE,YAAU,WAAW,EAAE,cAAY,WAAW;AAClD,cAAG,mBAAmB;AACtB,cAAG,qBAAqB;AACxB,cAAG,OAAO,IAAI,EAAE,KAAK;AACrB,iBAAO;AAAA,QACR;AAAA,MACD,CAAC;AAAA,IACF;AAAA,IACA,gBAAgB;AACf,UAAI,MAAK;AACT,UAAG,eAAe,CAAC;AACnB,UAAI,cAAc,EAAE,IAAI,OAAO,MAAM,YAAY,SAAS,GAAG;AAC5D,YAAI,OAAO,EAAC,QAAQ,IAAG,QAAO;AAC9B,YAAG,EAAE,aAAW;AAAQ,eAAK,UAAU,IAAG;AAC1C,eAAO,EAAE,OAAO,UAAU,CAAC,GAAG,IAAI;AAAA,MACnC,CAAC;AAGD,UAAI,cAAc,OAAO,WAAW,IAAG;AACvC,UAAG,eAAe,KAAK,YAAY,OAAO,GAAG;AAC5C,sBAAc,YAAY,OAAO,CAAC;AAAA,UACjC,WAAW;AAAA,UACX,WAAW;AAAA,UACX,OAAO;AAAA,UACP,QAAQ,IAAG;AAAA,QACZ,CAAC,CAAC;AAAA,MACH;AAGA,UAAG,KAAK,YAAY;AACnB,aAAK,QAAQ,KAAK;AAAA,UACjB,OAAM;AAAA,UACN,OAAM;AAAA,QACP,CAAC;AAAA,MACF;AAGA,UAAI,oBAAoB,YAAY,OAAO,OAAO,KAAK,cAAc,IAAG,QAAQ;AAChF,QAAE,KAAK,OAAO,MAAM,KAAK,mBAAmB,SAAS,QAAQ,GAAG,SAAS,IAAG,IAAI;AAC/E,YAAI,UAAU,OAAO,SAAS,IAAG,OAAO,EAAE,WAAW,IAAG,iBACvD,IAAG,iBAAiB,IAAG;AAGxB,YAAI,OAAO,KAAK,SAAS,SAAS,GAAG,WAAW,MAAM;AACrD,cAAG,iBAAiB,EAAE;AAAA,MACxB,CAAC;AAGD,QAAE,KAAK,IAAG,cAAc,SAAS,IAAG,UAAU;AAC7C,YAAG,SAAS,SAAS;AACpB,cAAI,qBAAqB,CAAC,EAAE,OAAO,OAAO,KAAK,cAAc,SAAS,QAAQ;AAE9E,cAAI,SAAS,cAAc,qBAAqB;AAC/C,kBAAM,aAAa,OAAO,KAAK,cAAc,SAAS,OAAO,EAC3D,KAAK,QAAM,GAAG,cAAc,MAAM;AACpC,iCAAqB,aAAa,CAAC,UAAU,IAAI,CAAC;AAAA,UACnD;AAEA,YAAE,KAAK,OAAO,MAAM,KAAK,oBAAoB,SAAS,QAAQ,GAAG,SAAS,IAAG,IAAI;AAChF,gBAAI,UAAU,OAAO,SAAS,IAAG,OAAO,EAAE,WAAW,IAAG,iBACvD,IAAG,iBAAiB,IAAG;AAGxB,gBAAI,OAAO,KAAK,SAAS,SAAS,GAAG,WAAW,MAAM;AACrD,kBAAG,iBAAiB,EAAE;AAAA,UACxB,CAAC;AAAA,QACF;AAAA,MACD,CAAC;AAAA,IACF;AAAA,IAEA,iBAAiB,IAAI;AACpB,UAAI,MAAK;AAET,UAAI,GAAG,aAAa,eAAe,CAAC,OAAO,MAAM,eAAe,IAAG,OAAO;AACzE;AAED,UAAI,OAAO,MAAM,aAAa,SAAS,GAAG,SAAS,GAAG;AACrD,YAAG,aAAa,KAAK,EAAE;AACvB;AAAA,MACD;AAEA,UAAI,QAAQ;AACZ,UAAI,QAAQ;AAEZ,UAAG,IAAG,WAAW,GAAG,UAAQ,IAAG,SAAS;AACvC,gBAAQ,GAAG,GAAG,KAAK;AACnB,gBAAQ,IAAG;AAAA,MACZ,OAAO;AACN,gBAAQ,GAAG,GAAG,KAAK,IAAI,OAAO,GAAG,GAAG,MAAM,IAAI;AAC9C,gBAAQ,GAAG;AAAA,MACZ;AAEA,UAAG,OAAO,MAAM,cAAc,QAAQ,GAAG,SAAS,KAAK,MACtD,CAAE,KAAG,eAAe,GAAG,WAAW,IAAG,eAAe,GAAG,QAAQ,GAAG,aAAa;AAC/E,aAAK,QAAQ,KAAK;AAAA,UACjB;AAAA,UACA,OAAO,QAAQ,MAAM,GAAG;AAAA,UACxB,WAAW,GAAG;AAAA,UACd,SAAS,GAAG;AAAA,QACb,CAAC;AACD,YAAG,CAAC,IAAG,eAAe,GAAG;AAAS,cAAG,eAAe,GAAG,UAAU,CAAC;AAClE,YAAG,eAAe,GAAG,QAAQ,GAAG,aAAa;AAAA,MAC9C;AAAA,IACD;AAAA,EACD;;;AClLC,SAAO,UAAU,iBAAiB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;;ACEnC,SAAO,GAAG,OAAO,MAAM;AAAA,IACtB,YAAY;AAAA,MACX;AAAA,MAAQ;AAAA,MAAa;AAAA,MACrB;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,OACE;AACF,WAAK,WAAW,YAAY,CAAC;AAC7B,WAAK,WAAW;AAChB,WAAK,cAAc;AACnB,WAAK,aAAa;AAClB,WAAK,WAAW;AAEhB,WAAK,MAAM,QAAQ,WAAW;AAAA,IAC/B;AAAA,IAEA,MAAM,QAAQ,aAAa;AAC1B,WAAK,MAAM;AACX,WAAK,SAAS,EAAE,iDAAiD;AAEjE,WAAK,gBAAgB,KAAK,iBAAiB,KAAK,MAAM;AACtD,WAAK,eAAe,KAAK,iBAAiB,EAAE,6CAA6C,oBAAoB,CAAC;AAC9G,WAAK,cAAc,SAAS,KAAK,GAAG;AACpC,WAAK,aAAa,SAAS,KAAK,GAAG;AAEnC,WAAK,WAAW;AAChB,WAAK,KAAK;AACV,WAAK,KAAK;AAAA,IACX;AAAA,IAEA,OAAO;AACN,YAAM,MAAK;AACX,YAAM,aAAa,WAAW;AAC7B,cAAM,WAAW,OAAO,MAAM,aAAa,IAAG,OAAO,IAAI,CAAC;AAC1D,YAAG,OAAO,QAAQ;AAClB,YAAG,OAAO,IAAI,EAAE;AAAA,MACjB;AAEA,WAAK,OAAO,SAAS,CAAC,MAAM;AAC3B,YAAI,EAAE,SAAS,MAAM,EAAE,WAAW;AAAI,qBAAW;AAAA,MAClD,CAAC;AACD,WAAK,OAAO,SAAS,UAAU;AAE/B,WAAK,OAAO,GAAG,QAAQ,MAAM;AAC5B,aAAK,WAAW;AAAA,MACjB,CAAC;AAED,WAAK,aAAa,GAAG,SAAS,MAAM;AACnC,aAAK,SAAS;AACd,aAAK,OAAO,MAAM;AAAA,MACnB,CAAC;AAAA,IACF;AAAA,IAEA,OAAO;AACN,WAAK,QAAQ,KAAK,QAAQ;AAAA,IAC3B;AAAA,IAEA,WAAW;AACV,WAAK,aAAa,KAAK;AACvB,WAAK,cAAc,KAAK;AAAA,IACzB;AAAA,IAEA,aAAa;AACZ,WAAK,cAAc,KAAK;AACxB,WAAK,aAAa,KAAK;AAAA,IACxB;AAAA,IAEA,OAAO,OAAO;AACb,UAAI,SAAS,UAAS,MAAM,CAAC,KAAK,SAAS,SAAS,KAAK,GAAG;AAC3D,YAAI,OAAO,KAAK,QAAQ,KAAK;AAC7B,YAAI,MAAM,KAAK,iBAAiB,MAAM,cAAc;AACpD,YAAI,aAAa,KAAK,aAAa;AACnC,aAAK,SAAS,KAAK,KAAK;AACxB,aAAK,YAAY,KAAK,SAAS,KAAK;AAAA,MACrC;AAAA,IACD;AAAA,IAEA,UAAU,OAAO;AAChB,cAAQ,OAAO,MAAM,aAAa,KAAK;AACvC,UAAG,KAAK,SAAS,SAAS,KAAK,GAAG;AACjC,aAAK,SAAS,OAAO,KAAK,SAAS,QAAQ,KAAK,GAAG,CAAC;AACpD,aAAK,eAAe,KAAK,YAAY,KAAK;AAAA,MAC3C;AAAA,IACD;AAAA,IAEA,QAAQ,QAAQ;AACf,aAAO,IAAI,KAAK,OAAO,KAAK,IAAI,CAAC;AAAA,IAClC;AAAA,IAEA,YAAY;AACX,WAAK,IAAI,KAAK,eAAe,EAAE,OAAO;AACtC,WAAK,WAAW,CAAC;AAAA,IAClB;AAAA,IAEA,iBAAiB,UAAU,aAAW,IAAI;AACzC,UAAI,MAAM,EAAE,cAAc,mBAAmB;AAC7C,eAAS,SAAS,GAAG;AACrB,aAAO;AAAA,IACR;AAAA,IAEA,QAAQ,OAAO;AACd,UAAI,OAAO,OAAO,cAAc,OAAO,OAAO,CAAC,QAAQ,iBAAiB;AACvE,aAAK,UAAU,MAAM;AACrB,qBAAa,QAAQ,eAAe,EAAE,OAAO;AAAA,MAC9C,CAAC;AAED,UAAI,KAAK,YAAY;AACpB,aAAK,GAAG,SAAS,eAAe,MAAM;AACrC,eAAK,WAAW,KAAK;AAAA,QACtB,CAAC;AAAA,MACF;AAEA,aAAO;AAAA,IACR;AAAA,EACD;;;ACtHA,SAAO,GAAG,YAAY,MAAM,UAAU;AAAA,IACrC,YAAY,MAAM;AASjB,QAAE,OAAO,MAAM,IAAI;AAEnB,WAAK,WAAW;AAEhB,UAAI,CAAC,KAAK,WAAW;AACpB,aAAK,YAAY;AAAA,MAClB;AACA,WAAK,cAAc;AACnB,WAAK,QAAQ,KAAK,SAAS;AAAA,IAC5B;AAAA,IACA,aAAa;AACZ,UAAI,MAAK;AAGT,UAAI,CAAC,KAAK,QAAQ;AACjB;AAAA,MACD;AAEA,WAAK,UAAU,KAAK;AACpB,UAAI,CAAC,KAAK,QAAQ;AAAQ;AAE1B,WAAK,OAAO,IAAI,OAAO,GAAG,KAAK;AAAA,QAC9B,QAAQ,KAAK;AAAA,QACb,aAAa,GAAG,eAAe;AAAA,QAC/B,UAAU,CAAC,QAAQ;AAClB,cAAG,IAAG,eAAe,CAAC,IAAG,YAAY;AACpC,mBAAO,OAAO,KAAK;AAAA,cAClB,QAAQ;AAAA,cACR,MAAM,IAAG,SAAS,GAAG;AAAA,cACrB,UAAU,SAAS,GAAG;AACrB,oBAAI,YAAY,IAAG,YAAY,IAAG,UAAU,MAAM,GAAG,IAAI,CAAC;AAC1D,0BAAU,KAAK,GAAG;AAClB,oBAAG,YAAY,UAAU,KAAK,GAAG;AACjC,oBAAG,aAAa,IAAG,UAAU,IAAG,SAAS;AACzC,uBAAO,KAAK,MAAM,WAAW;AAAA,cAC9B;AAAA,YACD,CAAC;AAAA,UACF;AAAA,QACD;AAAA,QACA,aAAa,CAAC,QAAQ;AACrB,cAAG,CAAC,IAAG,YAAY;AAClB,mBAAO,OAAO,KAAK;AAAA,cAClB,QAAQ;AAAA,cACR,MAAM,IAAG,SAAS,GAAG;AAAA,cACrB,UAAU,SAAS,GAAG;AACrB,oBAAI,YAAY,IAAG,UAAU,MAAM,GAAG;AACtC,0BAAU,OAAO,UAAU,QAAQ,GAAG,GAAG,CAAC;AAC1C,oBAAG,YAAY,UAAU,KAAK,GAAG;AACjC,oBAAG,aAAa,IAAG,UAAU,IAAG,SAAS;AACzC,uBAAO,KAAK,MAAM,WAAW;AAAA,cAC9B;AAAA,YACD,CAAC;AAAA,UACF;AAAA,QACD;AAAA,MACD,CAAC;AACD,WAAK,kBAAkB;AACvB,WAAK,iBAAiB;AAAA,IACvB;AAAA,IACA,oBAAoB;AACnB,UAAI,MAAK;AACT,UAAI,SAAS,KAAK,QAAQ,KAAK,kBAAkB;AACjD,UAAI,QAAQ,OAAO,IAAI,CAAC;AACxB,WAAK,cAAc,IAAI,YAAY,OAAO;AAAA,QACzC,UAAU;AAAA,QACV,UAAU;AAAA,QACV,MAAM,CAAC;AAAA,MACR,CAAC;AACD,aAAO,GAAG,oBAAoB,SAAS,GAAE;AACxC,eAAO,KAAK,SAAS,MAAM;AAAA,MAC5B,CAAC;AACD,aAAO,GAAG,qBAAqB,SAAS,GAAE;AACzC,eAAO,KAAK,SAAS,QAAQ;AAAA,MAC9B,CAAC;AACD,aAAO,GAAG,SAAS,SAAS,GAAG;AAC9B,YAAI,QAAQ,EAAE,OAAO;AACrB,eAAO,KAAK;AAAA,UACX,QAAQ;AAAA,UACR,MAAK;AAAA,YACJ,SAAS,IAAG,IAAI;AAAA,YAChB,KAAK,MAAM,YAAY;AAAA,UACxB;AAAA,UACA,UAAU,SAAS,GAAG;AACrB,gBAAG,YAAY,OAAO,EAAE;AAAA,UACzB;AAAA,QACD,CAAC;AAAA,MACF,CAAC;AACD,aAAO,GAAG,SAAS,SAAS,GAAG;AAC9B,YAAG,OAAO,KAAK,OAAO,KAAK,QAAQ;AAClC,iBAAO,QAAQ,OAAO;AAAA,QACvB;AAAA,MACD,CAAC;AAAA,IACF;AAAA,IACA,SAAS,KAAK;AACb,aAAO;AAAA,QACN;AAAA,QACA,IAAI,KAAK,IAAI;AAAA,QACb,IAAI,KAAK,IAAI;AAAA,MACd;AAAA,IACD;AAAA,IACA,QAAQ,WAAW;AAClB,UAAI,MAAK;AACT,UAAI,CAAC,KAAK,eAAe,CAAC,KAAK,kBAAkB,KAAK;AAAY;AAElE,UAAG,aAAa;AAChB,UAAI;AACH,YAAG,KAAK,UAAU;AAClB,YAAG,WAAW;AACb,cAAG,YAAY;AACf,cAAG,KAAK,QAAQ,UAAU,MAAM,GAAG,CAAC;AAAA,QACrC;AAAA,MACD,SAAQ,GAAN;AACD,YAAG,aAAa;AAEhB,mBAAY,WAAW;AAAE,cAAG,QAAQ;AAAA,QAAG,GAAG,GAAG;AAAA,MAC9C;AACA,UAAG,aAAa;AAAA,IAEjB;AAAA,EACD;;;AC7HA,SAAO,GAAG,WAAW,SAAS,KAAK;AAClC,QAAI,QAAQ,OAAO,GAAG,aAAa,GAAG;AACtC,WAAO,MAAM,QAAQ,OAAO,QAAQ,IAAI,MAAI,KAAK,QAAQ;AAAA,EAC1D;AAEA,SAAO,GAAG,eAAe,SAAS,KAAK;AACtC,QAAI,QAAQ,IAAI;AAChB,QAAG,OAAO;AACT,cAAQ,KAAK,MAAM,KAAK;AAAA,IACzB;AAEA,WAAO,SAAS,CAAC;AAAA,EAClB;AAEA,SAAO,GAAG,cAAc,SAAS,MAAM,SAAS,MAAM,UAAU;AAC/D,QAAI,MAAM,KAAK,SAAS,WAAW,IAAI,QAAQ;AAE/C,SAAK,IAAI,kBAAkB,MAAM;AAEjC,WAAO,KAAK;AAAA,MACX,QAAQ;AAAA,MACR,OAAO;AAAA,MACP,MAAM;AAAA,QACL;AAAA,QACA;AAAA,QACA;AAAA,MACD;AAAA,MACA,UAAU,SAAS,GAAG;AAErB,aAAK,IAAI,kBAAkB,MAAM;AAEjC,YAAG,CAAC,EAAE,KAAK;AAEV,cAAI,iBAAiB,EAAE,6BAA4B,KAAK,QAAQ,MAAM,GAAI,IACxE,sBAAqB,QAAQ,QAAQ,MAAM,GAAI,IAAE,IAAI;AAEvD,cAAG,QAAM,OAAO;AACf,2BAAe,YAAY,WAAW,EAAE,SAAS,OAAO;AAAA,UACzD,OAAO;AACN,2BAAe,SAAS,WAAW,EAAE,YAAY,OAAO;AAAA,UACzD;AAGA,cAAI,MAAM,OAAO,YAAY,OAAO,SAAS;AAC7C,cAAG,KAAK;AACP,gBAAI,WAAW,KAAK,MAAM,IAAI,aAAa,IAAI,GAC9C,MAAM,SAAS,QAAQ,OAAO,QAAQ,IAAI;AAC3C,gBAAG,QAAM,OAAO;AACf,kBAAG,QAAM;AACR,yBAAS,KAAK,OAAO,QAAQ,IAAI;AAAA,YACnC,OAAO;AACN,kBAAG,QAAM,IAAI;AACZ,2BAAW,SAAS,MAAM,GAAE,GAAG,EAAE,OAAO,SAAS,MAAM,MAAI,CAAC,CAAC;AAAA,cAC9D;AAAA,YACD;AACA,gBAAI,YAAY,KAAK,UAAU,QAAQ;AAAA,UACxC;AAEA,cAAG,UAAU;AACZ,qBAAS;AAAA,UACV;AAAA,QACD;AAAA,MACD;AAAA,IACD,CAAC;AAAA,EACF;AAEA,SAAO,GAAG,oBAAoB,WAAW;AACxC,QAAI,OAAO,EAAE,IAAI;AACjB,QAAI,SAAS,KAAK,SAAS,cAAc;AACzC,QAAI,YAAY,KAAK,SAAS,WAAW;AACzC,QAAI,UAAU,KAAK,KAAK,cAAc;AACtC,QAAI,OAAO,KAAK,KAAK,WAAW;AAEhC,WAAO,GAAG,YAAY,MAAM,SAAS,MAAM,WAAW;AACrD,UAAI,WAAW;AACd,eAAO,KAAK,KAAK,OAAO,KAAK,CAAC,IAAI,CAAC;AAAA,MACpC,OAAO;AACN,eAAO,KAAK,KAAK,OAAO,KAAK,CAAC,IAAI,CAAC;AAAA,MACpC;AAAA,IACD,CAAC;AAED,WAAO;AAAA,EACR;AAEA,SAAO,GAAG,qBAAqB,CAAC,SAAS,UAAU,kBAAgB,SAAS;AAC3E,QAAI,OAAO,IAAI,eAAe,GAAG;AAChC;AAAA,IACD;AAEA,YAAQ,GAAG,aAAa,UAAU,WAAW;AAC5C,YAAM,iBAAiB,EAAE,IAAI;AAC7B,qBAAe,QAAQ;AAAA,QACtB,WAAW;AAAA,QACX,WAAW;AAAA,QACX,SAAS;AAAA,QACT,UAAU;AAAA;AAAA;AAAA;AAAA,QAIV,SAAS,MAAM;AACd,cAAI,WAAW,eAAe,QAAQ,WAAW,EAAE,KAAK,eAAe;AACvE,qBAAW,WAAW,UAAU,QAAQ,IAAI;AAC5C,qBAAW,KAAK,MAAM,QAAQ;AAE9B,gBAAM,OAAO,OAAO,QAAQ;AAE5B,cAAI,iBAAiB;AACpB,gBAAI,eAAe,QAAQ,WAAW,EAAE,KAAK,YAAY,EAAE,QAAQ;AAClE,kBAAI,SAAS,QAAQ,IAAI,MAAI,IAAI;AAChC,yBAAS,OAAO,SAAS,QAAQ,IAAI,GAAG,CAAC;AAAA,cAC1C;AAAA,YACD,OAAO;AACN,kBAAI,SAAS,QAAQ,IAAI,MAAI,IAAI;AAChC,yBAAS,KAAK,IAAI;AAAA,cACnB;AAAA,YACD;AAAA,UACD;AAEA,cAAI,CAAC,SAAS,QAAQ;AACrB,mBAAO;AAAA,UACR;AAEA,cAAI,gBAAgB,EAAE,iCAAiC;AAGvD,cAAI,YAAY;AAEhB,mBAAS,QAAQ,WAAQ;AAExB,0BAAc,OAAO;AAAA,sBACJ,SAAQ,OAAO,OAAO,OAAM,WAAW;AAAA,eAC9C,OAAO,KAAK,UAAU,KAAI;AAAA;AAAA,MAEnC;AAAA,UACF,CAAC;AAED,wBAAc,SAAS,IAAI,EAAE,MAAM,QAAM;AACxC,gBAAI,QAAO,GAAG,cAAc,QAAQ;AACpC,2BAAe,QAAQ,MAAM;AAC7B,mBAAO,UAAU,YAAY,KAAI;AAAA,UAClC,CAAC;AAED,iBAAO;AAAA,QACR;AAAA,QACA,MAAM;AAAA,QACN,WAAW;AAAA,MACZ,CAAC;AAED,qBAAe,QAAQ,MAAM;AAE7B,QAAE,UAAU,EAAE,GAAG,cAAc,MAAM;AACpC,uBAAe,QAAQ,MAAM;AAAA,MAC9B,CAAC;AAED,qBAAe,GAAG,YAAY,MAAM;AACnC,mBAAW,MAAM;AAChB,cAAI,CAAC,EAAE,gBAAgB,EAAE,QAAQ;AAChC,2BAAe,QAAQ,MAAM;AAAA,UAC9B;AAAA,QACD,GAAG,GAAG;AAAA,MACP,CAAC;AAAA,IACF,CAAC;AAAA,EAEF;;;ACrKC,SAAO,UAAU,oBAAoB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;;ACDtC,SAAO,QAAQ,cAAc;AAE7B,SAAO,MAAM,WAAW,MAAM,SAAS;AAAA,IACtC,YAAY,MAAM;AACjB,aAAO,OAAO,MAAM,IAAI;AAAA,IACzB;AAAA,IAEA,OAAO;AACN,aAAO,OAAO,aAAa;AAAA,QAC1B,MAAM,KAAK,cAAc;AAAA,QACzB,MAAM,KAAK,WAAW;AAAA,QACtB,MAAM,KAAK,cAAc;AAAA,QACzB,MAAM,KAAK,kBAAkB;AAAA,QAC7B,MAAM,KAAK,KAAK;AAAA,QAChB,MAAM,KAAK,eAAe;AAAA,QAC1B,MAAM,KAAK,QAAQ;AAAA,MACpB,CAAC;AAAA,IACF;AAAA,IAEA,OAAO;AACN,UAAI,KAAK;AAAc,eAAO,KAAK;AAEnC,UAAI,QAAQ;AAAA,QACX,KAAK;AAAA,QACL,KAAK;AAAA,QACL,KAAK;AAAA,QAEL,KAAK;AAAA,QACL,KAAK;AAAA,QACL,KAAK;AAAA,QACL,KAAK;AAAA,QACL,KAAK;AAAA,MACN,EAAE,IAAI,CAAC,OAAO,GAAG,KAAK,IAAI,CAAC;AAE3B,WAAK,eAAe,OAAO,aAAa,KAAK;AAC7C,aAAO,KAAK;AAAA,IACb;AAAA,IAEA,iBAAiB;AAChB,WAAK,YAAY,OAAO,cAAc;AACtC,WAAK,aAAa,KAAK,cAAc,OAAO,OAAO,kBAAkB,GAAG,KAAK,OAAO;AACpF,WAAK,OAAO,OAAO,SAAS,KAAK,OAAO;AACxC,WAAK,WAAW,OAAO,kBAAkB,KAAK,YAAY,CAAC;AAC3D,WAAK,gBAAgB,OAAO,kBAAkB,KAAK,OAAO;AAE1D,WAAK,QAAQ;AACb,WAAK,cAAc;AACnB,WAAK,OAAO,CAAC;AACb,WAAK,SAAS;AAEd,WAAK,aAAa,OAAO,MAAM,WAAW,KAAK,OAAO;AACtD,WAAK,YAAY,OAAO,MAAM,UAAU,KAAK,OAAO;AAEpD,WAAK,SAAS,CAAC;AACf,WAAK,UAAU,CAAC;AAChB,WAAK,UAAU;AACf,WAAK,aAAa;AAGlB,WAAK,iBAAiB;AACtB,WAAK,mBAAmB;AAExB,WAAK,aAAa;AAAA,QACjB;AAAA,UACC,OAAO,GAAG,SAAS;AAAA,UACnB,QAAQ,MAAM,KAAK,QAAQ;AAAA,UAC3B,OAAO;AAAA,QACR;AAAA,MACD;AAAA,IACD;AAAA,IAEA,eAAe;AACd,WAAK,WAAW;AAChB,WAAK,aAAa;AAAA,IACnB;AAAA,IAEA,aAAa;AACZ,UAAI,SAAS,CAAC,EAAE,OACf,OAAO,MAAM,iBACb,KAAK,KAAK,WACX;AAEA,aAAO,QAAQ,CAAC,MAAM,KAAK,WAAW,CAAC,CAAC;AAAA,IACzC;AAAA,IAEA,0BAA0B;AACzB,aAAO,KAAK,KAAK,OAAO,OAAO,CAAC,OAAO;AACtC,eACE,OAAO,MAAM,cAAc,GAAG,SAAS,KACtC,IAAG,gBACH,OAAO,KAAK,SACX,KAAK,SACL,GAAG,WACH,MACD,MACD,GAAG,cAAc,cACjB,GAAG,WACH,CAAC,GAAG,QAAQ,SAAS,GAAG,KACzB,GAAG,cAAc;AAAA,MAEnB,CAAC;AAAA,IACF;AAAA,IAEA,eAAe;AAEd,WAAK,SAAS,KAAK,OAAO,IAAI,CAAC,MAAM;AACpC,YAAI,OAAO,MAAM,UAAU;AAC1B,cAAI,CAAC,GAAG,KAAK,OAAO;AAAA,QACrB;AACA,eAAO;AAAA,MACR,CAAC;AAED,WAAK,SAAS,KAAK,OAAO,OAAO,OAAO;AAExC,WAAK,SAAS,KAAK,OAAO,OAAO,CAAC,MAAM,EAAE,KAAK,EAAE,EAAE;AAAA,IACpD;AAAA,IAEA,WAAW,WAAW,SAAS;AAC9B,UAAI,CAAC;AAAW;AAEhB,UAAI,CAAC;AAAS,kBAAU,KAAK;AAE7B,UAAI,OAAO,cAAc,UAAU;AAElC,cAAM,KAAK;AACX,oBAAY,GAAG;AACf,kBAAU,GAAG,UAAU;AAAA,MACxB;AAEA,UAAI,CAAC,KAAK;AAAQ,aAAK,SAAS,CAAC;AACjC,YAAM,iBACL,OAAO,MAAM,gBAAgB,SAAS,SAAS,KAC/C,OAAO,KAAK,UAAU,SAAS,SAAS,KACxC,cAAc;AAEf,UAAI,CAAC,gBAAgB;AACpB;AAAA,MACD;AAEA,WAAK,OAAO,KAAK,CAAC,WAAW,OAAO,CAAC;AAAA,IACtC;AAAA,IAEA,YAAY;AACX,WAAK,QAAQ,CAAC,YAAY;AAE1B,WAAK,2BAA2B,OAAO,SAAS,oBAC/C,KAAK,OACN;AACA,UAAI,KAAK,0BAA0B;AAClC,YAAI,CAAC,OAAO,SAAS,UAAU,KAAK,SAAS,oBAAoB;AAChE,eAAK,WAAW,KAAK,wBAAwB;AAAA,QAC9C;AACA,aAAK,MAAM,KAAK,KAAK,wBAAwB;AAAA,MAC9C;AAAA,IACD;AAAA,IAEA,aAAa;AACZ,aAAO,OAAO,MAAM,aAAa,KAAK,OAAO;AAAA,IAC9C;AAAA,IAEA,gBAAgB;AAAA,IAEhB;AAAA,IAEA,gBAAgB;AAAA,IAEhB;AAAA,IAEA,oBAAoB;AACnB,aAAO;AAAA,IACR;AAAA,IAEA,aAAa;AACZ,WAAK,OAAO,KAAK,OAAO;AACxB,WAAK,QAAQ,EAAE,KAAK,MAAM;AAC1B,OAAC,KAAK,oBAAoB,KAAK,KAAK,KAAK,SAAS,aAAa;AAC/D,WAAK,KAAK,UAAU,YAAY,KAAK,EAAE,SAAS,MAAM;AACtD,WAAK,kBAAkB,KAAK,KAAK,UAAU,KAAK;AAChD,WAAK,gBAAgB,KAAK,MAAM,SAAS,iBAAiB;AAC1D,WAAK,gBAAgB;AAAA,IACtB;AAAA,IAEA,kBAAkB;AACjB,WAAK,UAAU;AACf,WAAK,eAAe;AACpB,WAAK,gBAAgB;AAAA,IACtB;AAAA,IAEA,YAAY;AACX,WAAK,KAAK,UAAU,KAAK,UAAU;AAAA,IACpC;AAAA,IAEA,kBAAkB;AAEjB,YAAM,WAAW;AAAA,QAChB,SAAS;AAAA,QACT,QAAQ;AAAA,QACR,UAAU;AAAA,QACV,YAAY;AAAA,QACZ,SAAS;AAAA,QACT,UAAU;AAAA,QACV,aAAa;AAAA,QACb,OAAO;AAAA,MACR;AAEA,UAAI,OAAO,KAAK,cAAc,eAAe;AAC5C,AAKA,aAAK,aAAa,KAAK,KAAK,wBAAwB,GAAG,YAAY,CAAC,KAAK,SAAS,CAAC,GAClF,SAAS,KAAK,cAAc,MAAM;AACnC,aAAK,aAAa,IAAI,OAAO,MAAM,eAAe;AAAA,UACjD,SAAS,KAAK;AAAA,UACd,QAAQ,KAAK;AAAA,UACb,MAAM,KAAK;AAAA,UACX,WAAW;AAAA,UACX,SAAS,KAAK;AAAA,UACd;AAAA,QACD,CAAC;AAAA,MACF;AAAA,IACD;AAAA,IAEA,+BAA+B;AAC9B,UAAI,KAAK,kBAAkB;AAC1B,cAAM,oBAAoB,KAAK,KAAK,qBACnC,KAAK,iBAAiB,OACtB,KAAK,iBAAiB,QACtB,KAAK,iBAAiB,IACvB;AACA,YAAI,CAAC,KAAK,iBAAiB,MAAM;AAChC,4BAAkB,SAAS,WAAW;AAAA,QACvC,WAAW,CAAC,KAAK,iBAAiB,OAAO;AACxC,4BAAkB,SAAS,YAAY;AAAA,QACxC;AAAA,MACD,OAAO;AACN,aAAK,iBAAiB,KAAK,KAAK,gBAAgB,WAAW,MAAM;AAChE,eAAK,QAAQ;AAAA,QACd,CAAC;AAAA,MACF;AAAA,IACD;AAAA,IAEA,iBAAiB;AAChB,WAAK,6BAA6B;AAElC,WAAK,cAAc,KAAK,WAAW,IAAI,CAAC,SAAS;AAChD,YAAI,KAAK,aAAa,KAAK,UAAU,MAAM,OAAO;AACjD;AAAA,QACD;AACA,cAAM,QAAQ,KAAK,KAAK,cACvB,KAAK,OACL,KAAK,QACL,KAAK,UACL,KAAK,QACN;AACA,YAAI,KAAK,OAAO;AACf,mBAAS,MAAM,SAAS,KAAK,KAAK;AAAA,QACnC;AAAA,MACD,CAAC;AAAA,IACF;AAAA,IAEA,kBAAkB;AACjB,aAAO,YAAY,IAAI,KAAK,KAAK,QAAQ,KAAK,OAAO;AAAA,IACtD;AAAA,IAEA,iBAAiB;AAChB,UAAI,KAAK,gBAAgB,CAAC,OAAO,KAAK,cAAc;AAAc;AAClE,WAAK,eAAe,IAAI,OAAO,MAAM,YAAY;AAAA,QAChD,SAAS,KAAK;AAAA,QACd,OAAO,KAAK;AAAA,QACZ,QAAQ,KAAK,MAAM,KAAK,sBAAsB;AAAA,QAC9C,MAAM,KAAK;AAAA,QACX,WAAW;AAAA,MACZ,CAAC;AAAA,IACF;AAAA,IAEA,gBAAgB,MAAM;AACrB,UAAI,eAAe,QAAQ,KAAK,MAAM,aAAa,gBAAgB,MAAM;AACzE,qBAAe,CAAC;AAChB,mBAAa,eAAe;AAC5B,WAAK,qBAAqB;AAC1B,QAAE,SAAS,IAAI,EAAE,QAAQ,mBAAmB;AAAA,IAC7C;AAAA,IAEA,uBAAuB;AACtB,UAAI,eAAe,KAAK,MAAM,aAAa,gBAAgB,MAAM;AACjE,QAAE,SAAS,IAAI,EAAE,YAAY,mBAAmB,CAAC,YAAY;AAAA,IAC9D;AAAA,IAEA,qBAAqB;AACpB,aAAO,OAAO,aACb;AAAA,QACC,KAAK;AAAA,QACL,KAAK;AAAA,QACL,KAAK;AAAA,QACL,KAAK;AAAA,QACL,KAAK;AAAA,QACL,KAAK;AAAA,QACL,KAAK;AAAA,QACL,KAAK;AAAA,MACN,EAAE,IAAI,CAAC,OAAO,GAAG,KAAK,IAAI,CAAC,CAC5B;AAAA,IACD;AAAA,IAEA,qBAAqB;AACpB,WAAK,eAAe,EAAE,2BAA2B,EAAE,SAClD,KAAK,KAAK,IACX;AAAA,IACD;AAAA,IAEA,oBAAoB;AACnB,UAAI,KAAK;AAAc;AACvB,WAAK,cAAc,IAAI,WAAW,IAAI;AAEtC,UAAI,KAAK,WAAW,KAAK,QAAQ,SAAS,GAAG;AAC5C,eAAO,KAAK,YAAY,IAAI,KAAK,OAAO;AAAA,MACzC;AAAA,IACD;AAAA,IAEA,sBAAsB;AACrB,UAAI,KAAK;AAAoB;AAC7B,WAAK,gBAAgB,IAAI,OAAO,GAAG,aAAa;AAAA,QAC/C,QAAQ,KAAK;AAAA,QACb,SAAS,KAAK;AAAA,QACd,MAAM;AAAA,UACL,SAAS,KAAK;AAAA,UACd,YAAY,KAAK;AAAA,QAClB;AAAA,QACA,UAAU,KAAK,eAAe,KAAK,IAAI;AAAA,MACxC,CAAC;AAAA,IACF;AAAA,IAEA,iBAAiB;AAChB,WAAK,QAAQ;AAAA,IACd;AAAA,IAEA,oBAAoB;AACnB,WAAK,UAAU,EAAE,sBAAsB;AACvC,WAAK,aAAa,OAAO,KAAK,OAAO;AAAA,IACtC;AAAA,IAEA,uBAAuB;AACtB,WAAK,aAAa,EAAE;AAAA;AAAA,MAEhB,KAAK,sBAAsB;AAAA;AAAA,GAE9B,EAAE,KAAK;AACR,WAAK,aAAa,OAAO,KAAK,UAAU;AAAA,IACzC;AAAA,IAEA,oBAAoB;AACnB,WAAK,UAAU,EAAE,4BAA4B,EAAE,KAAK;AACpD,WAAK,aAAa,OAAO,KAAK,OAAO;AAAA,IACtC;AAAA,IAEA,wBAAwB;AACvB,aAAO,GAAG,iBAAiB;AAAA,IAC5B;AAAA,IAEA,oBAAoB;AACnB,YAAM,gBAAgB,CAAC,IAAI,KAAK,GAAG;AACnC,WAAK,eAAe,EACnB;AAAA;AAAA;AAAA,QAGK,cAAc,IAAI,CAAC,UAAU;AAAA;AAAA,sBAEf;AAAA,UACZ;AAAA;AAAA,OAEH,EAAE,KAAK,EAAE;AAAA;AAAA;AAAA;AAAA;AAAA,QAKR,GAAG,WAAW;AAAA;AAAA;AAAA,UAIpB,EAAE,KAAK;AACP,WAAK,aAAa,OAAO,KAAK,YAAY;AAG1C,WAAK,aACH,KAAK,2BAA2B,KAAK,eAAe,EACpD,SAAS,UAAU;AAErB,WAAK,aAAa,GAAG,SAAS,0BAA0B,CAAC,MAAM;AAC9D,cAAM,QAAQ,EAAE,EAAE,aAAa;AAE/B,YAAI,MAAM,GAAG,aAAa,GAAG;AAE5B,eAAK,aAAa,KAAK,aAAa,EAAE,YAAY,UAAU;AAC5D,gBAAM,SAAS,UAAU;AAEzB,eAAK,QAAQ;AACb,eAAK,cAAc,KAAK,sBAAsB,MAAM,KAAK,EAAE;AAAA,QAC5D,WAAW,MAAM,GAAG,WAAW,GAAG;AACjC,eAAK,QAAQ,KAAK,QAAQ,KAAK;AAC/B,eAAK,cAAc,KAAK,uBAAuB;AAAA,QAChD;AACA,aAAK,QAAQ;AAAA,MACd,CAAC;AAAA,IACF;AAAA,IAEA,aAAa;AAEZ,aAAO,KAAK,OAAO,IAAI,CAAC,MACvB,OAAO,MAAM,qBAAqB,EAAE,IAAI,EAAE,EAAE,CAC7C;AAAA,IACD;AAAA,IAEA,eAAe;AACd,UAAI,aAAa,KAAK,UAAU,KAAK,OAAO,KAAK,OAAK,EAAE,MAAM,MAAM;AACpE,UAAI,YAAY;AACf,eAAO,OAAO,MAAM,qBAAqB,WAAW,IAAI,WAAW,EAAE;AAAA,MACtE;AACA,aAAO;AAAA,IACR;AAAA,IAEA,aAAa;AAAA,IAEb;AAAA,IAEA,iBAAiB,WAAW;AAza7B;AA0aE,YAAM,SAAS,KAAK,qBAAqB,EAAE,OAAO,OAAK,EAAE,MAAM,SAAS,EAAE;AAC1E,UAAI,CAAC;AAAQ;AACb,aAAO;AAAA,QACN,QAAQ,aAAO,OAAP,mBAAW,QAAQ,WAAW;AAAA,QACtC,WAAW;AAAA,MACZ,EAAE,OAAO,OAAO,OAAO;AAAA,IACxB;AAAA,IAEA,uBAAuB;AAGtB,aAAO,KAAK,cACT,KAAK,YAAY,IAAI,EAAE,IAAI,CAAC,WAAW,OAAO,MAAM,GAAG,CAAC,CAAC,IACzD,CAAC;AAAA,IACL;AAAA,IAEA,WAAW;AACV,aAAO;AAAA,QACN,SAAS,KAAK;AAAA,QACd,QAAQ,KAAK,WAAW;AAAA,QACxB,SAAS,KAAK,qBAAqB;AAAA,QACnC,UAAU,KAAK,iBAAiB,KAAK,cAAc,eAAe;AAAA,QAClE,OAAO,KAAK;AAAA,QACZ,aAAa,KAAK;AAAA,QAClB,MAAM,KAAK;AAAA,QACX,UAAU,KAAK,aAAa;AAAA,MAC7B;AAAA,IACD;AAAA,IAEA,gBAAgB;AACf,YAAM,OAAO,KAAK,SAAS;AAC3B,aAAO;AAAA,QACN,QAAQ,KAAK;AAAA,QACb;AAAA,QACA,QAAQ,KAAK,qBAAqB;AAAA,QAClC,gBAAgB,KAAK,kBAAkB,GAAG,SAAS,IAAI;AAAA,MACxD;AAAA,IACD;AAAA,IAEA,iBAAiB;AAAA,IAGjB;AAAA,IAEA,UAAU;AACT,UAAI,OAAO,KAAK,cAAc;AAC9B,UAAI,KAAK,UAAU,IAAI,GAAG;AAEzB,eAAO,QAAQ,QAAQ;AAAA,MACxB;AACA,WAAK,OAAO,IAAI;AAEhB,aAAO,OAAO,KAAK,IAAI,EAAE,KAAK,CAAC,MAAM;AAEpC,aAAK,aAAa,CAAC;AACnB,aAAK,mBAAmB;AACxB,aAAK,cAAc;AACnB,aAAK,OAAO;AACZ,aAAK,aAAa;AAClB,aAAK,OAAO,KAAK;AACjB,aAAK,eAAe;AACpB,YAAI,KAAK,SAAS,SAAS;AAC1B,eAAK,SAAS,QAAQ,IAAI;AAAA,QAC3B;AAAA,MACD,CAAC;AAAA,IACF;AAAA,IAEA,UAAU,MAAM;AAGf,UAAI,KAAK,aAAa,KAAK,UAAU,IAAI,MAAM,KAAK,WAAW;AAC9D,eAAO;AAAA,MACR;AACA,WAAK,YAAY,KAAK,UAAU,IAAI;AACpC,iBAAW,MAAM;AAChB,aAAK,YAAY;AAAA,MAClB,GAAG,GAAI;AACP,aAAO;AAAA,IACR;AAAA,IAEA,aAAa,GAAG;AACf,UAAI,OAAO,EAAE,WAAW,CAAC;AAGzB,aAAO,OAAO,OAAO,KAAK,WAAW,KAAK,SAAS;AACnD,aAAO,KAAK;AAEZ,aAAO,CAAC,MAAM,QAAQ,IAAI,IACvB,OAAO,MAAM,KAAK,KAAK,MAAM,KAAK,MAAM,IACxC;AAEH,UAAI,KAAK,UAAU,GAAG;AACrB,aAAK,OAAO;AAAA,MACb,OAAO;AACN,aAAK,OAAO,KAAK,KAAK,OAAO,IAAI;AAAA,MAClC;AAEA,WAAK,OAAO,KAAK,KAAK,OAAO,CAAC,MAAM,EAAE,IAAI;AAAA,IAC3C;AAAA,IAEA,iBAAiB;AAChB,WAAK,cAAc,KAAK,cAAc,KAAK;AAC3C,WAAK,QAAQ;AAAA,IACd;AAAA,IAEA,SAAS;AAAA,IAET;AAAA,IAEA,gBAAgB;AAAA,IAAC;AAAA,IAEjB,eAAe;AAAA,IAAC;AAAA,IAEhB,SAAS;AAAA,IAET;AAAA,IAEA,mBAAmB;AAAA,IAEnB;AAAA,IAEA,qBAAqB;AACpB,WAAK,QAAQ,OAAO,KAAK,KAAK,SAAS,CAAC;AACxC,WAAK,aAAa,OAAO,KAAK,KAAK,SAAS,CAAC;AAC7C,WAAK,WAAW,OAAO,KAAK,KAAK,UAAU,CAAC;AAE5C,YAAM,YAAY,KAAK,QAAQ,KAAK,eAAe,KAAK,KAAK;AAC7D,WAAK,aAAa,KAAK,WAAW,EAAE,OAAO,SAAS;AAAA,IACrD;AAAA,IAEA,wBAAwB,QAAQ,OAAO,CAAC,GAAG;AAC1C,WAAK,QAAQ,KAAK,kBAAkB,IAAI;AAExC,aAAO,KAAK;AAAA,QACX;AAAA,QACA;AAAA,QACA,QAAQ;AAAA,QACR,UAAU,CAAC,MAAM;AAChB,cAAI,CAAC,EAAE,KAAK;AACX,iBAAK,QAAQ;AAAA,UACd;AAAA,QACD;AAAA,MACD,CAAC;AAAA,IACF;AAAA,EACD;AAEA,yBAAiB;AAAA,IAChB,YAAY,WAAW;AACtB,WAAK,YAAY;AACjB,WAAK,UAAU,KAAK,UAAU,OAAO,kDAAkD;AAEvF,YAAM,cAAc,KAAK,UAAU,iBAChC,KAAK,UAAU,KAAK,iBACpB,KAAK,UAAU,KAAK;AAEvB,WAAK,UAAU,kBAAkB,EAAE,mCAAmC,EAAE,SACvE,WACD;AAEA,WAAK,uBAAuB,KAAK,UAAU;AAC3C,WAAK,kBAAkB;AACvB,WAAK,MAAM;AAAA,IACZ;AAAA,IAEA,QAAQ;AACP,UAAI,CAAC,KAAK,UAAU;AAAgB,aAAK,sBAAsB;AAC/D,WAAK,iBAAiB;AAAA,IACvB;AAAA,IAEA,MAAM;AACL,UAAI,UAAU,KAAK,YAAY,YAAY;AAC3C,UAAI,mBAAmB,KAAK,qBAAqB;AAEjD,aAAO,QAAQ,OAAO,gBAAgB,EAAE,OAAO,KAAK,SAAS;AAAA,IAC9D;AAAA,IAEA,IAAI,SAAS;AAEZ,WAAK,kBAAkB;AACvB,aAAO,KAAK,IAAI,SAAS,KAAK,EAAE,KAAK,MAAM;AAC1C,aAAK,kBAAkB;AACvB,aAAK,YAAY,qBAAqB;AAAA,MACvC,CAAC;AAAA,IACF;AAAA,IAEA,IAAI,SAAS,UAAU,MAAM;AAC5B,UAAI,CAAC,WAAY,MAAM,QAAQ,OAAO,KAAK,QAAQ,WAAW;AAC7D,eAAO,QAAQ,QAAQ;AAExB,UAAI,OAAO,QAAQ,OAAO,UAAU;AAEnC,cAAM,SAAS,MAAM,KAAK,SAAS;AACnC,kBAAU,CAAC,MAAM;AAAA,MAClB;AAEA,gBAAU,QAAQ,OAAO,OAAK,CAAC,KAAK,OAAO,CAAC,CAAC;AAI7C,YAAM,EAAE,sBAAsB,YAAY,KAAK,oBAC9C,OACD;AAEA,aAAO,QACL,KAAK,MAAM;AACX,eACC,qBAAqB,SAAS,KAC9B,KAAK,YAAY,YAAY,oBAAoB;AAAA,MAEnD,CAAC,EACA,KAAK,MAAM;AACX,mBAAW,KAAK,UAAU,QAAQ;AAAA,MACnC,CAAC;AAAA,IACH;AAAA,IAEA,oBAAoB;AACnB,UAAI,KAAK,iBAAiB;AACzB,aAAK,UAAU,QAAQ;AACvB,aAAK,UAAU,QAAQ;AACvB,aAAK,UAAU,iBAAiB;AAAA,MACjC;AAAA,IACD;AAAA,IAEA,OAAO,GAAG;AACT,UAAI,SAAS;AAEb,YAAM,cAAc,KAAK,UAAU,KAAK;AACxC,UAAI,EAAE,OAAO,OAAO,EAAE,MAAM,aAAa;AACxC,cAAM,QAAQ,YAAY,EAAE,IAAI,UAAU;AAC1C,YAAI,OAAO;AACV,mBAAS;AAAA,QACV;AAAA,MACD;AAGA,UAAI,CAAC,QAAQ;AACZ,iBAAS,KAAK,YAAY,cAAc,CAAC;AAAA,MAC1C;AAEA,aAAO;AAAA,IACR;AAAA,IAEA,oBAAoB,SAAS;AAC5B,UAAI,QAAQ,WAAW,GAAG;AACzB,eAAO;AAAA,UACN,sBAAsB,CAAC;AAAA,UACvB,SAAS,QAAQ,QAAQ;AAAA,QAC1B;AAAA,MACD;AAEA,YAAM,cAAc,KAAK,UAAU,KAAK;AAExC,UAAI,MAAM,QAAQ,OAAO,CAAC,MAAK,WAAW;AAtqB5C;AAwqBG,cAAM,CAAC,IAAI,WAAW,WAAW,SAAS;AAC1C,aAAI,UAAU,KAAI,WAAW,QAAQ,QAAQ;AAC7C,aAAI,uBAAuB,KAAI,wBAAwB,CAAC;AAIxD,YACC,YAAY,cAEX,eAAc,OACb,cAAc,UAAU,yBAAY,eAAZ,mBAAwB,OAAxB,mBAA4B,cAAa,SAElE;AAED,eAAI,UAAU,KAAI,QAAQ,KAAK,MAC9B,YAAY,WAAW,UAAU,KAAK,CACvC;AAAA,QACD,OAAO;AAEN,eAAI,qBAAqB,KAAK,MAAM;AAAA,QACrC;AACA,eAAO;AAAA,MACR,GAAG,CAAC,CAAC;AAEL,aAAO;AAAA,IACR;AAAA,IAEA,eAAe,SAAS;AACvB,cAAQ,IAAI,OAAK;AAChB,aAAK,OAAO,EAAE,EAAE;AAAA,MACjB,CAAC;AAAA,IACF;AAAA,IAEA,OAAO,WAAW;AACjB,YAAM,cAAc,KAAK,UAAU,KAAK;AAExC,UAAI,aAAa,aAAa;AAC7B,oBAAY,WAAW,UAAU,EAAE;AAAA,MACpC;AAEA,UAAI,SAAS,KAAK,YAAY,WAAW,SAAS;AAClD,UAAI;AAAQ,eAAO,OAAO;AAC1B,WAAK,YAAY,MAAM;AACvB,aAAO,QAAQ,QAAQ;AAAA,IACxB;AAAA,IAEA,MAAM,UAAU,MAAM;AACrB,UAAI,CAAC,SAAS;AACb,aAAK,kBAAkB;AAAA,MACxB;AAEA,WAAK,YAAY,cAAc;AAE/B,YAAM,WAAW,CAAC;AAClB,YAAM,cAAc,KAAK,UAAU,KAAK;AACxC,eAAS,OAAO,aAAa;AAC5B,cAAM,QAAQ,KAAK,UAAU,KAAK,YAAY;AAC9C,iBAAS,KAAK,MAAM,MAAM,UAAU,EAAE,CAAC;AAAA,MACxC;AACA,aAAO,OAAO,aAAa,QAAQ,EAAE,KAAK,MAAM;AAC/C,aAAK,kBAAkB;AAAA,MACxB,CAAC;AAAA,IACF;AAAA,IAEA,wBAAwB;AACvB,WAAK,2BAA2B,KAAK,UAAU,KAAK,UAAU,KAAK,0BAA0B;AAC7F,UAAI,SAAS;AAAA,QACZ;AAAA,UACC,WAAW;AAAA,UACX,OAAO;AAAA,UACP,WAAW;AAAA,UACX,WAAW;AAAA,UACX,UAAU,MAAM,KAAK,kBAAkB;AAAA,QACxC;AAAA,MACD;AAEA,UAAI,KAAK,UAAU,uBAAuB;AACzC,aAAK,UAAU,sBAAsB,QAAQ,CAAC,WAAW;AACxD,iBAAO,WAAW,MAAM,KAAK,kBAAkB;AAAA,QAChD,CAAC;AAED,iBAAS,OAAO,OAAO,KAAK,UAAU,qBAAqB;AAAA,MAC5D;AAEA,YAAM,iBAAiB,KAAK,UAAU,KAAK;AAC3C,YAAM,cAAc,KAAK,UAAU,KAAK;AAExC,eAAS,OAAO,OACf,eACE,OACA,CAAC,OACA,GAAG,cAAc,eAChB,GAAG,sBACH,OAAO,MAAM,cAAc,GAAG,SAAS,CAC1C,EACC,IAAI,CAAC,OAAO;AACZ,YAAI,UAAU,GAAG;AACjB,YAAI,YAAY;AAChB,YAAI,YAAY,GAAG;AACnB,YACC;AAAA,UACC;AAAA,UACA;AAAA,UACA;AAAA,UACA;AAAA,UACA;AAAA,UACA;AAAA,UACA;AAAA,QACD,EAAE,SAAS,SAAS,GACnB;AACD,sBAAY;AACZ,sBAAY;AAAA,QACb;AACA,YAAI,GAAG,aAAa,YAAY,GAAG,SAAS;AAC3C,oBAAU,GAAG,QAAQ,MAAM,IAAI;AAC/B,cAAI,QAAQ,SAAS,KAAK,QAAQ,MAAM,IAAI;AAC3C,oBAAQ,QAAQ,EAAE;AAClB,sBAAU,QAAQ,KAAK,IAAI;AAAA,UAC5B;AAAA,QACD;AAEA,eAAO;AAAA,UACN;AAAA,UACA,OAAO,GAAG,GAAG,KAAK;AAAA,UAClB;AAAA,UACA,WAAW,GAAG;AAAA,UACd;AAAA,UACA,UAAU,MAAM,KAAK,kBAAkB;AAAA,UACvC,wBAAwB,cAAc;AAAA,UACtC,WAAW;AAAA,QACZ;AAAA,MACD,CAAC,CACH;AAEA,aAAO,IAAI,QAAM;AAChB,aAAK,UAAU,KAAK,UAAU,IAAI,KAAK,wBAAwB;AAAA,MAChE,CAAC;AAAA,IACF;AAAA,IAEA,uBAAuB;AACtB,YAAM,UAAU,CAAC;AACjB,YAAM,cAAc,KAAK,UAAU,KAAK;AACxC,eAAS,OAAO,aAAa;AAC5B,YAAI,QAAQ,YAAY;AACxB,YAAI,QAAQ,MAAM,UAAU;AAC5B,YAAI,OAAO;AACV,cAAI,MAAM,GAAG,cAAc,UAAU,CAAC,MAAM,SAAS,GAAG,GAAG;AAC1D,oBAAQ,MAAM,QAAQ;AAAA,UACvB;AACA,kBAAQ,KAAK;AAAA,YACZ,KAAK,UAAU;AAAA,YACf,MAAM,GAAG;AAAA,YACT,MAAM,GAAG,aAAa;AAAA,YACtB;AAAA,UACD,CAAC;AAAA,QACF;AAAA,MACD;AAEA,aAAO;AAAA,IACR;AAAA,IAEA,mBAAmB;AAClB,QAAE;AAAA;AAAA;AAAA,OAGG,OAAO,MAAM,KAAK,QAAQ;AAAA;AAAA;AAAA,OAG1B,GAAG,QAAQ;AAAA;AAAA;AAAA,SAIhB,EAAE,SAAS,KAAK,oBAAoB;AAEpC,WAAK,gBAAgB,KAAK,qBAAqB,KAAK,gBAAgB;AACpE,WAAK,cAAc,IAAI,OAAO,GAAG,YAAY;AAAA,QAC5C,WAAW,KAAK;AAAA,QAChB,QAAQ,KAAK;AAAA,QACb,SAAS,KAAK,UAAU;AAAA,QACxB,eAAe,KAAK;AAAA,QACpB,iBAAiB,CAAC;AAAA,QAClB,WAAW,MAAM,KAAK,kBAAkB;AAAA,MACzC,CAAC;AAAA,IACF;AAAA,IAEA,kBAAkB;AAEjB,aACC,KAAK,eACL,KAAK,YAAY,WACjB,KAAK,YAAY,QAAQ,KAAK,qBAAqB,EAAE,SAAS;AAAA,IAEhE;AAAA,EACD;AAGA,SAAO,MAAM,aAAa;AAAA,IACzB;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,EACD;AACA,SAAO,MAAM,WAAW,CAAC,cACxB,OAAO,MAAM,WAAW,SAAS,SAAS;;;ACz3B3C,6BAAoC;AAAA,IACnC,YAAY,EAAE,WAAW;AACxB,UAAI,CAAC;AAAS,eAAO,MAAM,GAAG,kBAAkB,CAAC;AACjD,WAAK,UAAU;AAAA,IAChB;AAAA,IAEA,MAAO,MAAM;AACZ,YAAM,iBAAiB,OAAO,MAAM,QAAQ,mBAAmB,gBAAgB;AAC/E,YAAM,wBAAwB,KAAK,eAAe,qBAAqB;AACvE,YAAM,iBAAiB,OAAO,MAAM,eAAe,KAAK,OAAO;AAC/D,YAAM,4BAA4B,KAAK,eAAe,yBAAyB;AAE/E,YAAM,aAAa,KAAK,OAAO,SAAO;AACrC,eAAO,CAAC,kBAAkB,IAAI,cAAc,KAC1C,6BAA6B,IAAI,aAAa,KAC9C,yBAAyB,IAAI,aAAa,KAC3C,OAAO,KAAK,SAAS,eAAe;AAAA,MACtC,CAAC,EAAE,IAAI,SAAO,IAAI,IAAI;AAEtB,YAAM,eAAe,KAAK,OAAO,SAAO,CAAC,WAAW,SAAS,IAAI,IAAI,CAAC;AAEtE,UAAI,aAAa,SAAS,GAAG;AAC5B,eAAO,SAAS,GAAG,2CAA2C,CAAC;AAC/D;AAAA,MACD;AAEA,UAAI,WAAW,WAAW,GAAG;AAC5B,eAAO,SAAS,GAAG,sCAAsC,CAAC;AAC1D;AAAA,MACD;AAEA,YAAM,SAAS,IAAI,OAAO,GAAG,OAAO;AAAA,QACnC,OAAO,GAAG,iBAAiB;AAAA,QAC3B,QAAQ;AAAA,UAAC;AAAA,YACR,WAAW;AAAA,YACX,OAAO,GAAG,aAAa;AAAA,YACvB,WAAW;AAAA,YACX,SAAS,GAAG,eAAe;AAAA,YAC3B,SAAS,KAAK,uBAAuB;AAAA,UACtC;AAAA,UACA;AAAA,YACC,WAAW;AAAA,YACX,OAAO,GAAG,cAAc;AAAA,YACxB,WAAW;AAAA,YACX,SAAS,OAAO,KAAK,kBAAkB,KAAK,OAAO;AAAA,UACpD;AAAA,UACA;AAAA,YACC,WAAW;AAAA,YACX,OAAO,GAAG,WAAW;AAAA,YACrB,WAAW;AAAA,YACX,SAAS,OAAO,KAAK,gBAAgB;AAAA,YACrC,SAAS,eAAe;AAAA,UACzB;AAAA,UACA;AAAA,YACC,WAAW;AAAA,YACX,OAAO,GAAG,qBAAqB;AAAA,YAC/B,WAAW;AAAA,YACX,YAAY;AAAA,YACZ,SAAS,eAAe;AAAA,UACzB;AAAA,UACA;AAAA,YACC,WAAW;AAAA,YACX,OAAO,GAAG,oBAAoB;AAAA,YAC9B,WAAW;AAAA,YACX,YAAY;AAAA,YACZ,SAAS,eAAe;AAAA,UACzB;AAAA,QAAC;AAAA,MACF,CAAC;AAED,aAAO,mBAAmB,GAAG,OAAO,GAAG,UAAQ;AAC9C,YAAI,CAAC;AAAM;AACX,cAAM,uBAAuB,OAAO,SAAS,KAAK,OAAO,EAAE;AAC3D,cAAM,kBAAkB,KAAK,cAAc,GAAG,eAAe,IAAI,IAAI;AACrE,cAAM,eAAe,KAAK,YAAY,KAAK,YAAY;AACvD,cAAM,cAAc,KAAK,UAAU,UAAU;AAC7C,cAAM,aAAa,KAAK;AAExB,YAAI;AACJ,YAAI,KAAK,cAAc,UAAU;AAChC,cAAI,KAAK,gBAAgB,KAAK,KAAK,eAAe,GAAG;AACpD,mBAAO,MAAM,GAAG,sCAAsC,CAAC;AAAA,UACxD;AACA,wBAAc,KAAK,UAAU,EAAE,eAAe,KAAK,aAAa,cAAc,KAAK,WAAW,CAAC;AAAA,QAChG,OAAO;AACN,wBAAc,KAAK,UAAU,EAAE,aAAa,KAAK,UAAU,CAAC;AAAA,QAC7D;AAEA,cAAM,IAAI,OAAO,KAChB,sEACa,mBAAmB,KAAK,OAAO,IAC5C,WAAW,mBAAmB,WAAW,IACzC,aAAa,mBAAmB,YAAY,IAC5C,oBAAqB,mBAAkB,MAAM,OAC7C,iBAAiB,mBAAmB,UAAU,IAC9C,cAAc,mBAAmB,WAAW,CAC7C;AAEA,YAAI,CAAC,GAAG;AACP,iBAAO,SAAS,GAAG,uBAAuB,CAAC;AAC3C;AAAA,QACD;AAAA,MACD,CAAC;AAED,aAAO,KAAK;AAAA,IACb;AAAA,IAEA,yBAA0B;AACzB,YAAM,qBAAqB,CAAC,GAAG,eAAe,CAAC;AAC/C,aAAO,KAAK;AAAA,QACX,QAAQ;AAAA,QACR,MAAM;AAAA,UACL,SAAS;AAAA,UACT,QAAQ,CAAC,QAAQ,YAAY;AAAA,UAC7B,mBAAmB;AAAA,QACpB;AAAA,QACA,OAAO;AAAA,QACP,SAAU,GAAG;AACZ,cAAI,EAAE,SAAS;AACd,cAAE,QAAQ,QAAQ,gBAAc;AAC/B,iCAAmB,KAAK,WAAW,IAAI;AAAA,YACxC,CAAC;AAAA,UACF;AAAA,QACD;AAAA,MACD,CAAC;AACD,aAAO;AAAA,IACR;AAAA,IAEA,OAAQ,UAAU,OAAO,MAAM;AAC9B,aACE,KAAK;AAAA,QACL,QAAQ;AAAA,QACR,QAAQ;AAAA,QACR,MAAM;AAAA,UACL,OAAO;AAAA,UACP,SAAS,KAAK;AAAA,QACf;AAAA,MACD,CAAC,EACA,KAAK,CAAC,MAAM;AACZ,YAAI,SAAS,EAAE;AACf,YAAI,CAAC;AAAQ,mBAAS,CAAC;AAEvB,YAAI,OAAO,UAAU,CAAC,EAAE,kBAAkB;AACzC,iBAAO,MAAM,GAAG,qBAAqB,CAAC,OAAO,IAAI,OAAK,EAAE,KAAK,CAAC,EAAE,KAAK,IAAI,CAAC,CAAC,CAAC;AAAA,QAC7E;AACA,YAAI,OAAO,SAAS,SAAS,QAAQ;AACpC,iBAAO,MAAM,WAAW,QAAQ;AAChC,cAAI;AAAM,iBAAK;AAAA,QAChB;AAAA,MACD,CAAC;AAAA,IACH;AAAA,IAEA,OAAQ,UAAU,MAAM;AACvB,UAAI,SAAS,SAAS,GAAG;AACxB,cAAM,YAAY,IAAI,OAAO,GAAG,KAAK,eAAe;AAAA,UACnD,KAAK;AAAA,UACL,QAAQ;AAAA,UACR,SAAS,KAAK;AAAA,UACd,SAAS;AAAA,UACT,aAAa;AAAA,UACb,WAAW;AAAA,UACX,UAAU;AAAA,QACX,CAAC;AACD,kBAAU,OAAO,MAAM;AACvB,kBAAU,OAAO,KAAK;AAAA,MACvB,OAAO;AACN,eAAO,SAAS,GAAG,+BAA+B,CAAC;AAAA,MACpD;AAAA,IACD;AAAA,IAEA,sBAAuB,UAAU,MAAM;AACtC,UAAI,SAAS,SAAS,GAAG;AACxB,eAAO,KAAK,wEAAwE;AAAA,UACnF,SAAS,KAAK;AAAA,UACd;AAAA,QACD,CAAC,EAAE,KAAK,MAAM,KAAK,CAAC;AAAA,MACrB;AAAA,IACD;AAAA,IAEA,iBAAkB,UAAU,SAAS,UAAU,OAAO,MAAM;AAC3D,eAAS,OAAO,YAAY;AAC5B,aACE,KAAK;AAAA,QACL,QAAQ;AAAA,QACR,MAAM;AAAA,UACL,SAAS,KAAK;AAAA,UACd;AAAA,UACA;AAAA,QACD;AAAA,MACD,CAAC,EACA,KAAK,CAAC,MAAM;AACZ,YAAI,SAAS,EAAE;AACf,YAAI,CAAC;AAAQ,mBAAS,CAAC;AAEvB,YAAI,OAAO,UAAU,CAAC,EAAE,kBAAkB;AACzC,iBAAO,MAAM,GAAG,kBAAkB,CAAC,QAAQ,OAAO,IAAI,OAAK,EAAE,KAAK,CAAC,EAAE,KAAK,IAAI,CAAC,CAAC,CAAC;AAAA,QAClF;AACA,YAAI,OAAO,SAAS,SAAS,QAAQ;AACpC,iBAAO,MAAM,WAAW,MAAM;AAC9B,cAAI;AAAM,iBAAK;AAAA,QAChB;AAAA,MACD,CAAC;AAAA,IACH;AAAA,IAEA,KAAM,UAAU,gBAAgB,MAAM;AACrC,UAAI,gBAAgB,OAAO,KAAK,cAAc,EAAE,KAAK;AACrD,YAAM,eAAe;AAErB,YAAM,gBAAgB,cAAc,KAAK,WAAS,aAAa,KAAK,KAAK,CAAC;AAE1E,YAAM,SAAS,IAAI,OAAO,GAAG,OAAO;AAAA,QACnC,OAAO,GAAG,WAAW;AAAA,QACrB,QAAQ;AAAA,UACP;AAAA,YACC,aAAa;AAAA,YACb,WAAW;AAAA,YACX,WAAW;AAAA,YACX,SAAS,GAAG,OAAO;AAAA,YACnB,aAAa;AAAA,YACb,QAAQ;AAAA,YACR,YAAY,MAAM;AACjB,8BAAgB,MAAM;AAAA,YACvB;AAAA,UACD;AAAA,UACA;AAAA,YACC,aAAa;AAAA,YACb,SAAS,GAAG,OAAO;AAAA,YACnB,aAAa;AAAA,YACb,WAAW;AACV,6BAAe;AAAA,YAChB;AAAA,UACD;AAAA,QACD;AAAA,QACA,gBAAgB,CAAC,EAAE,YAAY;AAC9B,gBAAM,YAAY,eAAe,OAAO,UAAU,OAAO,GAAG;AAC5D,iBAAO,uBAAuB;AAC9B,iBAAO,KAAK;AAAA,YACX,QAAQ;AAAA,YACR,MAAM;AAAA,cACL,SAAS,KAAK;AAAA,cACd,QAAQ;AAAA,cACR;AAAA,cACA,QAAQ;AAAA,cACR,MAAM;AAAA,iBACJ,YAAY,SAAS;AAAA,cACvB;AAAA,YACD;AAAA,UACD,CAAC,EAAE,KAAK,OAAK;AACZ,gBAAI,SAAS,EAAE,WAAW,CAAC;AAE3B,gBAAI,OAAO,UAAU,CAAC,EAAE,kBAAkB;AACzC,qBAAO,sBAAsB;AAC7B,qBAAO,MAAM,GAAG,qBAAqB,CAAC,OAAO,IAAI,OAAK,EAAE,OAAO,EAAE,KAAK,IAAI,CAAC,EAAE,KAAK,IAAI,CAAC,CAAC,CAAC;AAAA,YAC1F;AACA,iBAAK;AACL,mBAAO,KAAK;AACZ,mBAAO,WAAW,GAAG,sBAAsB,CAAC;AAAA,UAC7C,CAAC;AAAA,QACF;AAAA,QACA,sBAAsB,GAAG,sBAAsB,CAAC,SAAS,MAAM,CAAC;AAAA,MACjE,CAAC;AAED,UAAI;AAAe,wBAAgB,MAAM;AACzC,qBAAe;AAEf,+BAA0B,WAAW;AACpC,cAAM,SAAS,OAAO,OAAO,CAAC,GAC7B,eAAe,UAAU,UAAU,OAAO,EAAE;AAI7C,YAAI,OAAO,MAAM,MAAM,YAAY,KAClC,OAAO,cAAc,YAAY,CAAC,OAAO,SAAS;AAClD,cAAI,UAAU,CAAC;AACf,cAAI,OAAO,OAAO,YAAY,UAAU;AACvC,sBAAU,OAAO,QAAQ,MAAM,IAAI;AAAA,UACpC;AAEA,iBAAO,UAAU,QAAQ,MAAM,QAAQ;AAAA,QACxC;AACA,eAAO,QAAQ,GAAG,OAAO;AACzB,eAAO,WAAW;AAElB,eAAO,OAAO;AACd,kBAAU,cAAc,SAAS,MAAM;AACvC,uBAAe;AAAA,MAChB;AAEA,gCAA0B;AACzB,YAAI,QAAQ,OAAO,UAAU,OAAO;AACpC,YAAI,SAAS,QAAQ,UAAU,IAAI;AAClC,iBAAO,gBAAgB,SAAS,eAAe,GAAG,+DAA+D,CAAC;AAAA,QACnH,OAAO;AACN,iBAAO,gBAAgB,SAAS,eAAe,EAAE;AAAA,QAClD;AAAA,MACD;AAEA,aAAO,QAAQ;AACf,aAAO,KAAK;AAAA,IACb;AAAA,IAEA,SAAU,UAAU,MAAM;AACzB,YAAM,SAAS,IAAI,OAAO,GAAG,OAAO;AAAA,QACnC,OAAO,GAAG,UAAU;AAAA,QACpB,QAAQ;AAAA,UACP;AAAA,YACC,WAAW;AAAA,YACX,WAAW;AAAA,YACX,OAAO,GAAG,MAAM;AAAA,YAChB,MAAM;AAAA,YACN,UAAU,SAAU,KAAK;AACxB,qBAAO,OAAO,GAAG,iBAAiB,OAAO,GAAG;AAAA,YAC7C;AAAA,UACD;AAAA,QACD;AAAA,QACA,sBAAsB,GAAG,KAAK;AAAA,QAC9B,gBAAgB,MAAM;AACrB,cAAI,OAAO,OAAO,WAAW;AAC7B,cAAI,QAAQ,KAAK,MAAM;AACtB,mBAAO,YAAY,gBAAgB;AAEnC,mBAAO,KAAK;AAAA,cACX,QAAQ;AAAA,cACR,MAAM;AAAA,gBACL,QAAQ,KAAK;AAAA,gBACb,MAAM,KAAK;AAAA,gBACX,QAAQ;AAAA,cACT;AAAA,cACA,UAAU,MAAM;AACf,uBAAO,KAAK;AACZ,qBAAK;AAAA,cACN;AAAA,YACD,CAAC;AAAA,UACF;AAAA,QACD;AAAA,MACD,CAAC;AACD,aAAO,KAAK;AAAA,IACb;AAAA,IAEA,OAAQ,SAAS,UAAU;AAC1B,aAAO,QAAQ,+BAA+B,MAAM;AACnD,cAAM,gBAAgB,IAAI,OAAO,YAAY,aAAa,SAAS,oBAAoB;AACvF,sBAAc,OAAO,UAAU,kBAAkB,WAAW;AAC5D,sBAAc,aAAa,4BAC1B,CAAC,CAAC,SAAS,QAAQ,MAAM,UAAU,KAAK,CAAC,CAC1C;AAAA,MACD,CAAC;AAAA,IACF;AAAA,EACD;;;AC3VA,2BAAkC;AAAA,IACjC,YAAY,EAAE,UAAU,SAAS,MAAM,YAAY;AAClD,UAAI,CAAC,SAAS;AACb,eAAO,MAAM,kBAAkB;AAAA,MAChC;AAEA,WAAK,WAAW;AAChB,WAAK,UAAU;AACf,WAAK,OAAO;AACZ,WAAK,WAAW;AAChB,WAAK,SAAS;AACd,WAAK,SAAS,KAAK,YAAY,KAAK,SAAS,SAAS,KAAK,MAAM,KAAK,SAAS,MAAM,IAAI,CAAC;AAC1F,WAAK,gBAAgB;AAErB,aAAO,MAAM,aAAa,sBAAsB,MAAM;AACrD,aAAK,KAAK;AACV,aAAK,oBAAoB,IAAI;AAC7B,aAAK,aAAa;AAClB,aAAK,oBAAoB;AACzB,aAAK,eAAe;AACpB,aAAK,YAAY;AAAA,MAClB,CAAC;AAAA,IACF;AAAA,IAEA,OAAO;AACN,UAAI,MAAK;AAET,UAAI,qBAAqB,OAAO,SAAS,oBAAoB;AAE7D,UAAG,SAAS,IAAI,OAAO,GAAG,OAAO;AAAA,QAChC,OAAO,GAAG,gBAAgB,CAAC,GAAG,IAAG,OAAO,CAAC,CAAC;AAAA,QAC1C,QAAQ,mBAAmB;AAAA,MAC5B,CAAC;AACD,UAAG,OAAO,WAAW,IAAG,QAAQ;AAChC,UAAG,OAAO,mBAAmB,GAAG,MAAM,GAAG,MAAM;AAC9C,YAAI,SAAS,IAAG,OAAO,WAAW;AAElC,eAAO,WAAW;AAAA,UACjB,SAAS,GAAG,QAAQ;AAAA,UACpB,WAAW;AAAA,QACZ,CAAC;AAED,eAAO,KAAK;AAAA,UACX,QAAQ;AAAA,UACR,MAAM;AAAA,YACL,SAAS,IAAG;AAAA,YACZ,mBAAmB;AAAA,YACnB,yBAAyB,IAAG,kBAAkB,CAAC;AAAA,UAChD;AAAA,UACA,UAAU,SAAU,GAAG;AACtB,gBAAG,SAAS,gBAAgB,EAAE,QAAQ,MAAM,EAAE,QAAQ,iBAAiB;AACvE,gBAAG,OAAO,KAAK;AAAA,UAChB;AAAA,QACD,CAAC;AAAA,MACF,CAAC;AAED,UAAG,OAAO,YAAY,gBAAgB,GAAG,WAAW,MAAM,IAAG,QAAQ;AAAA,IACtE;AAAA,IAEA,UAAU;AACT,UAAI,MAAK;AAET,UAAG,aAAa;AAChB,UAAG,eAAe;AAClB,UAAG,oBAAoB;AAAA,IACxB;AAAA,IAEA,cAAc;AACb,UAAI,MAAK;AAET,UAAI,CAAC,KAAK,SAAS,QAAQ;AAC1B,YAAG,cAAc;AAAA,MAClB;AAEA,UAAI,CAAC,IAAG,OAAO,UAAU,cAAc,GAAG;AACzC,YAAI,cAAc,IAAG,OAAO;AAE5B,YAAI,cAAc,GAAG;AACpB,wBAAc;AAAA,QACf,WAAW,cAAc,IAAI;AAC5B,wBAAc;AAAA,QACf;AAEA,YAAG,OAAO,UAAU,gBAAgB,WAAW;AAAA,MAChD;AAEA,UAAG,OAAO,KAAK;AAAA,IAChB;AAAA,IAEA,eAAe;AACd,+BAAyB,OAAO;AAC/B,eAAO,MAAM,cAAc;AAAA,MAC5B;AAEA,UAAI,MAAK;AAET,UAAI,cAAc,IAAG,OAAO,UAAU,aAAa;AACnD,UAAI,UAAU,YAAY,SAAS;AACnC,UAAI,SAAS;AACb,UAAI,eAAe,IAAG,OAAO,WAAW,EAAE,gBAAgB,IAAG,SAAS;AAEtE,eAAS,OAAO,IAAG,QAAQ;AAC1B,YAAI,OAAO,SAAS,YAAY,GAAG;AAClC;AAAA,QACD;AACA,YAAI,cAAe,OAAO,IAAK,KAAK;AACpC,YAAI,uBAAwB,OAAO,IAAK,SAAS;AACjD,YAAI,aAAc,OAAO,KAAK,gBAAgB,IAAG,OAAO,IAAI,IAAK,SAAS;AAE1E,kBAAU;AAAA,4EAC+D;AAAA,mEACT,IAAG,OAAO,KAAK;AAAA,mBAC/D,IAAG,OAAO,KAAK,qBAAqB,IAAG,OAAO,KAAK;AAAA;AAAA;AAAA;AAAA,SAI7D,OAAO,MAAM,KAAK,QAAQ,MAAM,IAAI,IAAI,qBAAqB,oBAAoB;AAAA;AAAA;AAAA,SAGjF,IAAG,OAAO,KAAK;AAAA;AAAA,6BAEK;AAAA,4DAC+B,IAAG,OAAO,KAAK;AAAA,UACjE,OAAO,MAAM,KAAK,UAAU,IAAI;AAAA;AAAA;AAAA;AAAA;AAAA,MAKxC;AAEA,kBAAY,KAAK;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAMb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAQH;AAED,UAAI,SAAS,QAAQ,uBAAuB,uBAAuB,EAAE,IAAI;AAAA,QACxE,QAAQ;AAAA,QACR,WAAW;AAAA,QACX,UAAU,MAAM;AACf,cAAG,cAAc;AACjB,cAAG,QAAQ;AAAA,QACZ;AAAA,MACD,CAAC;AAAA,IACF;AAAA,IAEA,iBAAiB;AAChB,UAAI,MAAK;AAET,UAAI,cAAc,IAAG,OAAO,UAAU,aAAa;AACnD,UAAI,iBAAiB,YAAY,SAAS,GAAG,uBAAuB,gBAAgB,EAAE;AACtF,qBAAe,UAAU,MAAM,IAAG,gBAAgB;AAAA,IACnD;AAAA,IAEA,sBAAsB;AACrB,UAAI,MAAK;AAET,UAAI,cAAc,IAAG,OAAO,UAAU,aAAa;AACnD,UAAI,gBAAgB,YAAY,SAAS,GAAG,uBAAuB,cAAc;AAEjF,eAAS,MAAM,GAAG,MAAM,cAAc,QAAQ,OAAO;AACpD,sBAAc,KAAK,GAAG,EAAE,UAAU,MAAM,IAAG,cAAc,cAAc,KAAK,GAAG,EAAE,aAAa,gBAAgB,CAAC;AAAA,MAChH;AAAA,IACD;AAAA,IAEA,cAAc,WAAW;AACxB,UAAI,MAAK;AACT,UAAI,kBAAkB,IAAG,OAAO,IAAI,OAAK,EAAE,SAAS;AAEpD,eAAS,OAAO,IAAG,QAAQ;AAC1B,YAAI,QAAQ,IAAG,OAAO;AAEtB,YAAI,MAAM,aAAa,WAAW;AACjC,cAAG,OAAO,OAAO,KAAK,CAAC;AACvB;AAAA,QACD;AAAA,MACD;AACA,UAAG,mBAAmB,IAAG,4BAA4B,IAAG,OAAO,IAAI,OAAK,EAAE,SAAS,GAAG,eAAe,CAAC;AACtG,UAAG,QAAQ;AACX,UAAG,cAAc;AAAA,IAClB;AAAA,IAEA,gBAAgB;AACf,UAAI,MAAK;AAET,UAAI,cAAc,IAAG,OAAO,UAAU,aAAa;AACnD,UAAI,UAAU,YAAY,SAAS;AAEnC,UAAI,eAAe,QAAQ,uBAAuB,cAAc;AAChE,UAAG,SAAS,CAAC;AAEb,eAAS,MAAM,GAAG,MAAM,aAAa,QAAQ,OAAO;AACnD,YAAG,OAAO,KAAK;AAAA,UACd,WAAW,aAAa,KAAK,GAAG,EAAE,aAAa,gBAAgB;AAAA,UAC/D,OAAO,aAAa,KAAK,GAAG,EAAE,aAAa,YAAY;AAAA,QACxD,CAAC;AAAA,MACF;AAEA,UAAG,OAAO,UAAU,UAAU,KAAK,UAAU,IAAG,MAAM,CAAC;AACvD,UAAG,OAAO,UAAU,QAAQ;AAAA,IAC7B;AAAA,IAEA,kBAAkB;AACjB,UAAI,MAAK;AAET,UAAI,IAAI,IAAI,OAAO,GAAG,OAAO;AAAA,QAC5B,OAAO,GAAG,cAAc,CAAC,GAAG,IAAG,OAAO,CAAC,CAAC;AAAA,QACxC,QAAQ;AAAA,UACP;AAAA,YACC,OAAO,GAAG,cAAc;AAAA,YACxB,WAAW;AAAA,YACX,WAAW;AAAA,YACX,OAAO,MAAM,IAAG,sBAAsB,CAAC;AAAA,UACxC;AAAA,UACA;AAAA,YACC,OAAO,GAAG,eAAe;AAAA,YACzB,WAAW;AAAA,YACX,WAAW;AAAA,YACX,SAAS,IAAG,mBAAmB,IAAG,MAAM,IAAG,OAAO,IAAI,OAAK,EAAE,SAAS,CAAC;AAAA,YACvE,SAAS;AAAA,UACV;AAAA,QACD;AAAA,MACD,CAAC;AACD,QAAE,mBAAmB,GAAG,MAAM,GAAG,MAAM;AACtC,YAAI,SAAS,EAAE,WAAW,EAAE;AAE5B,YAAG,mBAAmB,IAAG,4BAA4B,QAAQ,IAAG,OAAO,IAAI,OAAK,EAAE,SAAS,CAAC,CAAC;AAE7F,YAAG,SAAS,CAAC;AACb,YAAG,kBAAkB,IAAG,IAAI;AAC5B,YAAG,iBAAiB;AAEpB,iBAAS,OAAO,QAAQ;AACvB,cAAI,QAAQ,OAAO;AAEnB,cAAI,IAAG,OAAO,WAAW,SAAS,IAAG,OAAO,WAAW,EAAE,YAAY,GAAG;AACvE;AAAA,UACD,WAAW,SAAS,IAAG,cAAc,WAAW;AAC/C,gBAAI,QAAQ,OAAO,KAAK,aAAa,IAAG,SAAS,KAAK;AACtD,gBAAI,OAAO;AACV,kBAAG,OAAO,KAAK;AAAA,gBACd,OAAO,MAAM;AAAA,gBACb,WAAW,MAAM;AAAA,cAClB,CAAC;AAAA,YACF;AAAA,UACD;AAAA,QACD;AAEA,YAAG,QAAQ;AACX,YAAG,OAAO,UAAU,UAAU,KAAK,UAAU,IAAG,MAAM,CAAC;AACvD,UAAE,KAAK;AAAA,MACR,CAAC;AACD,QAAE,KAAK;AAAA,IACR;AAAA,IAEA,sBAAsB,QAAQ;AAC7B,UAAI,MAAK;AAET,aAAO,MAAM,yFAAyF;AAAA,QACrG,SAAS,IAAG;AAAA,MACb,CAAC,EAAE,KAAK,CAAC,WAAW;AACnB,YAAI,QAAQ,OAAO,UAAU,QAAQ;AACrC,cAAM,GAAG,UAAU,IAAG,mBAAmB,IAAG,MAAM,MAAM;AACxD,eAAO,QAAQ;AAAA,MAChB,CAAC;AAAA,IAEF;AAAA,IAEA,oBAAoB,MAAM;AACzB,UAAI,MAAK;AAET,UAAI,CAAC,IAAG,SAAS,QAAQ;AACxB,YAAG,qBAAqB,IAAI;AAAA,MAC7B,OAAO;AACN,YAAG,SAAS,KAAK,MAAM,KAAK,SAAS,MAAM;AAAA,MAC5C;AAEA,UAAG,OAAO,OAAO,OAAK,EAAE,SAAS;AAAA,IAClC;AAAA,IAEA,qBAAqB,MAAM;AAC1B,UAAI,MAAK;AAET,UAAG,kBAAkB,IAAI;AACzB,UAAG,iBAAiB;AAEpB,WAAK,OAAO,QAAQ,WAAS;AAC5B,YAAI,MAAM,gBAAgB,CAAC,QAAQ,OAAO,MAAM,eAAe,MAAM,SAAS,KAC7E,IAAG,cAAc,aAAa,MAAM,WAAW;AAE/C,cAAG,OAAO,KAAK;AAAA,YACd,OAAO,MAAM;AAAA,YACb,WAAW,MAAM;AAAA,UAClB,CAAC;AAAA,QACF;AAAA,MACD,CAAC;AAAA,IACF;AAAA,IAEA,kBAAkB,MAAM;AACvB,UAAI,MAAK;AAET,UAAG,gBAAgB;AAAA,QAClB,OAAO;AAAA,QACP,WAAW;AAAA,MACZ;AAEA,UAAI,KAAK,aAAa;AACrB,YAAI,QAAQ,OAAO,KAAK,aAAa,IAAG,SAAS,KAAK,YAAY,KAAK,CAAC;AAExE,YAAG,gBAAgB;AAAA,UAClB,OAAO,MAAM;AAAA,UACb,WAAW,MAAM;AAAA,QAClB;AAAA,MACD;AAEA,UAAG,OAAO,KAAK,IAAG,aAAa;AAAA,IAChC;AAAA,IAEA,mBAAmB;AAClB,UAAI,MAAK;AAET,UAAI,OAAO,cAAc,IAAG,OAAO,GAAG;AACrC,YAAG,OAAO,KAAK;AAAA,UACd,MAAM;AAAA,UACN,OAAO;AAAA,UACP,WAAW;AAAA,QACZ,CAAC;AAAA,MACF;AAAA,IACD;AAAA,IAEA,mBAAmB,MAAM,QAAQ;AAChC,UAAI,qBAAqB,CAAC;AAE1B,WAAK,OAAO,QAAQ,WAAS;AAC5B,YAAI,CAAC,QAAQ,OAAO,MAAM,eAAe,MAAM,SAAS,GAAG;AAC1D,6BAAmB,KAAK;AAAA,YACvB,OAAO,MAAM;AAAA,YACb,OAAO,MAAM;AAAA,YACb,SAAS,QAAQ,QAAQ,MAAM,SAAS;AAAA,UACzC,CAAC;AAAA,QACF;AAAA,MACD,CAAC;AAED,aAAO;AAAA,IACR;AAAA,IAEA,4BAA4B,YAAY,iBAAiB;AACxD,UAAI,MAAK;AACT,UAAI,iBAAiB,CAAC;AAEtB,UAAI,OAAO,cAAc,IAAG,OAAO,GAAG;AACrC,mBAAW,KAAK,cAAc;AAAA,MAC/B;AAEA,sBAAgB,QAAQ,YAAU;AACjC,YAAI,CAAC,QAAQ,YAAY,MAAM,GAAG;AACjC,yBAAe,KAAK,MAAM;AAAA,QAC3B;AAAA,MACD,CAAC;AAED,aAAO;AAAA,IACR;AAAA,IAEA,mBAAmB,QAAQ;AAC1B,UAAI,MAAK;AAET,UAAI,IAAG,gBAAgB;AACtB,YAAG,iBAAiB,IAAG,eAAe,OAAO,MAAM;AAAA,MACpD,OAAO;AACN,YAAG,iBAAiB;AAAA,MACrB;AAAA,IACD;AAAA,EACD;;;AC3XA,SAAO,QAAQ,cAAc;AAE7B,SAAO,MAAM,WAAW,MAAM,iBAAiB,OAAO,MAAM,SAAS;AAAA,WAC7D,iBAAiB;AACvB,YAAM,QAAQ,OAAO,UAAU;AAC/B,YAAM,UAAU,MAAM;AAEtB,UAAI,MAAM,WAAW,GAAG;AACvB,cAAM,gBAAgB,OAAO,kBAAkB,OAAO;AACtD,cAAM,YAAY,cAAc;AAChC,eAAO,UACN,QACA,OAAO,OAAO,kBAAkB,SAChC,OAAO,MAAM,SAAS,SAAS,IAAI,UAAU,YAAY,IAAI,MAC9D;AACA,eAAO;AAAA,MACR;AACA,aAAO;AAAA,IACR;AAAA,IAEA,YAAY,MAAM;AACjB,YAAM,IAAI;AACV,WAAK,KAAK;AAAA,IACX;AAAA,IAEA,kBAAkB;AACjB,YAAM,WAAW,OAAO,KAAK,SAAS,KAAK,SAAS,GAAG,MAAM;AAC7D,aAAO;AAAA,IACR;AAAA,IAEA,OAAO;AACN,WAAK,OAAO,wBAAwB;AACpC,YAAM,KAAK;AAAA,IACZ;AAAA,IAEA,oBAAoB;AACnB,UAAI,CAAC,KAAK,gBAAgB,GAAG;AAC5B,eAAO,UAAU,EAAE;AACnB,eAAO,MAAM,GAAG,6BAA6B,CAAC,KAAK,OAAO,CAAC,CAAC;AAAA,MAC7D;AAAA,IACD;AAAA,IAEA,gBAAgB;AACf,WAAK,iBAAiB,KAAK,OAAO,KAAK,UAAU,KAAK,gBAAgB;AACtE,UAAI,CAAC,KAAK,eAAe,QAAQ;AAChC,aAAK,iBAAiB,EAAE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IASvB;AACD,aAAK,OAAO,KAAK,UAAU,KAAK,eAAe,EAAE,OAAO,KAAK,cAAc;AAAA,MAC5E;AACA,WAAK,OAAO,KAAK,UAAU,KAAK,cAAc,EAAE,KAAK;AACrD,WAAK,eAAe,KAAK;AAAA,IAC1B;AAAA,IAEA,gBAAgB;AACf,WAAK,kBAAkB,KAAK,eAAe,KAAK;AAChD,WAAK,OAAO,KAAK,UAAU,KAAK,cAAc,EAAE,KAAK;AAAA,IACtD;AAAA,QAEI,YAAY;AACf,aAAO;AAAA,IACR;AAAA,QAEI,qBAAqB;AACxB,aAAO,KAAK,cAAc,KAAK,cAAc,CAAC;AAAA,IAC/C;AAAA,IAEA,iBAAiB;AAChB,YAAM,eAAe;AAErB,WAAK,OAAO;AAEZ,WAAK,UAAU,KAAK,mBAAmB,WAAW;AAClD,WAAK,aAAa,KAAK,mBAAmB,cAAc;AAGxD,WAAK,aAAa,KAAK,WAAW,OAAO,KAAK,eAAe,CAAC;AAG9D,UAAI,MAAM,QAAQ,KAAK,mBAAmB,OAAO,GAAG;AAEnD,cAAM,gBAAgB,KAAK,mBAAmB;AAC9C,aAAK,UAAU,KAAK,iBAAiB,aAAa;AAAA,MACnD,OAAO;AAEN,aAAK,UAAW,MAAK,SAAS,WAAW,CAAC,GAAG,IAAI,CAAC,MAAM;AACvD,cAAI,EAAE,WAAW,GAAG;AACnB,gBAAI,CAAC,KAAK,SAAS,EAAE,IAAI,EAAE,IAAI,EAAE,EAAE;AAAA,UACpC;AACA,iBAAO;AAAA,QACR,CAAC;AAAA,MACF;AAEA,UAAI,KAAK,aAAa;AAAQ,aAAK,gBAAgB;AAEnD,WAAK,2BAA2B;AAChC,aAAO,KAAK,uBAAuB;AAAA,IACpC;AAAA,IAEA,yBAAyB;AACxB,aAAO,OACL,KAAK,0CAA0C;AAAA,QAC/C,SAAS,KAAK;AAAA,MACf,CAAC,EACA,KAAK,CAAC,QAAS,KAAK,qBAAqB,IAAI,WAAW,CAAC,CAAE;AAAA,IAC9D;AAAA,IAEA,eAAe,SAAS,YAAY;AACnC,WAAK,UAAU;AACf,WAAK,aAAa;AAClB,YAAM,eAAe;AAAA,IACtB;AAAA,IAEA,iBAAiB,SAAS;AACzB,UAAI,eAAe,KAAK,KAAK,OAAO,IAAI,QAAM,GAAG,SAAS;AAC1D,qBAAe,aAAa,OAAO,OAAO,MAAM,eAAe;AAC/D,aAAO,QACL,OAAO,CAAC,MAAM,aAAa,SAAS,EAAE,EAAE,CAAC,EACzC,OAAO,CAAC,MAAM,EAAE,EAAE;AAAA,IACrB;AAAA,IAEA,aAAa;AACZ,WAAK,OAAO,YAAY;AACxB,YAAM,WAAW;AAAA,IAClB;AAAA,IAEA,kBAAkB;AACjB,YAAM,gBAAgB;AACtB,WAAK,mBAAmB;AACxB,WAAK,uBAAuB;AAAA,IAC7B;AAAA,IAEA,yBAAyB;AACxB,WAAK,qBAAqB,KAAK,uBAAuB;AACtD,WAAK,6BAA6B,KAAK,+BAA+B;AACtE,WAAK,wBAAwB,CAAC;AAE9B,YAAM,UAAU,KAAK,mBAAmB,OACvC,KAAK,0BACN;AACA,cAAQ,IAAI,CAAC,SAAS;AACrB,cAAM,QAAQ,KAAK,KAAK,sBACvB,KAAK,OACL,KAAK,QACL,KAAK,QACN;AACA,YAAI,KAAK,OAAO;AACf,gBAAM,SAAS,KAAK,KAAK;AAAA,QAC1B;AACA,YAAI,KAAK,sBAAsB,OAAO;AAErC,eAAK,sBAAsB,KAAK,QAAQ;AAAA,QACzC;AAAA,MACD,CAAC;AAAA,IACF;AAAA,IAEA,+CAA+C;AAC9C,YAAM,mBAAmB,OAAO,KAAK,gBAAgB,KAAK,OAAO;AACjE,UAAI,iBAAiB,QAAQ;AAC5B,aAAK,kBAAkB,EACtB;AAAA,OACG,OAAO,MAAM,KAAK,eAAe,IAAI;AAAA,cAEzC,EAAE,MAAM,MAAM,KAAK,kBAAkB,gBAAgB,CAAC,EAAE,SAAS,KAAK,KAAK,SAAS;AAAA,MACrF;AAAA,IACD;AAAA,IAEA,kBAAkB,mBAAmB,CAAC,GAAG;AACxC,aAAO,SACN,OAAO,gBAAgB,qCAAqC;AAAA,QAC3D,gBAAgB;AAAA,MACjB,CAAC,GACD,GAAG,gBAAgB,MAAM,oDAAoD,CAC9E;AAAA,IACD;AAAA,IAEA,aAAa;AACZ,UAAI,SAAS,CAAC,EAAE,OACf,OAAO,MAAM,iBACb,KAAK,wBAAwB,GAC7B,CAAC,KAAK,KAAK,aAAa,KAAK,KAAK,WAAW,GAC7C,KAAK,SAAS,cAAc,CAAC,GAC7B,KAAK,KAAK,aAAa,UAAU,MACjC,KAAK,SACL,WACA,YACA,OACD;AAEA,aAAO,QAAQ,CAAC,MAAM,KAAK,WAAW,CAAC,CAAC;AAExC,WAAK,OAAO,QAAQ,CAAC,MAAM;AAC1B,cAAM,KAAK,OAAO,KAAK,aAAa,EAAE,IAAI,EAAE,EAAE;AAC9C,YACC,MACA,GAAG,cAAc,cACjB,GAAG,WACH,CAAC,GAAG,QAAQ,SAAS,GAAG,GACvB;AACD,eAAK,WAAW,GAAG,OAAO;AAAA,QAC3B;AAAA,MACD,CAAC;AAAA,IACF;AAAA,IAEA,6BAA6B;AAE5B,WAAK,UAAU,KAAK,QAAQ,KAAK,IAAI;AACrC,WAAK,UAAU,OAAO,MAAM,SAAS,KAAK,SAAS,GAAI;AACvD,WAAK,WAAW,IAAI,QAAQ,CAAC,YAAY;AACxC,YAAI,KAAK,eAAe;AACvB,iBAAO,QAAQ,KAAK,eAAe,OAAO;AAAA,QAC3C,OAAO;AACN,kBAAQ;AAAA,QACT;AAAA,MACD,CAAC;AAED,YAAM,WAAW,IAAI,KAAK;AAC1B,kBAAY,MAAM;AAEjB,YAAI,OAAO,cAAc,MAAM,KAAK,WAAW;AAC9C,eAAK,QAAQ;AAAA,QACd;AAAA,MACD,GAAG,QAAQ;AAAA,IACZ;AAAA,IAEA,qBAAqB;AACpB,UAAI,KAAK,YAAY;AACpB,cAAM,eAAe,GAAG,OAAO,OAAO,cAAc,KAAK,GAAG,KAAK,OAAO;AAIxE,cAAM,QAAQ,GAAG,GAAG,OAAO,MAAM,6BAA6B,KAAK;AACnE,aAAK,KAAK,mBACT,OACA,MAAM;AACL,cAAI,KAAK,SAAS,gBAAgB;AACjC,iBAAK,SAAS,eAAe;AAAA,UAC9B,OAAO;AACN,iBAAK,aAAa;AAAA,UACnB;AAAA,QACD,GACA,KACD;AAAA,MACD,OAAO;AACN,aAAK,KAAK,qBAAqB;AAAA,MAChC;AAAA,IACD;AAAA,IAEA,eAAe;AACd,YAAM,UAAU,KAAK;AACrB,YAAM,UAAU,CAAC;AACjB,WAAK,YAAY,IAAI,EAAE,QAAQ,CAAC,MAAM;AACrC,YAAI,EAAE,OAAO,OAAO,OAAO,MAAM,iBAAiB,EAAE,EAAE,GAAG;AACxD,kBAAQ,EAAE,MAAM,EAAE;AAAA,QACnB;AAAA,MACD,CAAC;AACD,aAAO,QAAQ,SAAS,OAAO;AAAA,IAChC;AAAA,IAEA,aAAa;AACZ,WAAK,cAAc;AACnB,WAAK,cAAc;AACnB,WAAK,gBAAgB;AACrB,WAAK,aAAa;AAClB,WAAK,SAAS,UAAU,KAAK,SAAS,OAAO,IAAI;AACjD,WAAK,6CAA6C;AAAA,IACnD;AAAA,IAEA,gBAAgB,MAAM,oBAAoB;AACzC,WAAK,OAAO;AACZ,WAAK,qBAAqB;AAE1B,WAAK,cAAc;AACnB,WAAK,QAAQ,IAAI;AAAA,IAClB;AAAA,IAEA,QAAQ,iBAAe,OAAO;AAC7B,YAAM,QAAQ,EAAE,KAAK,MAAM;AAC1B,aAAK,cAAc,cAAc;AACjC,aAAK,gBAAgB;AACrB,aAAK,wBAAwB;AAAA,MAC9B,CAAC;AAAA,IACF;AAAA,IAEA,gBAAgB,QAAQ;AACvB,UAAI,CAAC,KAAK;AAAmB;AAE7B,UAAI,sBAAsB,KAAK,kBAAkB,KAAK,iBAAiB;AAEvE,UAAI,oBAAoB,KAAK,SAAS,KAAK,UAAU,CAAC,OAAO,KAAK,SAAS,GAAG;AAC7E,4BAAoB,KAAK,WAAW,KAAK;AAAA,MAC1C;AAEA,0BAAoB,KAAK,WAAW,KAAK,QAAQ,WAAW,KAAK,KAAK,MAAM;AAAA,IAC7E;AAAA,IAEA,oBAAoB;AACnB,WAAK,UAAU,EACd;AAAA,MACG,GAAG,SAAS;AAAA,UAEhB,EAAE,KAAK;AACP,WAAK,QAAQ,OAAO,KAAK,OAAO;AAAA,IACjC;AAAA,IAEA,gBAAgB;AAEf,WAAK,UAAU,CAAC;AAEhB,YAAM,SAAS,OAAO,KAAK,aAAa,KAAK,MAAM,KAAK,OAAO;AAG/D,UAAI,KAAK,KAAK,aAAa;AAC1B,aAAK,QAAQ,KAAK;AAAA,UACjB,MAAM;AAAA,UACN,IAAI,OAAO,KAAK,KAAK,WAAW;AAAA,QACjC,CAAC;AAAA,MACF,OAAO;AACN,aAAK,QAAQ,KAAK;AAAA,UACjB,MAAM;AAAA,UACN,IAAI;AAAA,YACH,OAAO,GAAG,IAAI;AAAA,YACd,WAAW;AAAA,UACZ;AAAA,QACD,CAAC;AAAA,MACF;AAGA,WAAK,QAAQ,KAAK;AAAA,QACjB,MAAM;AAAA,MACP,CAAC;AAGD,UAAI,OAAO,cAAc,KAAK,OAAO,GAAG;AAEvC,aAAK,QAAQ,KAAK;AAAA,UACjB,MAAM;AAAA,QACP,CAAC;AAAA,MACF;AAEA,YAAM,sBAAsB,KAAK,wBAAwB;AAEzD,WAAK,UAAU,KAAK,QAAQ,OAC3B,oBACE,OAAO,CAAC,OAAO;AACf,YACC,OAAO,cAAc,KAAK,OAAO,KACjC,GAAG,cAAc,UAChB;AACD,iBAAO;AAAA,QACR;AACA,YAAI,CAAC,GAAG,cAAc;AACrB,iBAAO;AAAA,QACR;AACA,eAAO,GAAG,cAAc,KAAK,KAAK;AAAA,MACnC,CAAC,EACA,IAAI,CAAC,OAAQ;AAAA,QACb,MAAM;AAAA,QACN;AAAA,MACD,EAAE,CACJ;AAEA,UAAI,KAAK,mBAAmB,QAAQ;AACnC,aAAK,UAAU,KAAK,wBAAwB;AAAA,MAC7C;AAMA,UAAI,eAAe;AAEnB,UAAI,OAAO,cAAc,MAAM;AAC9B,uBAAe;AAAA,MAChB,WAAW,OAAO,cAAc,MAAM;AACrC,uBAAe;AAAA,MAChB;AAEA,WAAK,UAAU,KAAK,QAAQ,MAAM,GAAG,KAAK,mBAAmB,gBAAgB,YAAY;AAEzF,UACC,CAAC,KAAK,SAAS,oBACf,KAAK,KAAK,eACV,KAAK,KAAK,gBAAgB,QACzB;AACD,aAAK,QAAQ,KAAK;AAAA,UACjB,MAAM;AAAA,UACN,IAAI;AAAA,YACH,OAAO,GAAG,IAAI;AAAA,YACd,WAAW;AAAA,UACZ;AAAA,QACD,CAAC;AAAA,MACF;AAAA,IACD;AAAA,IAEA,0BAA0B;AACzB,UAAI,eAAe,CAAC;AACpB,UAAI,SAAS,KAAK,MAAM,KAAK,mBAAmB,MAAM;AAGtD,mBAAa,KAAK,KAAK,QAAQ,EAAE;AACjC,mBAAa,KAAK,KAAK,QAAQ,EAAE;AACjC,WAAK,QAAQ,OAAO,GAAG,CAAC;AAExB,eAAS,OAAO,QAAQ;AACvB,iBAAS,OAAO,KAAK,SAAS;AAC7B,cAAI,QAAQ,OAAO;AACnB,cAAI,SAAS,KAAK,QAAQ;AAE1B,cAAI,OAAO,QAAQ,YAAY,MAAM,aAAa,gBAAgB;AACjE,yBAAa,KAAK,MAAM;AACxB;AAAA,UACD,WAAW,OAAO,QAAQ,WAAW,MAAM,cAAc,OAAO,GAAG,WAAW;AAC7E,yBAAa,KAAK,MAAM;AACxB;AAAA,UACD;AAAA,QACD;AAAA,MACD;AAEA,aAAO;AAAA,IACR;AAAA,IAEA,yBAAyB;AACxB,UAAI,KAAK,KAAK,eAAe;AAC5B,eAAO,YACN,KAAK,KAAK;AAAA,MAEZ;AACA,aAAO;AAAA,IACR;AAAA,IAEA,wBAAwB;AACvB,UAAI,YAAY,KAAK,uBAAuB;AAC5C,UAAI,UAAU,KAAK,eAAe,KAAK,YAAY,IAAI;AACvD,UAAI,oBAAoB,WAAW,QAAQ,SACxC,GAAG,gBAAgB,CAAC,GAAG,KAAK,OAAO,CAAC,CAAC,IACrC,GAAG,iCAAiC,CAAC,GAAG,KAAK,OAAO,CAAC,CAAC;AACzD,UAAI,mBAAmB,WAAW,QAAQ,SACvC,GAAG,oBAAoB,CAAC,GAAG,KAAK,OAAO,CAAC,GAAG,sCAAsC,IACjF,GAAG,yBAAyB,CAAC,GAAG,KAAK,OAAO,CAAC,GAAG,sCAAsC;AACzF,UAAI,oBACH,KAAK,SAAS,qBACd;AAED,YAAM,aAAa,KAAK,aACrB;AAAA,MACC;AAAA;AAAA,MAEA,GAAG,cAAc,MAAM,sCAAsC;AAAA,oBAE9D;AAEH,aAAO;AAAA;AAAA,gBAEO;AAAA;AAAA,QAER;AAAA,KACH;AAAA,KACA;AAAA;AAAA,IAEJ;AAAA,IAEA,SAAS;AACR,UAAI,KAAK,sBAAsB,CAAC,KAAK,mBAAmB,eAAe;AACtE,aAAK,QACH,KAAK,aAAa,EAClB,KAAK,SAAS,GAAG,cAAc,MAAM,6BAA6B,aAAa;AAAA,MAClF;AAAA,IACD;AAAA,IAEA,WAAW;AACV,YAAM,OAAO,MAAM,SAAS;AAE5B,aAAO,OAAO,OAAO,MAAM;AAAA,QAC1B,oBAAoB;AAAA,MACrB,CAAC;AAAA,IACF;AAAA,IAEA,iBAAiB;AAChB,UAAI,OAAO,iBAAiB,KAAK,aAAa;AAC7C,aAAK,UAAU,KAAK,iCAAiC;AACrD,eAAO,gBAAgB;AAEvB,YAAI,KAAK,QAAQ,SAAS,GAAG;AAC5B,iBAAO,KAAK,YACV,MAAM,KAAK,EACX,KAAK,MAAM,KAAK,YAAY,IAAI,KAAK,OAAO,CAAC;AAAA,QAChD;AAAA,MACD;AAEA,aAAO,QAAQ,QAAQ;AAAA,IACxB;AAAA,IAEA,8BAA8B;AAC7B,aAAQ,MAAK,SAAS,WAAW,CAAC,GAAG,IAAI,CAAC,MAAM;AAC/C,YAAI,EAAE,WAAW,GAAG;AACnB,cAAI,CAAC,KAAK,SAAS,EAAE,IAAI,EAAE,IAAI,EAAE,EAAE;AAAA,QACpC;AACA,eAAO;AAAA,MACR,CAAC;AAAA,IACF;AAAA,IAEA,qBAAqB;AACpB,YAAM,mBAAmB;AACzB,WAAK,2BACJ,KAAK,QAAQ,KAAK,yBAAyB,EAAE,SAAS,CACvD;AAAA,IACD;AAAA,IAEA,2BAA2B,QAAQ;AAClC,UAAI,QAAQ;AACX,aAAK,KAAK,kBAAkB;AAC5B,aAAK,KAAK,qBAAqB;AAC/B,aAAK,wBAAwB;AAAA,MAC9B,OAAO;AACN,aAAK,KAAK,kBAAkB;AAC5B,aAAK,mBAAmB;AAAA,MACzB;AAAA,IACD;AAAA,IAEA,cAAc,iBAAe,OAAO;AACnC,UAAI,gBAAgB;AACnB,aAAK,QAAQ,KAAK,gBAAgB,EAAE,OAAO;AAAA,MAC5C;AACA,UAAI,KAAK,QAAQ,KAAK,gBAAgB,EAAE,WAAW,GAAG;AAErD,aAAK,QAAQ,QAAQ,KAAK,gBAAgB,CAAC;AAAA,MAC5C;AAAA,IACD;AAAA,IAEA,kBAAkB;AACjB,YAAM,OAAO,KAAK,2BACjB,kEACD;AACA,WAAK,QAAQ,OAAO,IAAI;AAAA,IACzB;AAAA,IAEA,gBAAgB;AACf,WAAK,SAAS,iBAAiB,KAAK,SAAS,cAAc;AAC3D,aAAO,MAAM,cAAc,KAC1B,KAAK,SACL,aACA,KAAK,SACN;AACA,WAAK,wBAAwB;AAAA,QAC5B,SAAS,KAAK,eAAe,KAAK,YAAY,IAAI;AAAA,QAClD,SAAS,KAAK,iBAAiB,KAAK,cAAc;AAAA,QAClD,YAAY,KAAK,iBAAiB,KAAK,cAAc;AAAA,MACtD,CAAC;AACD,WAAK,iBAAiB,KAAK,aAAa,OAAO,KAAK;AAAA,IACrD;AAAA,IAEA,eAAe;AACd,WAAK,WAAW,KAAK;AAAA;AAAA,MAEjB,KAAK,sBAAsB;AAAA;AAAA,GAE9B;AACD,WAAK,oBAAoB;AACzB,WAAK,gBAAgB,KAAK,aAAa,aAAa;AACpD,WAAK,iBAAiB,KAAK,aAAa,OAAO,IAAI;AAAA,IACpD;AAAA,IAEA,SAAS;AACR,WAAK,YAAY;AACjB,WAAK,oBAAoB;AACzB,WAAK,eAAe;AACpB,WAAK,aAAa;AAAA,IACnB;AAAA,IAEA,cAAc;AAEb,WAAK,QAAQ,KAAK,qBAAqB,EAAE,OAAO;AAChD,UAAI,KAAK,KAAK,SAAS,GAAG;AAEzB,aAAK,QAAQ,OACZ,KAAK,KACH,IAAI,CAAC,KAAK,OAAM;AAChB,cAAI,OAAO;AACX,iBAAO,KAAK,kBAAkB,GAAG;AAAA,QAClC,CAAC,EACA,KAAK,EAAE,CACV;AAAA,MACD;AAAA,IACD;AAAA,IAEA,eAAe;AACd,UAAI,CAAC,KAAK,mBAAmB,eAAe;AAC3C,aAAK,cAAc,EAAE,KAAK,CAAC,QAAQ;AAClC,eAAK,QAAQ,KAAK,aAAa,EAAE,KAAK,SAAS,YAAY;AAAA,QAC5D,CAAC;AAAA,MACF;AAAA,IACD;AAAA,IAEA,kBAAkB;AACjB,UAAI,CAAC,KAAK,SAAS;AAClB;AAAA,MACD;AAEA,YAAM,gBAAgB,KAAK,QAAQ,GAAG;AACtC,UAAI,eAAe;AAAA;AAAA,aAER,GAAG,YAAY;AAAA;AAAA,mBAET,GAAG,OAAO,MAAM,OAAO,MAAM,KAAK,SAAS,MAAM,WAAW;AAAA;AAAA,8BAEjD,GAAG,cAAc,KAAK;AAAA;AAElD,YAAM,WAAW,KAAK,QACpB,IAAI,SAAO;AACX,YAAI,UAAU;AAAA,UACb;AAAA,UACA,IAAI,QAAQ,YAAY,uBAAuB;AAAA,UAC/C,IAAI,QAAQ,QAAQ,iBAAgB;AAAA,UACpC,OAAO,MAAM,iBAAiB,IAAI,EAAE,IAAI,eAAe;AAAA,QACxD,EAAE,KAAK,GAAG;AAEV,eAAO;AAAA,kBACO;AAAA,OACX,IAAI,SAAS,YAAY,eAAe;AAAA,cACjC,GAAI,IAAI,MAAM,IAAI,GAAG,SAAU,IAAI,IAAI;AAAA;AAAA;AAAA,MAGlD,CAAC,EACA,KAAK,EAAE;AAET,aAAO,KAAK,yBACX,UACA,kCACD;AAAA,IACD;AAAA,IAEA,yBAAyB,OAAO,IAAI,QAAQ,IAAI;AAC/C,aAAO;AAAA;AAAA;AAAA,OAGF;AAAA;AAAA;AAAA;AAAA;AAAA,gBAKS,GAAG,YAAY;AAAA;AAAA;AAAA;AAAA;AAAA,OAKxB;AAAA;AAAA;AAAA;AAAA,IAIN;AAAA,IAEA,cAAc,KAAK;AAClB,aAAO,KAAK,QACV,IAAI,CAAC,QAAQ,KAAK,gBAAgB,KAAK,GAAG,CAAC,EAC3C,KAAK,EAAE;AAAA,IACV;AAAA,IAEA,eAAe,KAAK;AACnB,aAAO,KAAK,cAAc,GAAG;AAAA,IAC9B;AAAA,IAEA,kBAAkB,KAAK;AACtB,aAAO,KAAK,2BACX,KAAK,cAAc,GAAG,GACtB,KAAK,eAAe,GAAG,CACxB;AAAA,IACD;AAAA,IAEA,2BAA2B,OAAO,IAAI,QAAQ,IAAI;AACjD,aAAO;AAAA;AAAA;AAAA;AAAA,QAID;AAAA;AAAA;AAAA,QAGA;AAAA;AAAA;AAAA;AAAA;AAAA,IAKP;AAAA,IAEA,gBAAgB,KAAK,KAAK;AACzB,UAAI,IAAI,SAAS,UAAU;AAC1B,eAAO;AAAA;AAAA,OAEH,KAAK,mBAAmB,GAAG;AAAA;AAAA;AAAA,MAGhC;AAEA,UAAI,IAAI,SAAS,OAAO;AACvB,cAAM,qBAAqB,CAAC,KAAK,aAAa,SAAS;AACvD,YAAI,YAAY,IAAI,aAAa,KAAK,cAAc,IAAI,YAAY,CAAC,IAAI;AACzE,eAAO;AAAA,uCAC6B;AAAA,OAChC;AAAA;AAAA;AAAA,MAGL;AAEA,YAAM,KAAK,IAAI,MAAM,CAAC;AACtB,YAAM,QAAQ,GAAG;AACjB,YAAM,YAAY,GAAG;AACrB,YAAM,QAAQ,IAAI,cAAc;AAEhC,YAAM,SAAS,MAAM;AACpB,YAAI,GAAG,cAAc,QAAQ;AAC5B,iBAAO;AAAA,QACR,WAAW,GAAG,cAAc,WAAW;AACtC,iBAAO;AAAA;AAAA,wBAEa;AAAA,6DACqC,KAAK,MAAM,KAAK;AAAA;AAAA;AAAA,QAG1E,OAAO;AACN,iBAAO,OAAO,OAAO,OAAO,IAAI,MAAM,GAAG;AAAA,QAC1C;AAAA,MACD;AAEA,YAAM,aAAa,MAAM;AACxB,YAAI;AACJ,YAAI;AACJ,YAAI,sBACH,GAAG,aAAa,iBACf,GAAG,cACH,CAAC,QAAQ,YAAY,EAAE,SAAS,GAAG,SAAS;AAE9C,YAAI,qBAAqB;AACxB,mBAAS,WAAW,KAAK;AAAA,QAC1B,OAAO;AACN,mBACC,OAAO,UAAU,WACd,OAAO,MAAM,YAAY,KAAK,IAC9B;AAAA,QACL;AAEA,YAAI,GAAG,cAAc,UAAU;AAC9B,cAAI,iBAAiB,GAAG,WAAW;AACnC,mBAAS,SAAS;AAAA,QACnB;AAEA,YAAI,GAAG,cAAc,SAAS;AAC7B,iBAAO,GAAG,UAAU,aAAa,IAAI,GAAG;AAAA,oDAErC;AAAA,QACC,OAAO,MAAM,KAAK,aAAa;AAAA;AAAA,QAEpC,WAAW,GAAG,cAAc,UAAU;AACrC,iBAAO,0CAA0C,OAAO,MAAM,aAC7D,MACD;AAAA,oBACgB,eAAe;AAAA,+BACJ,GAAG,MAAM;AAAA;AAAA,QAErC,WAAW,GAAG,cAAc,QAAQ;AACnC,iBAAO;AAAA,oBACS,eAAe;AAAA,OAC5B;AAAA;AAAA,QAEJ,WACC,CAAC,eAAe,QAAQ,cAAc,eAAe,iBAAiB,EAAE,SACvE,GAAG,SACJ,GACC;AACD,iBAAO;AAAA,OACJ;AAAA;AAAA,QAEJ,OAAO;AACN,iBAAO;AAAA,oBACS,eAAe,OAAO,MAAM,YAAY,KAAK;AAAA,OAC1D,OAAO;AAAA;AAAA,QAEX;AAEA,eAAO;AAAA,aACG,GAAG,KAAK,MAAM,OAAO,MAAM,YAAY,MAAM;AAAA,MACpD;AAAA;AAAA,MAEJ;AAEA,YAAM,YAAY;AAAA,QACjB,SAAS;AAAA,QACT,OAAO;AAAA,MACR;AACA,YAAM,YAAY;AAAA,QACjB;AAAA,QACA,UAAU,IAAI;AAAA,QACd,OAAO,MAAM,iBAAiB,EAAE,IAAI,eAAe;AAAA,MACpD,EAAE,KAAK,GAAG;AAEV,YAAM,WAAW;AAAA,QAChB,SAAS,KAAK,iBAAiB,GAAG;AAAA,QAClC,OAAO,WAAW;AAAA,MACnB;AACA,UAAI,cAAc,SAAS,IAAI;AAG/B,UACC,KAAK,SAAS,cACd,KAAK,SAAS,WAAW,YACxB;AACD,sBAAc,KAAK,SAAS,WAAW,WAAW,OAAO,IAAI,GAAG;AAAA,MACjE;AAEA,aAAO;AAAA,iBACQ;AAAA,MACX;AAAA;AAAA;AAAA,IAGL;AAAA,IAEA,cAAc,WAAW,OAAO,UAAQ,OAAO;AAC9C,UAAI,eAAe,SAAO;AACzB,YAAI,QAAQ,IAAI,QAAQ;AACxB,YAAI,KAAK;AACR,cAAI,SAAS;AACZ,oBAAQ,OAAO,YAAY,GAAG;AAC9B,oBAAQ,yBAAyB,MAAM,mBAAmB,MAAM;AAAA,UACjE;AAEA,iBAAO,yCAAyC,eAAe,UAAU;AAAA,QAC1E;AAAA,MACD;AACA,aAAO,UAAU,MAAM,GAAG,EAAE,MAAM,GAAG,QAAQ,CAAC,EAAE,IAAI,YAAY,EAAE,KAAK,EAAE;AAAA,IAC1E;AAAA,IAEA,cAAc,KAAK;AAClB,UAAI,OAAO;AAEX,UAAI,kBAAkB;AACtB,UAAI,KAAK,SAAS,UAAU,KAAK,SAAS,OAAO,KAAK,GAAG,GAAG;AAC3D,0BAAkB;AAAA;AAAA;AAAA,mBAGF,IAAI,mBAAmB,IAAI;AAAA,eAC/B,KAAK,SAAS,OAAO,gBAAgB,GAAG;AAAA,QAC/C,KAAK,SAAS,OAAO,UAAU,GAAG;AAAA;AAAA;AAAA;AAAA,MAIxC;AAEA,YAAM,WAAW,aAAa,IAAI,UAAU,IAAI;AAEhD,UAAI,cAAc;AAAA;AAAA;AAAA;AAKlB,UAAI,iBAAiB,KAAK,MAAM,IAAI,WAAW,IAAI;AACnD,UAAI,eAAe,QAAQ;AAC1B,sBAAc;AAAA,OACV,OAAO,aAAa,gBAAgB,GAAG,EAAE,YAAY,KAAK,CAAC,EAAE,GAAG;AAAA;AAAA,MAErE;AAEA,YAAM,gBAAgB;AAAA,MAClB,OAAO,MAAM,KAAK,eAAe;AAAA,MACjC,IAAI,iBAAiB,KAAK,QAAQ,IAAI;AAAA;AAG1C,cAAQ;AAAA;AAAA;AAAA,OAGH,mBAAmB;AAAA;AAAA,MAEpB;AAAA,MACA;AAAA;AAAA;AAAA,MAGA,KAAK,kBAAkB,GAAG;AAAA;AAAA;AAI9B,aAAO;AAAA,IACR;AAAA,IAEA,gBAAgB;AACf,UAAI,gBAAgB,KAAK,KAAK;AAC9B,UAAI,yBAAyB,KAAK,KAAK,OAAO,CAAC,MAAM,EAAE,IAAI,EAAE;AAE7D,aAAO,OAAO,GAAG,MAAM,KAAK,SAAS;AAAA,QACpC,SAAS,KAAK,qBAAqB;AAAA,MACpC,CAAC,EAAE,KAAK,iBAAe;AACtB,aAAK,cAAc,eAAe;AAClC,aAAK,yBAAyB,2BAA2B,gBAAgB,yBAAyB;AAClG,YAAI,MAAM,GAAG,cAAc,CAAC,eAAe,KAAK,WAAW,CAAC;AAC5D,YAAI,KAAK,wBAAwB;AAChC,gBAAM,GAAG,uCAAuC,CAAC,wBAAwB,KAAK,aAAa,aAAa,CAAC;AAAA,QAC1G;AACA,eAAO;AAAA,MACR,CAAC;AAAA,IACF;AAAA,IAEA,cAAc,KAAK;AAClB,UAAI,KAAK,SAAS,eAAe;AAChC,eAAO,KAAK,SAAS,cAAc,GAAG;AAAA,MACvC;AAEA,YAAM,UAAU,KAAK,IAAI,IAAI,EAAE,MAAM,UAAU,IAC5C,mBAAmB,IAAI,IAAI,IAC3B,IAAI;AAEP,aAAO,QAAQ,OAAO,OAAO,KAAK,OAAO,OAAO,kBAAkB,KAAK,OAAO,KAAK;AAAA,IACpF;AAAA,IAEA,eAAe,KAAK;AACnB,aAAO,KAAK,MAAM,IAAI,SAAS,IAAI,EAAE,SAAS,OAAO,QAAQ,IAAI,IAC9D,KACA;AAAA,IACJ;AAAA,IAEA,cAAc,KAAK;AAClB,YAAM,WAAW,KAAK,MAAM,IAAI,aAAa,IAAI;AACjD,UAAI,cAAc,SAAS,SAAS,OAAO,QAAQ,IAAI,IACpD,mBACA;AAEH,aAAO;AAAA,wBACe;AAAA,gBACR,IAAI,uBAAuB,KAAK;AAAA,oBAC5B,UAAU,IAAI,SAAS,KAAK;AAAA,YACpC,SAAS,IAAI,OAAK,OAAO,UAAU,CAAC,EAAE,QAAQ,EAAE,KAAK,IAAI;AAAA,KAChE,OAAO,MAAM,KAAK,SAAS,MAAM,WAAW;AAAA;AAAA;AAAA,KAG5C,SAAS,SAAS,KAAK,GAAG,IAAI,IAAI,MAAM,GAAG,SAAS,UAAU,EAAE;AAAA;AAAA,IAEpE;AAAA,IAEA,iBAAiB,KAAK;AACrB,UAAI,gBAAgB,KAAK,QAAQ,GAAG;AACpC,UAAI,QAAQ,IAAI,cAAc;AAC9B,UAAI,KAAK,SAAS,cAAc,KAAK,SAAS,WAAW,cAAc,YAAY;AAClF,YAAI,YAAY,KAAK,SAAS,WAAW,cAAc;AACvD,gBAAQ,UAAU,OAAO,eAAe,GAAG;AAAA,MAC5C;AACA,UAAI,CAAC,OAAO;AACX,gBAAQ,IAAI;AAAA,MACb;AACA,UAAI,UAAU,WAAW,MAAM,SAAS,CAAC;AACzC,UAAI,kBAAkB,OAAO,MAAM,YAAY,OAAO;AAEtD,YAAM,OAAO,KAAK,eAAe,GAAG;AAEpC,UAAI,eAAe;AAAA;AAAA;AAAA,kBAGH,OAAO,IAAI,IAAI;AAAA;AAAA,OAE1B,KAAK,cAAc,GAAG;AAAA;AAAA;AAAA,6BAGA,yBAAyB;AAAA;AAAA,aAEzC,KAAK,cAAc,GAAG;AAAA,cACrB;AAAA,qBACO,KAAK;AAAA,kBACR,IAAI;AAAA,OACf;AAAA;AAAA;AAAA;AAKL,aAAO;AAAA,IACR;AAAA,IAEA,mBAAmB,KAAK;AACvB,YAAM,YAAY,OAAO,cAAc,KAAK,KAAK,OAAO;AAExD,YAAM,wBAAwB;AAAA,QAC7B,GAAG,4BAA4B;AAAA,QAC/B,GAAG,6BAA6B;AAAA,QAChC,GAAG,6BAA6B;AAAA,MACjC;AACA,YAAM,QAAQ,sBAAsB,IAAI,aAAa;AACrD,UAAI,WAAW;AACd,eAAO,+BAA+B,UAAU;AAAA,mBAChC,UAAU,cAAc;AAAA,8BACb,GAAG,UAAU,EAAE;AAAA;AAAA,MAE3C;AACA,aAAO;AAAA,IACR;AAAA,IAEA,kBAAkB,KAAK;AACtB,YAAM,YAAY,OAAO,cAAc,KAAK,KAAK,OAAO;AACxD,UAAI,CAAC;AAAW,eAAO;AACvB,aAAO,0BAA0B,UAAU,cAAc,GACxD,UAAU,EACX;AAAA,IACD;AAAA,IAEA,cAAc,KAAK;AAClB,UAAI,MAAM,IAAI,QAAQ,IAAI,QAAQ,IAAI,KAAK,KAAK;AAEhD,UAAI,OAAO,WAAW,CAAC,OAAO,MAAM,OAAO,GAAG,GAAG;AAChD,cAAM,OAAO,WAAW;AAAA,MACzB;AACA,aAAO,OAAO;AAAA,IACf;AAAA,IAEA,eAAe;AACd,WAAK,iBAAiB;AACtB,WAAK,iBAAiB;AACtB,WAAK,gBAAgB;AACrB,WAAK,oBAAoB;AACzB,WAAK,mBAAmB;AACxB,WAAK,WAAW;AAChB,WAAK,uBAAuB;AAC5B,WAAK,qBAAqB;AAC1B,WAAK,0BAA0B;AAAA,IAChC;AAAA,IAEA,4BAA4B;AAC3B,UAAI,kBAAkB,MAAM;AAC3B,aAAK,QAAQ,KAAK,2BAA2B,EAAE,MAAM;AAAA,MACtD;AACA,UAAI,aAAa,MAAM;AACtB,UAAE,SAAS,aAAa,EACtB,KAAK,EACL,MAAM;AAAA,MACT;AACA,UAAI,aAAa,MAAM;AACtB,UAAE,SAAS,aAAa,EACtB,KAAK,EACL,MAAM;AAAA,MACT;AACA,UAAI,mBAAmB,MAAM;AAC5B,eAAO,EAAE,SAAS,aAAa,EAAE,GAAG,qBAAqB;AAAA,MAC1D;AACA,UAAI,YAAY,CAAC,SAAS;AACzB,YAAI,SAAS,KAAK,KAAK,sBAAsB;AAC7C,eAAO,MAAM;AAAA,MACd;AACA,UAAI,0BAA0B,MAC7B,iBAAiB,IAAI,EAAE,SAAS,aAAa,IAAI;AAElD,UAAI,kBAAkB,MAAM,KAAK,KAAK,QAAQ,GAAG,UAAU;AAC3D,UAAI,mBAAmB,MAAM,EAAE,SAAS,aAAa,EAAE,GAAG,OAAO;AAEjE,UAAI,oBAAoB,CAAC,cAAc;AACtC,YAAI,CAAC,gBAAgB,KAAK,iBAAiB;AAAG,iBAAO;AAErD,YAAI,YAAY,wBAAwB;AACxC,YAAI,WAAW;AACd,wBAAc,SAAS,WAAW,IAAI,WAAW;AAAA,QAClD,OAAO;AACN,0BAAgB;AAAA,QACjB;AAAA,MACD;AAEA,aAAO,GAAG,KAAK,aAAa;AAAA,QAC3B,UAAU;AAAA,QACV,QAAQ,MAAM,kBAAkB,MAAM;AAAA,QACtC,aAAa,GAAG,sBAAsB,MAAM,qCAAqC;AAAA,QACjF,MAAM,KAAK;AAAA,MACZ,CAAC;AAED,aAAO,GAAG,KAAK,aAAa;AAAA,QAC3B,UAAU;AAAA,QACV,QAAQ,MAAM,kBAAkB,IAAI;AAAA,QACpC,aAAa,GAAG,oBAAoB,MAAM,qCAAqC;AAAA,QAC/E,MAAM,KAAK;AAAA,MACZ,CAAC;AAED,aAAO,GAAG,KAAK,aAAa;AAAA,QAC3B,UAAU;AAAA,QACV,QAAQ,MAAM;AACb,cAAI,CAAC,gBAAgB,KAAK,iBAAiB;AAAG,mBAAO;AACrD,cAAI,YAAY,wBAAwB;AACxC,oBAAU,SAAS;AACnB,qBAAW;AAAA,QACZ;AAAA,QACA,aAAa,GAAG,8BAA8B,MAAM,qCAAqC;AAAA,QACzF,MAAM,KAAK;AAAA,MACZ,CAAC;AAED,aAAO,GAAG,KAAK,aAAa;AAAA,QAC3B,UAAU;AAAA,QACV,QAAQ,MAAM;AACb,cAAI,CAAC,gBAAgB,KAAK,iBAAiB;AAAG,mBAAO;AACrD,cAAI,YAAY,wBAAwB;AACxC,oBAAU,SAAS;AACnB,qBAAW;AAAA,QACZ;AAAA,QACA,aAAa,GAAG,8BAA8B,MAAM,qCAAqC;AAAA,QACzF,MAAM,KAAK;AAAA,MACZ,CAAC;AAED,aAAO,GAAG,KAAK,aAAa;AAAA,QAC3B,UAAU;AAAA,QACV,QAAQ,MAAM;AACb,cAAI,YAAY,wBAAwB;AACxC,cAAI,WAAW;AACd,sBAAU,KAAK,cAAc,EAAE,GAAG,MAAM;AACxC,mBAAO;AAAA,UACR;AACA,iBAAO;AAAA,QACR;AAAA,QACA,aAAa,GAAG,kBAAkB,MAAM,qCAAqC;AAAA,QAC7E,MAAM,KAAK;AAAA,MACZ,CAAC;AAED,aAAO,GAAG,KAAK,aAAa;AAAA,QAC3B,UAAU;AAAA,QACV,QAAQ,MAAM;AACb,cAAI,YAAY,wBAAwB;AACxC,cAAI,WAAW;AACd,sBAAU,SAAS;AACnB,mBAAO;AAAA,UACR;AACA,iBAAO;AAAA,QACR;AAAA,QACA,aAAa,GAAG,oBAAoB,MAAM,qCAAqC;AAAA,QAC/E,MAAM,KAAK;AAAA,MACZ,CAAC;AAAA,IACF;AAAA,IAEA,mBAAmB;AAElB,WAAK,QAAQ,GAAG,SAAS,eAAe,CAAC,MAAM;AAC9C,YAAI,EAAE,WAAW,EAAE;AAAS;AAC5B,UAAE,gBAAgB;AAClB,cAAM,QAAQ,EAAE,EAAE,aAAa;AAC/B,cAAM,UAAU,MAAM,KAAK,aAAa,EAAE,MAAM,GAAG;AACnD,cAAM,mBAAmB,QAAQ,IAAI,CAAC,MAAM;AAC3C,cAAI,EAAE,MAAM,GAAG;AACf,cAAI,EAAE,OAAO,SAAS;AACrB,cAAE,KAAK,OAAO,SAAS,UAAU;AAAA,UAClC,WAAW,EAAE,MAAM,QAAQ;AAC1B,cAAE,KAAK,OAAO,QAAQ;AAAA,UACvB;AACA,eAAK,YAAY,OAAO,EAAE,EAAE;AAC5B,iBAAO,CAAC,KAAK,SAAS,EAAE,IAAI,EAAE,IAAI,EAAE,MAAM,CAAC,EAAE,KAAK,GAAG,CAAC;AAAA,QACvD,CAAC;AACD,aAAK,YAAY,IAAI,gBAAgB;AAAA,MACtC,CAAC;AAAA,IACF;AAAA,IAEA,mBAAmB;AAClB,WAAK,QAAQ,GAAG,SAAS,+CAA+C,CAAC,MAAM;AAC9E,cAAM,UAAU,EAAE,EAAE,MAAM;AAE1B,YAAI,EAAE,WAAY,EAAE,WAAW,CAAC,QAAQ,GAAG,GAAG,GAAI;AACjD,gBAAM,YAAY,EAAE,EAAE,aAAa;AACnC,gBAAM,SAAS,UAAU,KAAK,oBAAoB;AAClD,iBAAO,KAAK,WAAW,CAAC,OAAO,KAAK,SAAS,CAAC;AAC9C,YAAE,eAAe;AACjB,eAAK,eAAe;AACpB;AAAA,QACD;AAEA,YACC,QAAQ,SAAS,YAAY,KAC7B,QAAQ,SAAS,aAAa,KAC9B,QAAQ,SAAS,aAAa,KAC9B,QAAQ,SAAS,eAAe,KAChC,QAAQ,GAAG,WAAW,GACrB;AACD,YAAE,gBAAgB;AAClB;AAAA,QACD;AAGA,YAAI,QAAQ,GAAG,GAAG;AAAG;AAGrB,cAAM,OAAO,EAAE,EAAE,aAAa;AAC9B,cAAM,OAAO,KAAK,KAAK,iBAAiB,EAAE,IAAI,CAAC;AAC/C,YAAI,MAAM;AACT,iBAAO,UAAU,KAAK,QAAQ;AAC9B,iBAAO;AAAA,QACR;AAAA,MACD,CAAC;AAAA,IACF;AAAA,IAEA,uBAAuB;AACtB,WAAK,QAAQ,GAAG,SAAS,eAAe,CAAC,MAAM;AAC9C,cAAM,UAAU,EAAE,EAAE,aAAa;AACjC,cAAM,MAAM,KAAK,KAAK,QAAQ,KAAK,UAAU;AAC7C,aAAK,SAAS,OAAO,OAAO,GAAG;AAC/B,UAAE,gBAAgB;AAClB,eAAO;AAAA,MACR,CAAC;AAAA,IACF;AAAA,IAEA,qBAAqB;AACpB,WAAK,QAAQ,GAAG,UAAU,wBAAwB,CAAC,MAAM;AACxD,cAAM,UAAU,EAAE,EAAE,aAAa;AAEjC,YAAI,QAAQ,GAAG,sCAAsC,GAAG;AACvD,gBAAM,SAAS,KAAK,QAAQ,KAC3B,mCACD;AACA,iBAAO,KAAK,WAAW,QAAQ,KAAK,SAAS,CAAC;AAC9C,iBAAO,QAAQ,QAAQ;AAAA,QACxB,WAAW,QAAQ,GAAG,mCAAmC,GAAG;AAC3D,gBAAM,SAAS,KAAK,QAAQ,KAC3B,sCACD;AACA,iBAAO,KAAK,WAAW,QAAQ,KAAK,SAAS,CAAC;AAE9C,eAAK,QACH,KAAK,oBAAoB,EACzB,KAAK,WAAW,QAAQ,KAAK,SAAS,CAAC;AAAA,QAC1C,WAAW,QAAQ,KAAK,aAAa,GAAG;AACvC,eAAK,QACH,KAAK,IAAI,QAAQ,KAAK,aAAa,GAAG,EACtC,KAAK,oBAAoB,EACzB,KAAK,WAAW,QAAQ,KAAK,SAAS,CAAC;AAAA,QAC1C;AAEA,aAAK,eAAe;AAAA,MACrB,CAAC;AAED,WAAK,QAAQ,GAAG,SAAS,sBAAsB,CAAC,MAAM;AACrD,cAAM,UAAU,EAAE,EAAE,aAAa;AAGjC,YACC,EAAE,YACF,KAAK,oBACL,CAAC,QAAQ,GAAG,KAAK,gBAAgB,GAChC;AACD,gBAAM,SAAS,KAAK,iBAAiB,KAAK,EAAE;AAC5C,gBAAM,SAAS,QAAQ,KAAK,EAAE;AAC9B,gBAAM,UAAU,KAAK,KAAK,UAAU,CAAC,MAAM,EAAE,SAAS,MAAM;AAC5D,gBAAM,UAAU,KAAK,KAAK,UAAU,CAAC,MAAM,EAAE,SAAS,MAAM;AAC5D,cAAI,CAAC,WAAW,aAAa,CAAC,SAAS,OAAO;AAE9C,cAAI,YAAY,WAAW;AAC1B,aAAC,WAAW,SAAS,IAAI,CAAC,WAAW,SAAS;AAAA,UAC/C;AAEA,cAAI,WAAW,KAAK,KAClB,MAAM,YAAY,GAAG,SAAS,EAC9B,IAAI,CAAC,MAAM,EAAE,IAAI;AACnB,gBAAM,WAAW,SACf,IAAI,CAAC,SAAS,iCAAiC,QAAQ,EACvD,KAAK,GAAG;AACV,eAAK,QAAQ,KAAK,QAAQ,EAAE,KAAK,WAAW,IAAI;AAAA,QACjD;AAEA,aAAK,mBAAmB;AAExB,aAAK,gBAAgB,OAAO;AAAA,MAC7B,CAAC;AAAA,IACF;AAAA,IAEA,aAAa;AACZ,WAAK,QAAQ,GAAG,SAAS,gBAAgB,OAAO,GAAG,iBAAiB;AACpE,WAAK,QAAQ,GAAG,SAAS,qBAAqB,CAAC,MAAM;AACpD,cAAM,QAAQ,EAAE,EAAE,aAAa;AAC/B,cAAM,YAAY,QAAQ;AAE1B,YAAI,MAAM,SAAS,QAAQ,GAAG;AAC7B,eAAK,YAAY,IAChB,KAAK,SACL,aACA,QACA,MAAM,OAAO,QAAQ,OAAO,GAC7B;AAAA,QACD,OAAO;AACN,eAAK,YAAY,OAAO,WAAW;AAAA,QACpC;AAAA,MACD,CAAC;AAAA,IAEF;AAAA,IAEA,sBAAsB;AACrB,WAAK,WAAW,KAAK,cAAc,EAAE,MAAM,MAAM;AAChD,YAAI,KAAK,SAAS,gBAAgB;AACjC,eAAK,SAAS,eAAe;AAAA,QAC9B,OAAO;AACN,eAAK,aAAa;AAAA,QACnB;AAAA,MACD,CAAC;AAAA,IACF;AAAA,IAEA,kBAAkB;AACjB,WAAK,aAAa;AAClB,WAAK,gBAAgB,KAAK,aAAa,OAAO,GAAG,SAAS,qBAAqB,MAAM;AACpF,aAAK,aAAa,CAAC,KAAK;AACxB,aAAK,YAAY;AAAA,MAClB,CAAC;AAAA,IACF;AAAA,IAEA,yBAAyB;AACxB,UACC,KAAK,sBACL,KAAK,mBAAmB,sBACvB;AACD;AAAA,MACD;AACA,aAAO,SAAS,GAAG,eAAe,CAAC,SAAS;AAC3C,YAAI,KAAK,sBAAsB,GAAG;AACjC;AAAA,QACD;AAEA,cAAM,EAAE,SAAS,SAAS;AAC1B,YAAI,YAAY,KAAK;AAAS;AAG9B,cAAM,YAAY,KAAK,cAAc;AACrC,kBAAU,KAAK,QAAQ,KAAK,CAAC,KAAK,SAAS,QAAQ,KAAK,IAAI,CAAC;AAC7D,kBAAU,KAAK,QAAQ;AAEvB,eAAO,KAAK,SAAS,EAAE,KAAK,CAAC,EAAE,cAAc;AAC5C,cAAI,CAAC;AAAS;AACd,gBAAM,QAAO,OAAO,MAAM,KAAK,QAAQ,MAAM,QAAQ,MAAM;AAC3D,cAAI,CAAE,UAAQ,MAAK,SAAS;AAI3B,iBAAK,OAAO,KAAK,KAAK,OAAO,CAAC,MAAM,EAAE,SAAS,IAAI;AACnD,iBAAK,YAAY;AACjB;AAAA,UACD;AAEA,gBAAM,QAAQ,MAAK;AACnB,gBAAM,QAAQ,KAAK,KAAK,UAAU,CAAC,MAAM,EAAE,SAAS,MAAM,IAAI;AAE9D,cAAI,UAAU,IAAI;AAEjB,iBAAK,KAAK,KAAK,KAAK;AAAA,UACrB,OAAO;AAEN,iBAAK,KAAK,SAAS;AAAA,UACpB;AAEA,eAAK,KAAK,KAAK,CAAC,GAAG,MAAM;AACxB,kBAAM,UAAU,EAAE,KAAK,YAAY;AACnC,kBAAM,UAAU,EAAE,KAAK,YAAY;AAEnC,gBAAI,eAAe;AACnB,gBAAI,UAAU,SAAS;AACtB,6BAAe;AAAA,YAChB;AAEA,gBAAI,UAAU,SAAS;AACtB,6BAAe;AAAA,YAChB;AAEA,gBAAI,KAAK,eAAe,QAAQ;AAC/B,6BAAe,CAAC;AAAA,YACjB;AACA,mBAAO;AAAA,UACR,CAAC;AACD,eAAK,mBAAmB;AACxB,eAAK,YAAY;AACjB,cAAI,KAAK,WAAW,KAAK,QAAQ,QAAQ;AACxC,iBAAK,oBAAoB;AAAA,UAC1B;AAAA,QACD,CAAC;AAAA,MACF,CAAC;AAAA,IACF;AAAA,IAEA,wBAAwB;AACvB,UAAI,KAAK,YAAY,gBAAgB,GAAG;AACvC,eAAO;AAAA,MACR;AAIA,UAAI,KAAK,qBAAqB;AAC7B,eAAO;AAAA,MACR;AACA,aAAO;AAAA,IACR;AAAA,IAEA,sBAAsB;AACrB,QAAE,KAAK,KAAK,SAAS,CAAC,IAAG,OAAO;AAC/B,YAAI,UAAU,EAAE,EAAE,EAAE,KAAK,WAAW;AACpC,aAAK,QACH,KAAK,iCAAiC,WAAW,EACjD,KAAK,WAAW,IAAI;AAAA,MACvB,CAAC;AACD,WAAK,eAAe;AAAA,IACrB;AAAA,IAEA,iBAAiB;AAChB,WAAK,qBACJ,KAAK,sBACL,KAAK,QAAQ,KAAK,6BAA6B;AAChD,WAAK,oBACJ,KAAK,qBACL,KAAK,QAAQ,KAAK,0BAA0B;AAE7C,WAAK,UAAU,KAAK,QAAQ,KAAK,4BAA4B;AAE7D,WAAK,mBAAmB,OAAO,KAAK,QAAQ,WAAW,CAAC;AACxD,WAAK,kBAAkB,OAAO,KAAK,QAAQ,SAAS,CAAC;AAErD,UAAI,KAAK,QAAQ,WAAW,GAAG;AAC9B,aAAK,mBACH,KAAK,iBAAiB,EACtB,KAAK,WAAW,KAAK;AAAA,MACxB,OAAO;AACN,aAAK,kBACH,KAAK,mBAAmB,EACxB,KAAK,GAAG,sBAAsB,CAAC,KAAK,QAAQ,MAAM,CAAC,CAAC;AACtD,aAAK,kBAAkB,KAAK;AAC5B,aAAK,mBAAmB,KAAK;AAAA,MAC9B;AACA,WAAK,gBAAgB;AACrB,WAAK,2BAA2B,KAAK,QAAQ,SAAS,CAAC;AAAA,IACxD;AAAA,IAEA,cAAc;AACb,WAAK,QAAQ,KAAK,UAAU,EAAE,YAAY,MAAM;AAChD,YAAM,gBAAgB,KAAK,aAAa,GAAG,WAAW,IAAI,GAAG,WAAW;AACxE,WAAK,aAAa,OAAO,KAAK,mBAAmB,EAAE,KAAK,aAAa;AAAA,IACtE;AAAA,IAEA,kBAAkB,eAAe;AAChC,YAAM,WAAW,MAAM,KAAK,KAAK,WAAW,CAAC,CAAC,EAAE,IAAI,CAAC,UACpD,KAAK,SAAS,EAAE,KAAK,EAAE,KAAK,EAAE,IAAI,CAAC,CACpC;AAEA,UAAI;AAAe,eAAO;AAE1B,aAAO,KAAK,KAAK,OAAO,CAAC,MAAM,SAAS,SAAS,EAAE,IAAI,CAAC;AAAA,IACzD;AAAA,IAEA,sBAAsB;AACrB,WAAK,WAAW,KAAK,QAAQ,KAAK,WAAW,KAAK;AAClD,WAAK,eAAe;AAAA,IACrB;AAAA,IAEA,wBAAwB,KAAK;AAC5B,aAAO,OAAO,MAAM,cAAc,KACjC,KAAK,SACL,KAAK,WACL,GACD;AAAA,IACD;AAAA,IAEA,YAAY;AAAA,IAAC;AAAA,IAEb,0BAA0B;AACzB,UAAI,OAAO,cAAc,KAAK,KAAK,aAAa,CAAC,KAAK,aAAa;AAGlE,eAAO,QAAQ,aAAa,MAAM,MAAM,KAAK,qBAAqB,CAAC;AAAA,MACpE;AAAA,IACD;AAAA,IAEA,uBAAuB;AACtB,YAAM,eAAe,KAAK,qBAAqB,EAC7C,IAAI,CAAC,WAAW;AAChB,YAAI,OAAO,OAAO,KAAK;AACtB,iBAAO,GAAG,OAAO,MAAM,mBAAmB,OAAO,EAAE;AAAA,QACpD;AACA,eAAO;AAAA,UACN,OAAO;AAAA,UACP;AAAA,UACA,mBAAmB,KAAK,UAAU,CAAC,OAAO,IAAI,OAAO,EAAE,CAAC,CAAC;AAAA,QAC1D,EAAE,KAAK,EAAE;AAAA,MACV,CAAC,EACA,KAAK,GAAG;AAEV,UAAI,WAAW,OAAO,SAAS,KAAK,QAAQ,OAAO,SAAS,QAAQ,EAAE;AACtE,UAAI,cAAc;AACjB,oBAAY,MAAM;AAAA,MACnB;AACA,aAAO;AAAA,IACR;AAAA,IAEA,iBAAiB;AAChB,YAAM,UAAU,KAAK;AACrB,YAAM,QAAQ,CAAC;AAEf,UAAI,OAAO,MAAM,WAAW,SAAS,MAAM,KAAK,IAAI,GAAG;AACtD,cAAM,KAAK;AAAA,UACV,OAAO,GAAG,UAAU,MAAM,0BAA0B;AAAA,UACpD,QAAQ,MACP,OAAO,UAAU,QAAQ,eAAe;AAAA,YACvC,mBAAmB;AAAA,UACpB,CAAC;AAAA,UACF,UAAU;AAAA,QACX,CAAC;AAAA,MACF;AAEA,UAAI,OAAO,MAAM,yBAAyB,OAAO,GAAG;AACnD,cAAM,KAAK;AAAA,UACV,OAAO,GAAG,oBAAoB,MAAM,0BAA0B;AAAA,UAC9D,QAAQ,MACP,OAAO,UAAU,QAAQ,mBAAmB;AAAA,YAC3C,OAAO;AAAA,UACR,CAAC;AAAA,UACF,UAAU;AAAA,QACX,CAAC;AAAA,MACF;AAEA,UAAI,OAAO,WAAW,SAAS,gBAAgB,GAAG;AACjD,cAAM,KAAK;AAAA,UACV,OAAO,GAAG,4BAA4B,MAAM,0BAA0B;AAAA,UACtE,QAAQ,MACP,OAAO,UAAU,sBAAsB;AAAA,YACtC;AAAA,UACD,CAAC;AAAA,UACF,UAAU;AAAA,QACX,CAAC;AAAA,MACF;AAEA,UAAI,OAAO,MAAM,WAAW,cAAc,KACtC,OAAO,MAAM,WAAW,iBAAiB,GAAG;AAC/C,cAAM,KAAK;AAAA,UACV,OAAO,GAAG,aAAa,MAAM,0BAA0B;AAAA,UACvD,QAAQ,MAAM;AACb,gBAAI,CAAC,KAAK;AAAM;AAChB,gBAAI,KAAK,KAAK,QAAQ;AACrB,qBAAO,UAAU,QAAQ,WAAW,OAAO;AAAA,YAC5C,WAAW,CAAC,KAAK,KAAK,QAAQ;AAC7B,qBAAO,UAAU,QAAQ,kBAAkB;AAAA,gBAC1C,UAAU;AAAA,cACX,CAAC;AAAA,YACF;AAAA,UACD;AAAA,UACA,UAAU;AAAA,UACV,UAAU;AAAA,QACX,CAAC;AAAA,MACF;AAEA,YAAM,KAAK;AAAA,QACV,OAAO,GAAG,kBAAkB,MAAM,0BAA0B;AAAA,QAC5D,QAAQ,MAAM,KAAK,gBAAgB;AAAA,QACnC,WAAW,MAAM,CAAC,KAAK;AAAA,QACvB,UAAU;AAAA,QACV,UAAU;AAAA,MACX,CAAC;AAED,UACC,OAAO,KAAK,SAAS,gBAAgB,KACrC,OAAO,KAAK,mBAAmB,GAC9B;AAED,cAAM,KAAK;AAAA,UACV,OAAO,GAAG,gBAAgB,MAAM,0BAA0B;AAAA,UAC1D,QAAQ,MAAM,OAAO,UAAU,QAAQ,WAAW,OAAO;AAAA,UACzD,UAAU;AAAA,QACX,CAAC;AAAA,MACF;AAEA,UAAI,OAAO,KAAK,SAAS,gBAAgB,GAAG;AAC3C,YAAI,KAAK,mBAAmB;AAC3B,gBAAM,KAAK,KAAK,kBAAkB,CAAC;AAAA,QACpC;AAAA,MACD;AAEA,aAAO;AAAA,IACR;AAAA,IAEA,oBAAoB;AACnB,aAAO;AAAA,QACN,OAAO,GAAG,iBAAiB,MAAM,0BAA0B;AAAA,QAC3D,QAAQ,MAAM,KAAK,mBAAmB;AAAA,QACtC,UAAU;AAAA,MACX;AAAA,IACD;AAAA,IAEA,qBAAqB;AACpB,aAAO,MAAM,aAAa,KAAK,SAAS,MAAM;AAC7C,YAAI,aAAa;AAAA,UAChB,UAAU;AAAA,UACV,SAAS,KAAK;AAAA,UACd,UAAU,KAAK;AAAA,UACf,MAAM,OAAO,SAAS,KAAK,OAAO;AAAA,QACnC,CAAC;AAAA,MACF,CAAC;AAAA,IACF;AAAA,IAEA,iCAAiC;AAChC,YAAM,mBAAmB,CAAC;AAC1B,UAAI,OAAO,MAAM,aAAa,KAAK,OAAO,GAAG;AAC5C,cAAM,UAAU,OAAO,SAAS,2BAC/B,KAAK,OACN;AACA,gBAAQ,QAAQ,CAAC,WAAW;AAC3B,2BAAiB,KAAK;AAAA,YACrB,OAAO,GAAG,MAAM;AAAA,YAChB,MAAM;AAAA,YACN,QAAQ,MAAM;AACb,qBAAO,MACN,gDACA;AAAA,gBACC,UAAU,KAAK,kBAAkB,IAAI;AAAA,gBACrC,SAAS,KAAK;AAAA,gBACd;AAAA,cACD,CACD;AAAA,YACD;AAAA,YACA,oBAAoB;AAAA,UACrB,CAAC;AAAA,QACF,CAAC;AAAA,MACF;AACA,aAAO;AAAA,IACR;AAAA,IAEA,0BAA0B;AACzB,UAAI,CAAC,OAAO,MAAM,aAAa,KAAK,OAAO;AAAG;AAC9C,YAAM,gBAAgB,KAAK,kBAAkB;AAC7C,aACE,MAAM,uDAAuD;AAAA,QAC7D,MAAM;AAAA,QACN,SAAS,KAAK;AAAA,MACf,CAAC,EACA,KAAK,CAAC,YAAY;AAClB,eAAO,KAAK,KAAK,qBAAqB,EAAE,QAAQ,CAAC,QAAQ;AACxD,eAAK,sBAAsB,KAAK,OAC/B,QAAQ,SAAS,GAAG,CACrB;AAAA,QACD,CAAC;AAAA,MACF,CAAC;AAAA,IACH;AAAA,IAEA,yBAAyB;AACxB,YAAM,UAAU,KAAK;AACrB,YAAM,qBAAqB,CAAC;AAC5B,YAAM,kBAAkB,IAAI,eAAe,EAAE,SAAS,KAAK,QAAQ,CAAC;AAEpE,YAAM,oBAAoB,CAAC,cAAc;AACxC,eACC,UAAU,aACV,OAAO,MAAM,cAAc,SAAS,KACpC,UAAU,cAAc,eACxB,CAAC,UAAU,UACX,CAAC,UAAU,aACX,CAAC,UAAU;AAAA,MAEb;AAEA,YAAM,sBAAsB,CAAC,aAAY;AACxC,eAAO,OAAO,KACZ,cAAc,QAAO,EACrB,KAAK,CAAC,cAAc,kBAAkB,SAAS,CAAC;AAAA,MACnD;AAEA,YAAM,wBAAwB,CAAC,aAAY;AAC1C,eAAO,OAAO,KAAK,SAAS,UAAS,GAAG,QAAQ;AAAA,MACjD;AAGA,YAAM,kBAAkB,MAAM;AAC7B,eAAO;AAAA,UACN,OAAO,GAAG,aAAa,MAAM,kCAAkC;AAAA,UAC/D,QAAQ,MAAM;AACb,iBAAK,sBAAsB;AAC3B,4BAAgB,OACf,KAAK,kBAAkB,IAAI,GAC3B,MAAM;AACL,mBAAK,sBAAsB;AAC3B,mBAAK,oBAAoB;AACzB,mBAAK,QAAQ;AAAA,YACd,CACD;AAAA,UACD;AAAA,UACA,UAAU;AAAA,QACX;AAAA,MACD;AAEA,YAAM,uBAAuB,MAAM;AAClC,eAAO;AAAA,UACN,OAAO,GAAG,yBAAyB,MAAM,kCAAkC;AAAA,UAC3E,QAAQ,MAAM;AACb,iBAAK,sBAAsB;AAC3B,4BAAgB,sBACf,KAAK,kBAAkB,IAAI,GAC3B,MAAM;AACL,mBAAK,sBAAsB;AAC3B,mBAAK,oBAAoB;AACzB,mBAAK,QAAQ;AAAA,YACd,CACD;AAAA,UACD;AAAA,UACA,UAAU;AAAA,QACX;AAAA,MACD;AAEA,YAAM,gBAAgB,MAAM;AAC3B,eAAO;AAAA,UACN,OAAO,GAAG,YAAY,MAAM,kCAAkC;AAAA,UAC9D,QAAQ,MAAM;AACb,iBAAK,sBAAsB;AAC3B,4BAAgB,SACf,KAAK,kBAAkB,IAAI,GAC3B,MAAM;AACL,mBAAK,sBAAsB;AAC3B,mBAAK,oBAAoB;AACzB,mBAAK,QAAQ;AAAA,YACd,CACD;AAAA,UACD;AAAA,UACA,UAAU;AAAA,QACX;AAAA,MACD;AAEA,YAAM,gBAAgB,MAAM;AAC3B,eAAO;AAAA,UACN,OAAO,GAAG,SAAS,MAAM,kCAAkC;AAAA,UAC3D,QAAQ,MAAM,gBAAgB,MAAM,KAAK,kBAAkB,CAAC;AAAA,UAC5D,UAAU;AAAA,QACX;AAAA,MACD;AAEA,YAAM,cAAc,MAAM;AACzB,eAAO;AAAA,UACN,OAAO,GAAG,UAAU,MAAM,kCAAkC;AAAA,UAC5D,QAAQ,MAAM;AACb,kBAAM,WAAW,KAAK,kBAAkB,IAAI,EAAE,IAC7C,CAAC,YAAY,QAAQ,SAAS,CAC/B;AACA,gBAAI,UAAU,GAAG,gCAAgC,CAAC,SAAS,MAAM,GAAG,8BAA8B;AAClG,gBAAI,SAAS,SAAS,GAAG;AACxB,wBAAU,GAAG,iCAAiC,CAAC,SAAS,MAAM,GAAG,8BAA8B;AAAA,YAChG;AACA,mBAAO,QACN,SACA,MAAM;AACL,mBAAK,sBAAsB;AAC3B,8BAAgB,OAAO,UAAU,MAAM;AACtC,qBAAK,sBAAsB;AAC3B,qBAAK,oBAAoB;AACzB,qBAAK,QAAQ;AAAA,cACd,CAAC;AAAA,YACF,CACD;AAAA,UACD;AAAA,UACA,UAAU;AAAA,QACX;AAAA,MACD;AAEA,YAAM,cAAc,MAAM;AACzB,eAAO;AAAA,UACN,OAAO,GAAG,UAAU,MAAM,kCAAkC;AAAA,UAC5D,QAAQ,MAAM;AACb,kBAAM,WAAW,KAAK,kBAAkB,IAAI;AAC5C,gBAAI,SAAS,SAAS,GAAG;AACxB,qBAAO,QACN,GAAG,yBAAyB,CAAC,SAAS,MAAM,GAAG,8BAA8B,GAC7E,MAAM;AACL,qBAAK,sBAAsB;AAC3B,gCAAgB,iBACf,UACA,UACA,MAAM;AACL,uBAAK,sBAAsB;AAC3B,uBAAK,oBAAoB;AACzB,uBAAK,QAAQ;AAAA,gBACd,CACD;AAAA,cACD,CAAC;AAAA,YACH;AAAA,UACD;AAAA,UACA,UAAU;AAAA,QACX;AAAA,MACD;AAEA,YAAM,cAAc,MAAM;AACzB,eAAO;AAAA,UACN,OAAO,GAAG,UAAU,MAAM,kCAAkC;AAAA,UAC5D,QAAQ,MAAM;AACb,kBAAM,WAAW,KAAK,kBAAkB,IAAI;AAC5C,gBAAI,SAAS,SAAS,GAAG;AACxB,qBAAO,QACN,GAAG,yBAAyB,CAAC,SAAS,MAAM,GAAG,8BAA8B,GAC7E,MAAM;AACL,qBAAK,sBAAsB;AAC3B,gCAAgB,iBACf,UACA,UACA,MAAM;AACL,uBAAK,sBAAsB;AAC3B,uBAAK,oBAAoB;AACzB,uBAAK,QAAQ;AAAA,gBACd,CACD;AAAA,cACD,CACD;AAAA,YACD;AAAA,UACD;AAAA,UACA,UAAU;AAAA,QACX;AAAA,MACD;AAEA,YAAM,YAAY,MAAM;AACvB,eAAO;AAAA,UACN,OAAO,GAAG,QAAQ,MAAM,kCAAkC;AAAA,UAC1D,QAAQ,MAAM;AACb,gBAAI,iBAAiB,CAAC;AAEtB,mBAAO,KAAK,cAAc,OAAO,EAAE,QAAQ,CAAC,cAAc;AACzD,kBAAI,kBAAkB,SAAS,GAAG;AACjC,+BAAe,UAAU,SAAS,OAAO,OACxC,CAAC,GACD,SACD;AAAA,cACD;AAAA,YACD,CAAC;AAED,iBAAK,sBAAsB;AAC3B,4BAAgB,KACf,KAAK,kBAAkB,IAAI,GAC3B,gBACA,MAAM;AACL,mBAAK,sBAAsB;AAC3B,mBAAK,oBAAoB;AACzB,mBAAK,QAAQ;AAAA,YACd,CACD;AAAA,UACD;AAAA,UACA,UAAU;AAAA,QACX;AAAA,MACD;AAEA,YAAM,cAAc,MAAM;AACzB,eAAO;AAAA,UACN,OAAO,GAAG,UAAU,MAAM,kCAAkC;AAAA,UAC5D,QAAQ,MAAM;AACb,kBAAM,WAAW,KAAK,kBAAkB,IAAI;AAE5C,4BAAgB,OAAO,SAAS,QAAQ;AAAA,UACzC;AAAA,UACA,UAAU;AAAA,QACX;AAAA,MACD;AAGA,UAAI,oBAAoB,OAAO,GAAG;AACjC,2BAAmB,KAAK,UAAU,CAAC;AAAA,MACpC;AAEA,yBAAmB,KAAK,YAAY,CAAC;AAGrC,yBAAmB,KAAK,gBAAgB,CAAC;AAEzC,yBAAmB,KAAK,qBAAqB,CAAC;AAE9C,yBAAmB,KAAK,cAAc,CAAC;AAGvC,UAAI,OAAO,MAAM,UAAU,OAAO,GAAG;AACpC,2BAAmB,KAAK,cAAc,CAAC;AAAA,MACxC;AAGA,UACC,OAAO,MAAM,eAAe,OAAO,KACnC,sBAAsB,OAAO,KAC7B,CAAC,OAAO,MAAM,aAAa,OAAO,GACjC;AACD,2BAAmB,KAAK,YAAY,CAAC;AAAA,MACtC;AAGA,UACC,OAAO,MAAM,WAAW,OAAO,KAC/B,CAAC,OAAO,MAAM,aAAa,OAAO,GACjC;AACD,2BAAmB,KAAK,YAAY,CAAC;AAAA,MACtC;AAGA,UAAI,OAAO,MAAM,WAAW,OAAO,GAAG;AACrC,2BAAmB,KAAK,YAAY,CAAC;AAAA,MACtC;AAEA,aAAO;AAAA,IACR;AAAA,IAEA,mCAAmC;AAClC,YAAM,UAAU,CAAC;AAEjB,eAAS,SAAS,OAAO,eAAe;AACvC,YAAI,UAAU;AACd,YAAI,QAAQ,OAAO,cAAc;AAEjC,YAAI;AACJ,YACC,EAAE,QAAQ,KAAK,KACf,MAAM,GAAG,WAAW,GAAG,KACvB,MAAM,GAAG,SAAS,GAAG,GACpB;AACD,wBAAc,CAAC;AACf,mBAAS,KAAI,GAAG,KAAI,MAAM,QAAQ,MAAK;AACtC,wBAAY,KAAK,KAAK,MAAM,MAAM,GAAE,CAAC;AAAA,UACtC;AAAA,QACD,WACC,OAAO,UAAU,YACjB,MAAM,WAAW,GAAG,KACpB,MAAM,SAAS,GAAG,GACjB;AACD,kBAAQ,KAAK,MAAM,KAAK;AAAA,QACzB;AAGA,YAAI,MAAM,SAAS,GAAG,GAAG;AACxB,oBAAU,MAAM,MAAM,GAAG,EAAE;AAC3B,kBAAQ,MAAM,MAAM,GAAG,EAAE;AAAA,QAC1B;AAOA,YAAI,CAAC,SAAS;AACb,oBAAU,OAAO,KAAK,sBACrB,KAAK,SACL,KACD;AAAA,QACD;AAEA,YAAI,SAAS;AACZ,cAAI,aAAa;AAChB,qBAAS,IAAI,GAAG,IAAI,YAAY,QAAQ,KAAK;AAC5C,kBAAI,EAAE,QAAQ,YAAY,EAAE,GAAG;AAC9B,wBAAQ,KAAK;AAAA,kBACZ;AAAA,kBACA;AAAA,kBACA,YAAY,GAAG;AAAA,kBACf,YAAY,GAAG;AAAA,gBAChB,CAAC;AAAA,cACF,OAAO;AACN,wBAAQ,KAAK,CAAC,SAAS,OAAO,KAAK,YAAY,EAAE,CAAC;AAAA,cACnD;AAAA,YACD;AAAA,UACD,WAAW,EAAE,QAAQ,KAAK,GAAG;AAC5B,oBAAQ,KAAK,CAAC,SAAS,OAAO,MAAM,IAAI,MAAM,EAAE,CAAC;AAAA,UAClD,OAAO;AACN,oBAAQ,KAAK,CAAC,SAAS,OAAO,KAAK,KAAK,CAAC;AAAA,UAC1C;AAAA,QACD;AAAA,MACD;AAEA,aAAO;AAAA,IACR;AAAA,EACD;AAGA,SAAO,gBAAgB,CAAC,YAAY;AACnC,QAAI,QAAQ,QAAQ;AACpB,WAAO,OAAO,MAAM,UAAU;AAAA,EAC/B;;;ACp6DA,SAAO,QAAQ,wBAAwB;AAEvC,SAAO,WAAW;AAClB,SAAO,MAAM,cAAc,MAAM,oBAAoB,OAAO,MAAM,QAAQ;AAAA,IACzE,KAAM,OAAO;AACZ,YAAM,MAAK;AACX,YAAM,UAAU,MAAM;AAItB,YAAM,YAAY,YAAY,SAAS,OAAO,MAAM,cAAc,MAAM,MAAM,MAAM,IAAI;AACxF,UAAI,aAAa,OAAO,MAAM,YAAY;AAC1C,UAAI,CAAC;AAAY,qBAAa,OAAO,MAAM;AAE3C,UAAI,cAAc,WAAW,kBAAkB,WAAW,eAAe,GAAG;AAE3E;AAAA,MACD;AAEA,aAAO,QAAQ,4BAA4B,OAAO;AAElD,aAAO,MAAM,UAAU,IAAG,aAAa,IAAI,WAAW;AAAA,QACrD;AAAA,QACA,QAAQ,IAAG,UAAU,MAAM,IAAG,SAAS;AAAA,MACxC,CAAC;AAED,UAAG,aAAa;AAAA,IACjB;AAAA,IAEA,cAAc;AACb,UAAI,KAAK,iBAAiB,GAAG;AAC5B,eAAO;AAAA,MACR;AAEA,WAAK,sBAAsB;AAAA,IAC5B;AAAA,IAEA,UAAU;AACT,WAAK,aAAa;AAClB,UAAI;AAAU,iBAAS,KAAK;AAAA,IAC7B;AAAA,IAEA,mBAAmB;AAClB,YAAM,UAAU,KAAK,MAAM;AAC3B,YAAM,aAAa,OAAO,cAAc,MAAM,EAAE,EAAE;AAClD,UACC,KAAK,MAAM,OAAO,UAClB,KAAK,MAAM,WAAW,KACtB,OAAO,MAAM,UAAU,YACvB,cACA,WAAW,OAAO,UAClB,WAAW,OAAO,SACjB;AAUD,eAAO,QAAQ,GAAG,EAAE;AACpB,eAAO;AAAA,MACR;AAAA,IACD;AAAA,IAEA,wBAAwB;AACvB,UAAI,OAAO,cAAc,SAAS,GAAG;AACpC,cAAM,aAAa,OAAO,cAAc,OAAO,cAAc,SAAS;AACtE,YAAI,WAAW,OAAO,WAAW;AAChC,gBAAM,UAAU,KAAK,MAAM,IAAI,UAAS,WAAW;AACnD,cAAI,OAAO,aAAa,YAAW,OAAO,aAAa,SAAQ,SAAS,OAAO,GAAG;AAEjF,mBAAO,YAAY,mBAAmB,SAAS,OAAM;AAAA,UACtD;AAAA,QACD;AAAA,MACD;AAAA,IACD;AAAA,IAEA,eAAe;AACd,iBAAW,OAAO,MAAM,UAAU,KAAK;AACvC,UAAI,YAAY,SAAS,YAAY,KAAK,MAAM,IAAI;AAEnD,eAAO,WAAW;AAAA,MACnB;AAAA,IACD;AAAA,EACD;;;AC1FA,SAAO,QAAQ,cAAc;AAE7B,SAAO,MAAM,iBAAiB,MAAM,eAAe;AAAA,IAClD,YAAY,MAAM;AACjB,QAAE,OAAO,MAAM,IAAI;AACnB,WAAK,iBAAiB;AACtB,WAAK,YAAY;AAAA,IAClB;AAAA,IAEA,iBAAiB,MAAM,QAAQ;AAC9B,UAAI,MAAM,KAAK,KAAK,qBACnB,KAAK,QACL,GAAG,IAAI,GACP,QACA,MACA,MACA,KAAK,SAAS,SAAS,MACxB;AACA,UAAI,OAAO,EAAE,KAAK,aAAa,IAAI;AAAA,IACpC;AAAA,IAEA,mBAAmB;AAClB,WAAK,eAAe;AACpB,YAAM,QAAQ,OAAO,UAAU;AAC/B,YAAM,YAAY,OAAO,MAAM,cAAc,MAAM,MAAM,EAAE;AAC3D,UAAI,MAAM,SAAS,KAAK,OAAO,MAAM,WAAW,SAAS,SAAS,GAAG;AACpE,aAAK,eAAe;AAEpB,YAAI,KAAK,iBAAiB,UAAU;AACnC,eAAK,eAAe,MAAM;AAAA,QAC3B,WAAW,KAAK,iBAAiB,SAAS;AACzC,eAAK,gBAAgB,MAAM;AAAA,QAC5B;AAAA,MACD;AAAA,IACD;AAAA,IAEA,UAAU,MAAM,eAAe;AAC9B,YAAM,QAAQ,CAAC,KAAK,KAAK,GAAG,QAAQ,IAAI;AACxC,UAAI;AAAe,cAAM,KAAK,aAAa;AAC3C,aAAO,UAAU,KAAK;AAAA,IACvB;AAAA,IAEA,cAAc;AACb,YAAM,QAAQ;AAAA,QACb,MAAM;AAAA,UACL,WAAW;AAAA,UACX,QAAQ,MAAM,KAAK,UAAU,MAAM;AAAA,QACpC;AAAA,QACA,QAAQ;AAAA,UACP,WAAW;AAAA,UACX,QAAQ,MAAM,KAAK,UAAU,QAAQ;AAAA,UACrC,sBAAsB,MAAM;AAC3B,kBAAM,UAAU,KAAK,YAAY;AACjC,gBAAI,iBAAiB,CAAC;AAEtB,gBAAI,OAAO,UAAU,EAAE,SAAS,GAAG;AAClC,+BAAiB;AAAA,gBAChB,OAAO,GAAG,gBAAgB;AAAA,gBAC1B,QAAQ,MAAM,KAAK,UAAU,QAAQ;AAAA,cACtC;AAAA,YACD;AACA,iBAAK,0BAA0B,UAAU,SAAS,cAAc;AAAA,UACjE;AAAA,QACD;AAAA,QACA,WAAW;AAAA,UACV,WAAW;AAAA,UACX,QAAQ,MAAM,KAAK,UAAU,WAAW;AAAA,QACzC;AAAA,QACA,UAAU;AAAA,UACT,WAAW,OAAO,MAAM,SAAS,KAAK;AAAA,UACtC,QAAQ,MAAM,KAAK,UAAU,YAAY,SAAS;AAAA,UAClD,sBAAsB,MAAM;AAC3B,iBAAK,cAAc,EAAE,KAAK,eAAa;AACtC,mBAAK,0BAA0B,YAAY,SAAS;AAAA,YACrD,CAAC;AAAA,UACF;AAAA,QACD;AAAA,QACA,OAAO;AAAA,UACN,WAAW,OAAO,MAAM,SAAS,KAAK;AAAA,UACtC,QAAQ,MAAM,KAAK,UAAU,OAAO;AAAA,QACrC;AAAA,QACA,OAAO;AAAA,UACN,WACC,KAAK,YAAY,mBACjB,OAAO,KAAK,eAAe;AAAA,UAC5B,QAAQ,MAAM,KAAK,UAAU,OAAO;AAAA,UACpC,sBAAsB,MAAM;AAC3B,kBAAM,WAAW,KAAK,mBAAmB;AACzC,gBAAI;AACJ,gBACC,WAAW,OAAO,YAAY;AAAA,cAC7B;AAAA,cACA;AAAA,YACD,CAAC,GACA;AACD,+BAAiB;AAAA,gBAChB,OAAO,GAAG,mBAAmB;AAAA,gBAC7B,QAAQ,MAAM,OAAO,QAAQ,eAAe;AAAA,cAC7C;AAAA,YACD;AACA,iBAAK,0BACJ,SACA,UACA,cACD;AAAA,UACD;AAAA,QACD;AAAA,QACA,OAAO;AAAA,UACN,WAAW,KAAK,UAAU,KAAK;AAAA,UAC/B,QAAQ,MAAM,KAAK,UAAU,OAAO;AAAA,QACrC;AAAA,QACA,MAAM;AAAA,UACL,WACC,OAAO,kBAAkB,KAAK,YAC9B,OAAO,SAAS,KAAK,OAAO,EAAE;AAAA,UAC/B,QAAQ,MAAM,KAAK,UAAU,MAAM;AAAA,QACpC;AAAA,QACA,QAAQ;AAAA,UACP,WAAW;AAAA,UACX,QAAQ,MAAM,KAAK,oBAAoB;AAAA,UACvC,sBAAsB,MAAM;AAC3B,mBAAO,MAAM,WAAW,YAAY,KAAK,OAAO,EAAE,KACjD,aAAW,KAAK,sBAAsB,OAAO,CAC9C;AAAA,UACD;AAAA,QACD;AAAA,QACA,KAAK;AAAA,UACJ,WAAW,KAAK,UAAU,SAAS,qBACjC,KAAK,UAAU,KAAK,OAAO,KAAK,QAAK,GAAE,cAAc,UAAU,KAChE,KAAK,UAAU,KAAK,OAAO,KAAK,QAAK,GAAE,cAAc,WAAW,KAC/D,KAAK,UAAU,KAAK,OAAO,KAAK,QAAK,GAAE,cAAc,cAAc,GAAE,aAAa,aAAa;AAAA,UACjG,QAAQ,MAAM,KAAK,UAAU,KAAK;AAAA,QACnC;AAAA,MACD;AAEA,aAAO,MAAM,WAAW,QAAQ,UAAQ;AACvC,YAAI,KAAK,iBAAiB,QAAQ,MAAM,MAAM,WAAW;AACxD,eAAK,iBAAiB,MAAM,MAAM,MAAM,MAAM;AAAA,QAC/C;AAEA,YAAI,KAAK,gBAAgB,MAAM;AAC9B,gBAAM,MAAM,wBACX,MAAM,MAAM,qBAAqB;AAAA,QACnC;AAAA,MACD,CAAC;AAAA,IACF;AAAA,IAEA,0BAA0B,MAAM,OAAO,gBAAgB;AACtD,UAAI,CAAC,KAAK;AAAS;AACnB,YAAM,gBAAgB,KAAK,QAAQ,QAAQ,KAAK,gBAAgB;AAChE,oBAAc,KAAK,gBAAgB,EAAE,KAAK,GAAG,GAAG,IAAI,GAAG;AACvD,YAAM,YAAY,cAAc,KAAK,iBAAiB;AAEtD,UAAI,cAAc,GAAG,GAAG,cAAc,CAAC,GAAG,IAAI,CAAC,CAAC;AAChD,UAAI,OAAO;AAEX,UAAI,CAAC,SAAS,CAAC,MAAM,QAAQ;AAC5B,eAAO;AAAA,QACF,GAAG,gBAAgB,CAAC,GAAG,IAAI,CAAC,CAAC;AAAA;AAAA,MAEnC,OAAO;AACN,cAAM,YAAY,KAAK,cAAc;AACrC,cAAM,IAAI,UAAQ;AACjB,cAAI,KAAK,KAAK,YAAY,KAAK,UAAU,YAAY,GAAG;AACvD,0BAAc,KAAK;AAAA,UACpB,OAAO;AACN,oBAAQ,sCAAsC,KAAK,UAClD,KAAK;AAAA,UAEP;AAAA,QACD,CAAC;AAAA,MACF;AAEA,oBAAc,KAAK,gBAAgB,EAAE,KAAK,WAAW;AAErD,UAAI,gBAAgB;AACnB,sBAAc,KAAK,mBAAmB,EAAE,KAAK,eAAe,KAAK;AACjE,sBACE,KAAK,mBAAmB,EACxB,MAAM,MAAM,eAAe,OAAO,CAAC;AAAA,MACtC;AAEA,gBAAU,KAAK,IAAI;AAEnB,oBAAc,YAAY,MAAM;AAAA,IACjC;AAAA,IAEA,sBAAsB,SAAS;AAC9B,YAAM,kBAAkB,KAAK,KAAK,wBACjC,GAAG,eAAe,GAClB,MACA,KAAK,UAAU,eAChB;AAEA,cAAQ,IAAI,OAAK;AAChB,aAAK,KAAK,qBACT,iBACA,EAAE,MACF,MAAM,KAAK,UAAU,UAAU,EAAE,IAAI,GACrC,KACD;AAAA,MACD,CAAC;AAED,WAAK,KAAK,qBACT,iBACA,GAAG,yBAAyB,GAC5B,MAAM,OAAO,MAAM,WAAW,mBAAmB,KAAK,OAAO,GAC7D,IACD;AAAA,IACD;AAAA,IAEA,gBAAgB;AACf,aAAO,OAAO,MAAM,cACnB,OAAO,UAAU,EAAE,MAAM,EAAE,EAAE,MAAM,EACpC;AAAA,IACD;AAAA,IAEA,cAAc;AAEb,UAAI,QAAQ,CAAC;AACb,UAAI,iBAAiB,CAAC;AAEtB,UAAI,cAAc,cAAW;AAC5B,iBAAQ,IAAI,OAAK;AAChB,cAAI,CAAC,EAAE,eAAe,EAAE,eAAe,KAAK,SAAS;AACpD,kBAAM,cACL,EAAE,gBAAgB,mBACf,aAAa,EAAE,uBACf;AAEJ,kBAAM,QACL,EAAE,SAAS,cAAc,MAAO,GAAE,SAAS,EAAE;AAE9C,gBAAI,MAAM,QAAQ,KAAK,MAAM,IAAI;AAEhC,oBAAM,KAAK,KAAK;AAChB,6BAAe,KAAK;AAAA,gBACnB,MAAM,EAAE,SAAS,EAAE;AAAA,gBACnB;AAAA,cACD,CAAC;AAAA,YACF;AAAA,UACD;AAAA,QACD,CAAC;AAAA,MACF;AAGA,UAAI,KAAK,UAAU,SAAS,SAAS;AACpC,oBAAY,KAAK,UAAU,SAAS,OAAO;AAAA,MAC5C;AAGA,UAAI,UACH,OAAO,OAAO,OAAO,KAAK,KAAK,WAAW,EAAE,KAAK,CAAC,GAAG,MACpD,EAAE,MAAM,cAAc,EAAE,KAAK,CAC9B,KAAK,CAAC;AAGP,kBAAY,OAAO;AAEnB,aAAO;AAAA,IACR;AAAA,IAEA,sBAAsB;AAtQvB;AAuQE,YAAM,qBACL,aAAO,MAAM,cAAc,KAAK,SAAS,cAAzC,mBACG;AAEJ,UAAI,CAAC,oBAAoB;AACxB,eAAO,OAAO,MAAM,WAAW,mBAC9B,KAAK,SACL,IACD;AAAA,MACD;AACA,aAAO,GAAG,OAAO,gBAAgB,kBAAkB,EAAE,KAAK,YAAU;AACnE,YAAI,QAAQ;AACX,iBAAO,UACN,QACA,KAAK,SACL,UACA,kBACD;AAAA,QACD,OAAO;AACN,iBAAO,MAAM,WAAW,mBAAmB,KAAK,SAAS,IAAI;AAAA,QAC9D;AAAA,MACD,CAAC;AAAA,IACF;AAAA,IAEA,gBAAgB;AACf,YAAM,UAAU,KAAK;AACrB,UAAI,YAAY,CAAC;AAEjB,aAAO,OAAO,GACZ,SAAS,iBAAiB;AAAA,QAC1B,SAAS;AAAA,UACR,mBAAmB;AAAA,QACpB;AAAA,MACD,CAAC,EACA,KAAK,YAAU;AACf,YAAI,CAAE,WAAU,MAAM,QAAQ,MAAM,KAAK,OAAO;AAAS;AAEzD,YAAI,OAAO,MAAM,SAAS,KAAK,UAAU;AAExC,oBAAU,KAAK;AAAA,YACd,MAAM;AAAA,YACN,OAAO,QAAQ,KAAK,KAAK;AAAA,UAC1B,CAAC;AAAA,QACF;AACA,eAAO,IAAI,cAAY;AACtB,oBAAU,KAAK;AAAA,YACd,MAAM,SAAS;AAAA,YACf,OAAO,QAAQ,KAAK,KAAK,mBACxB,SAAS;AAAA,UAEX,CAAC;AAAA,QACF,CAAC;AAED,eAAO;AAAA,MACR,CAAC;AAAA,IACH;AAAA,IAEA,qBAAqB;AACpB,UAAI,kBAAkB,CAAC;AACvB,UAAI,WAAW,OAAO,KAAK;AAC3B,eAAS,QAAQ,aAAW;AAC3B,YAAI,gBACH,QAAQ,YAAY,iBACjB,iBACA,QAAQ;AACZ,YAAI,QAAQ,4BAA4B;AACxC,YAAI,eAAe;AAAA,UAClB;AAAA,UACA;AAAA,UACA;AAAA,UACA;AAAA,QACD,EAAE,SAAS,QAAQ,QAAQ,IACxB,GAAG,QAAQ,QAAQ,IACnB,QAAQ;AAEX,wBAAgB,KAAK;AAAA,UACpB,MAAM;AAAA,UACN;AAAA,QACD,CAAC;AAAA,MACF,CAAC;AAED,aAAO;AAAA,IACR;AAAA,IAEA,OAAO;AACN,aAAO,OAAO,OAAO,KAAK,OAAO,OAAO,kBAAkB,KAAK,OAAO;AAAA,IACvE;AAAA,EACD;;;AC9VA,SAAO,QAAQ,WAAW;AAE1B,yBAAgC;AAAA,IAC/B,YAAY,EAAE,SAAS,WAAW;AACjC,aAAO,OAAO,MAAM,UAAU,EAAE;AAChC,WAAK,iBAAiB,OAAO,KAAK,SAAS;AAAA,QAC1C;AAAA,QACA;AAAA,MACD,CAAC;AACD,WAAK,UAAU,CAAC;AAChB,WAAK,KAAK;AACV,WAAK,KAAK;AACV,WAAK,QAAQ;AAAA,IACd;AAAA,IAEA,OAAO;AAEN,WAAK,QAAQ,KAAK;AAAA;AAAA;AAAA,uCAGmB,GAAG,YAAY;AAAA;AAAA;AAAA,GAGnD;AAED,WAAK,cAAc,KAAK,QAAQ,KAAK,aAAa;AAClD,WAAK,gBAAgB,KAAK,QAAQ,KAAK,eAAe;AACtD,WAAK,iBAAiB,KAAK,QAAQ,KAAK,gBAAgB,EAAE,KAAK;AAC/D,WAAK,yBAAyB,KAAK,QAAQ,KAAK,wBAAwB;AACxE,WAAK,uBAAuB;AAE5B,WAAK,eAAe,OAAO,GAAG,KAAK,aAAa;AAAA,QAC/C,IAAI;AAAA,UACH,WAAW;AAAA,UACX,aAAa,GAAG,aAAa;AAAA,UAC7B,aAAa;AAAA,QACd;AAAA,QACA,QAAQ,KAAK;AAAA,QACb,cAAc;AAAA,MACf,CAAC;AAED,WAAK,kBAAkB,OAAO,GAAG,KAAK,aAAa;AAAA,QAClD,IAAI;AAAA,UACH,WAAW;AAAA,UACX,OAAO,GAAG,WAAW;AAAA,QACtB;AAAA,QACA,QAAQ,KAAK;AAAA,QACb,cAAc;AAAA,MACf,CAAC;AAAA,IACF;AAAA,IAEA,OAAO;AACN,WAAK,iBAAiB;AACtB,WAAK,0BAA0B;AAC/B,WAAK,kBAAkB;AACvB,WAAK,mBAAmB;AAAA,IACzB;AAAA,IAEA,UAAU;AACT,WAAK,iBAAiB,EAAE,KAAK,MAAM;AAClC,aAAK,QAAQ,SAAS,KAAK,uBAAuB,KAAK,IAAI,KAAK,uBAAuB,KAAK;AAC5F,cAAM,OAAO,KAAK,QAAQ,IAAI,CAAC,WAAW,KAAK,gBAAgB,MAAM,CAAC;AACtE,aAAK,QAAQ,KAAK,cAAc,EAAE,OAAO;AACzC,aAAK,eAAe,OAAO,IAAI;AAAA,MAChC,CAAC;AACD,WAAK,gBAAgB,OAAO,KAAK;AACjC,WAAK,aAAa,gBAAgB,EAAE;AAAA,IACrC;AAAA,IAEA,gBAAgB,QAAQ;AACvB,aAAO,qFACN,OAAO;AAAA,qCAE2B,OAAO;AAAA,uBACrB,OAAO,MAAM,KAAK,OAAO;AAAA;AAAA,IAE/C;AAAA,IAEA,4BAA4B;AAC3B,WAAK,QAAQ,KAAK,wBAAwB,EAAE,MAAM,MAAM;AACvD,aAAK,qBAAqB,KAAK,oBAAoB;AAAA,MACpD,CAAC;AAAA,IACF;AAAA,IAEA,qBAAqB,MAAM;AAC1B,WAAK,eAAe,OAAO,IAAI;AAC/B,YAAM,QAAQ,OAAO,GAAG,YAAY,IAAI,GAAG,YAAY;AACvD,WAAK,QAAQ,KAAK,wBAAwB,EAAE,KAAK,KAAK;AACtD,WAAK,uBAAuB,CAAC,KAAK;AAAA,IACnC;AAAA,IAEA,oBAAoB;AACnB,WAAK,QAAQ,GAAG,SAAS,6BAA6B,CAAC,MAAM;AAC5D,YAAI,UAAU,EAAE,EAAE,aAAa,EAAE,OAAO,cAAc;AACtD,aAAK,mBAAmB,OAAO;AAC/B,cAAM,OAAO,QAAQ,KAAK,WAAW;AACrC,aAAK,UAAU,YAAY,MAAM,EAAE,KAAK,MAAM;AAC7C,eAAK,UAAU,YAAY,IAAI,KAAK,mBAAmB,IAAI,CAAC;AAAA,QAC7D,CAAC;AAAA,MACF,CAAC;AAAA,IACF;AAAA,IAEA,qBAAqB;AACpB,WAAK,QAAQ,GAAG,SAAS,wBAAwB,CAAC,MAAM;AACvD,cAAM,MAAM,EAAE,EAAE,aAAa,EAAE,QAAQ,cAAc;AACrD,cAAM,OAAO,IAAI,KAAK,WAAW;AACjC,cAAM,kBAAkB,KAAK,mBAAmB,IAAI;AACpD,YAAI,OAAO;AACX,aAAK,cAAc,IAAI,EAAE,KAAK,MAAM,KAAK,QAAQ,CAAC;AAClD,aAAK,UAAU,YAAY,eAAe,eAAe;AAAA,MAC1D,CAAC;AAAA,IACF;AAAA,IAEA,mBAAmB;AAClB,WAAK,aAAa,OAAO,QACxB,OAAO,MAAM,SAAS,CAAC,MAAM;AAC5B,cAAM,QAAQ,KAAK,aAAa,UAAU;AAC1C,cAAM,YAAY,QAAQ,KAAK;AAE/B,YAAI,EAAE,UAAU,OAAO,GAAG,QAAQ,UAAU;AAC3C,cAAI,CAAC,aAAa,KAAK,mBAAmB,KAAK;AAAG;AAElD,eAAK,aAAa,UAAU,EAAE;AAC9B,eAAK,YAAY,KAAK,EAAE,KAAK,MAAM,KAAK,QAAQ,CAAC;AACjD,eAAK,qBAAqB,IAAI;AAAA,QAC/B,OAAO;AACN,cAAI,YAAY,GAAG,qBAAqB;AAExC,cAAI,KAAK,mBAAmB,KAAK,GAAG;AACnC,wBAAY,GAAG,uBAAuB;AAAA,UACvC;AAEA,eAAK,aAAa,gBAAgB,YAAY,YAAY,EAAE;AAE5D,cAAI,KAAK,gBAAgB;AACxB,iBAAK,gBAAgB,OAAO,SAAS;AAAA,UACtC;AAAA,QACD;AAAA,MACD,GAAG,GAAG,CACP;AAAA,IACD;AAAA,IAEA,YAAY,aAAa;AACxB,aAAO,OAAO,GAAG,OAAO;AAAA,QACvB,SAAS;AAAA,QACT,mBAAmB,KAAK,UAAU;AAAA,QAClC;AAAA,QACA,UAAU,KAAK,gBAAgB,UAAU,IAAI,KAAK,OAAO,QAAQ;AAAA,QACjE,SAAS,KAAK,UAAU,KAAK,oBAAoB,CAAC;AAAA,MACnD,CAAC;AAAA,IACF;AAAA,IAEA,cAAc,MAAM;AACnB,UAAI,CAAC;AAAM;AACX,aAAO,OAAO,GAAG,WAAW,eAAe,IAAI;AAAA,IAChD;AAAA,IAEA,mBAAmB,MAAM;AACxB,YAAM,SAAS,KAAK,QAAQ,KAAK,CAAC,YAAW,QAAO,SAAS,IAAI;AACjE,aAAO,KAAK,MAAM,OAAO,WAAW,IAAI;AAAA,IACzC;AAAA,IAEA,sBAAsB;AACrB,aAAO,KAAK,UAAU,YAAY,IAAI;AAAA,IACvC;AAAA,IAEA,mBAAmB,aAAa;AAC/B,aAAQ,MAAK,WAAW,CAAC,GAAG,KAAK,CAAC,MAAM,EAAE,gBAAgB,WAAW;AAAA,IACtE;AAAA,IAEA,mBAAmB;AAClB,UAAI,OAAO,QAAQ,SAAS;AAAS,eAAO,QAAQ,QAAQ;AAC5D,aAAO,OAAO,GACZ,SAAS,eAAe;AAAA,QACxB,QAAQ,CAAC,QAAQ,eAAe,YAAY,SAAS;AAAA,QACrD,SAAS,EAAE,mBAAmB,KAAK,UAAU,QAAQ;AAAA,QACrD,YAAY;AAAA,UACX,CAAC,YAAY,KAAK,OAAO,QAAQ,IAAI;AAAA,UACrC,CAAC,YAAY,KAAK,EAAE;AAAA,QACrB;AAAA,MACD,CAAC,EACA,KAAK,CAAC,YAAY;AAClB,aAAK,UAAU,WAAW,CAAC;AAAA,MAC5B,CAAC;AAAA,IACH;AAAA,IAEA,mBAAmB,SAAS;AAC3B,WAAK,eACH,KAAK,oBAAoB,EACzB,YAAY,+BAA+B;AAC7C,cAAQ,YAAY,+BAA+B;AAAA,IACpD;AAAA,EACD;;;AC7LA,SAAO,QAAQ,cAAc;AAO7B,SAAO,MAAM,cAAc,MAAM,YAAY;AAAA,IAC5C,YAAY,MAAM;AACjB,QAAE,OAAO,MAAM,IAAI;AACnB,WAAK,KAAK;AAAA,IACX;AAAA,IAEA,OAAO;AACN,UAAI,kBAAkB,OAAO,gBAAgB,gBAAgB,EAAE,SAAS,KAAK,QAAQ,CAAC;AAEtF,WAAK,UAAU,EAAE,sEAAsE,EACrF,KAAK,eAAe,EACpB,SAAS,KAAK,KAAK,QAAQ,MAAM,CAAC;AAEpC,WAAK,kBAAkB;AACvB,WAAK,oBAAoB;AAIzB,QAAE,QAAQ,EAAE,QAAQ,oBAAoB;AAExC,UAAI,KAAK,UAAU,sBAAsB,KAAK,UAAU,mBAAmB,uBAAuB;AACjG,aAAK,QAAQ,KAAK,YAAY,EAAE,OAAO;AAAA,MACxC,OAAO;AACN,aAAK,QAAQ,KAAK,aAAa,EAAE,GAAG,SAAS,CAAC,MAAM;AACnD,eAAK,aAAa;AAAA,QACnB,CAAC;AAAA,MACF;AAAA,IAED;AAAA,IAEA,cAAc;AACb,UAAI,iBAAiB;AAErB,UAAI,OAAO,MAAM,SAAS,KAAK,UAAU;AACxC,aAAK,QAAQ,KAAK,kCAAkC,EAAE,YAAY,MAAM;AACxE,aAAK,QAAQ,KAAK,+BAA+B,EAAE,YAAY,MAAM;AACrE,yBAAiB;AAAA,MAClB;AAEA,WAAK,QAAQ,KAAK,gCAAgC,EAAE,YAAY,MAAM;AACtE,UAAI,KAAK,YAAY,mBAAmB,OAAO,KAAK,eAAe,QAAQ;AAC1E,aAAK,QAAQ,KAAK,+BAA+B,EAAE,YAAY,MAAM;AACrE,yBAAiB;AAAA,MAClB;AAEA,UAAI,OAAO,kBAAkB,KAAK,YAAY,OAAO,SAAS,KAAK,OAAO,EAAE,SAAS;AACpF,aAAK,QAAQ,KAAK,YAAY,EAAE,YAAY,MAAM;AAAA,MACnD;AAEA,WAAK,eAAe;AACpB,UAAI,QAAQ,OAAO,UAAU;AAC7B,UAAI,MAAM,SAAS,KAAK,OAAO,MAAM,WAAW,SAAS,MAAM,EAAE,GAAG;AACnE,aAAK,eAAe,MAAM;AAE1B,YAAI,KAAK,iBAAiB,UAAU;AACnC,eAAK,eAAe,MAAM;AAAA,QAC3B,WAAW,KAAK,iBAAiB,SAAS;AACzC,eAAK,gBAAgB,MAAM;AAAA,QAC5B;AAAA,MACD;AAGA,WAAK,QAAQ,KAAK,2BAA2B,KAAK,eAAe,MAAM,EACrE,KAAK,YAAY,UAAU,EAAE,SAAS,UAAU;AAGlD,WAAK,QAAQ,KAAK,mEAAmE,EACnF,KAAK,YAAY,IAAI,EAAE,YAAY,UAAU;AAG/C,UAAI,KAAK,UAAU,KAAK,aAAa;AACpC,aAAK,QAAQ,KAAK,+BAA+B,EAAE,YAAY,MAAM;AACrE,yBAAiB;AAAA,MAClB;AAEA,UAAI,KAAK,UAAU,SAAS,qBAC1B,KAAK,UAAU,KAAK,OAAO,KAAK,QAAK,GAAE,cAAc,UAAU,KAChE,KAAK,UAAU,KAAK,OAAO,KAAK,QAAK,GAAE,cAAc,WAAW,KAC/D,KAAK,UAAU,KAAK,OAAO,KAAK,QAAK,GAAE,cAAc,cAAc,GAAE,aAAa,aAAa,GAAI;AACpG,aAAK,QAAQ,KAAK,6BAA6B,EAAE,YAAY,MAAM;AACnE,yBAAiB;AAAA,MAClB;AAEA,UAAI,gBAAgB;AACnB,aAAK,QAAQ,KAAK,8BAA8B,EAAE,YAAY,MAAM;AAAA,MACrE;AAAA,IACD;AAAA,IAEA,gBAAgB;AAEf,UAAI,MAAK;AACT,UAAI,QAAQ,CAAC;AACb,UAAI,WAAW,KAAK,KAAK,QAAQ,KAAK,mBAAmB;AACzD,UAAI,UAAU;AAEd,UAAI,cAAc,SAAS,UAAS;AACnC,UAAE,KAAK,UAAS,SAAS,MAAM,GAAG;AACjC,cAAI,CAAC,EAAE,eAAe,EAAE,eAAe,IAAG,SAAS;AAClD,gBAAI,cAAc,EAAE,gBAAgB,mBACnC,QAAQ,EAAE,uBAAuB;AAElC,gBAAI,QAAQ,EAAE,SAAS,cAAc,MAAO,GAAE,SAAS,EAAE;AAEzD,gBAAI,MAAM,QAAQ,KAAK,MAAM,IAAI;AAEhC,oBAAM,KAAK,KAAK;AAEhB,kBAAI,CAAC,SAAS;AACb,oBAAG,YAAY,EAAE,SAAS,QAAQ;AAClC,0BAAU;AAAA,cACX;AAEA,gBAAE,mBAAmB,QAAQ,OAC5B,GAAG,EAAE,SAAS,EAAE,IAAI,IAAI,WAAW,EAAE,SAAS,QAAQ;AAAA,YACxD;AAAA,UACD;AAAA,QACD,CAAC;AAAA,MACF;AAGA,UAAI,KAAK,UAAU,SAAS,SAAS;AACpC,oBAAY,KAAK,UAAU,SAAS,OAAO;AAAA,MAC5C;AAGA,UAAI,UAAU,OAAO,OAAO,OAAO,KAAK,KAAK,WAAW,EAAE,KAAK,CAAC,GAAE,MAAM,EAAE,MAAM,cAAc,EAAE,KAAK,CAAC,KAAK,CAAC;AAG5G,kBAAY,OAAO;AAAA,IACpB;AAAA,IAEA,oBAAoB;AACnB,WAAK,cAAc,IAAI,WAAW;AAAA,QACjC,SAAS,KAAK,KAAK,QAAQ,KAAK,eAAe;AAAA,QAC/C,SAAS,KAAK;AAAA,QACd,WAAW,KAAK;AAAA,MACjB,CAAC;AAAA,IACF;AAAA,IAEA,sBAAsB;AACrB,YAAM,YAAY,KAAK,KAAK,QAAQ,KAAK,kBAAkB;AAC3D,aAAO,MAAM,WAAW,0BAA0B,KAAK,SAAS,SAAS;AAAA,IAC1E;AAAA,IAGA,2BAA2B;AAC1B,WAAK,QAAQ,KAAK,6CAA6C,EAAE,KAAK,CAAC,IAAG,OAAO;AAChF,eAAO,GAAG,KACR,mBAAmB,KAAK,IAAI,EAC5B,IAAI,EAAE,EAAE,CAAC;AAAA,MACZ,CAAC;AAAA,IACF;AAAA,IAEA,sBAAsB;AACrB,WAAK,gBAAgB,IAAI,OAAO,MAAM,YAAY;AAAA,QACjD,SAAS,KAAK;AAAA,QACd,SAAS;AAAA,QACT,WAAW,KAAK;AAAA,QAChB,MAAM,KAAK;AAAA,MACZ,CAAC;AAAA,IACF;AAAA,IAEA,YAAY;AACX,UAAI,MAAK;AACT,aAAO,KAAK;AAAA,QACX,QAAQ;AAAA,QACR,MAAM;AAAA,QACN,MAAM;AAAA,UACL,OAAO,IAAG;AAAA,UACV,SAAS,IAAG;AAAA,UAEZ,SAAU,KAAG,UAAU,cAAc,IAAG,UAAU,qBAAqB,IAAI,IAAG,oBAAoB,CAAC;AAAA,QACpG;AAAA,QACA,UAAU,SAAS,GAAG;AACrB,cAAI,QAAS,GAAE,QAAQ,SAAS,CAAC,GAAG,iBAAiB,CAAC;AACtD,cAAG,YAAY,KAAK;AACpB,cAAI,iBAAiB,IAAG,QAAQ,KAAK,sBAAsB;AAC3D,iBAAO,MAAM,aAAa,gBAAgB,cAAc,aAAa;AAAA,QACtE;AAAA,MACD,CAAC;AAAA,IACF;AAAA,IAEA,YAAY,OAAO;AAClB,UAAI,OAAO;AAAA,QACV;AAAA,QACA,OAAO,GAAG,MAAM;AAAA,MACjB;AAEA,UAAI,WAAW,EAAE,OAAO,gBAAgB,qBAAqB,IAAI,CAAC,EAAE,GAAG,SAAS,cAAc,CAAC,MAAM;AACpG,YAAI,YAAY,EAAE,EAAE,aAAa,EAAE,KAAK,YAAY;AACpD,YAAI,QAAQ,EAAE,EAAE,aAAa,EAAE,KAAK,YAAY;AAChD,YAAI,YAAY;AAChB,YAAI,WAAW,KAAK,UAAU,YAAY,YAAY,WAAW,SAAS;AAC1E,YAAI,UAAU;AACb,mBAAS,OAAO;AAAA,QACjB;AACA,YAAI,SAAS,WAAW;AACvB,kBAAQ;AACR,sBAAY;AAAA,QACb;AACA,aAAK,UAAU,YAAY,IAC1B,KAAK,SACL,WACA,WACA,KACD;AAAA,MACD,CAAC;AAED,WAAK,QAAQ,KAAK,mCAAmC,EAAE,KAAK,QAAQ;AAAA,IACrE;AAAA,IAEA,eAAe;AACd,WAAK,QAAQ,KAAK,YAAY,EAAE,OAAO;AACvC,WAAK,QAAQ,KAAK,kBAAkB,EAAE,OAAO;AAC7C,WAAK,UAAU;AAAA,IAChB;AAAA,EACD;;;ACjOC,SAAO,UAAU,kBAAkB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;;ACAnC,SAAO,UAAU,uBAAuB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;;ACDzC,SAAO,QAAQ,cAAc;AAE7B,SAAO,MAAM,cAAc,MAAM,YAAY;AAAA,IAC5C,YAAY,MAAM;AACjB,QAAE,OAAO,MAAM,IAAI;AACnB,WAAK,aAAa;AAElB,WAAK,gBAAgB,OAAO,kBAAkB,KAAK,OAAO;AAC1D,WAAK,kBAAkB,CAAC,eAAe,OAAO;AAC9C,UAAI,KAAK,cAAc,iBAAiB;AACvC,aAAK,kBAAkB,KAAK,gBAAgB,OAC3C,KAAK,cAAc,eACpB;AAAA,MACD;AACA,WAAK,sBAAsB;AAC3B,WAAK,2BAA2B;AAChC,WAAK,eAAe;AACpB,WAAK,gBAAgB;AAAA,IACtB;AAAA,IAEA,6BAA6B;AAC5B,UAAI,IAAI,IAAI,OAAO,GAAG,OAAO;AAAA,QAC5B,OAAO,GAAG,gBAAgB;AAAA,QAC1B,QAAQ,KAAK,6BAA6B;AAAA,MAC3C,CAAC;AAED,QAAE,mBAAmB,GAAG,MAAM,GAAG,CAAC,EAAE,sBAAsB;AACzD,eAAO,MAAM,cAAc,KAC1B,KAAK,SACL,mBACA,mBAAmB,IACpB;AACA,aAAK,kBAAkB,kBACpB,CAAC,eAAe,SAAS,GAAG,eAAe,IAC3C,CAAC,eAAe,OAAO;AAC1B,aAAK,sBAAsB;AAC3B,aAAK,eAAe;AACpB,UAAE,KAAK;AAAA,MACR,CAAC;AAED,QAAE,MAAM,QAAQ;AAAA;AAAA;AAAA,oBAGE,GAAG,QAAQ;AAAA;AAAA;AAAA,GAG5B;AAED,WAAK,KAAK,QAAQ,KAAK,sBAAsB,EAAE,GAAG,SAAS,MAAM;AAChE,eAAO,MAAM,aAAa,EAAE,OAAO,kBAAkB,aAAa;AAClE,UAAE,KAAK;AAAA,MACR,CAAC;AAAA,IACF;AAAA,IAEA,eAAe;AACd,WAAK,WAAW,KAAK,QAAQ,QAAQ,KAAK,gBAAgB;AAC1D,UAAI,OAAO;AAAA;AAAA;AAAA;AAAA;AAAA,OAKN,GAAG,cAAc;AAAA;AAAA;AAAA;AAItB,WAAK,SAAS,KAAK,IAAI;AAAA,IACxB;AAAA,IAEA,wBAAwB;AACvB,UAAI,gBAAgB,CAAC,cAAc;AAClC,YAAI,OAAO;AACX,YAAI,cAAc,eAAe;AAChC,kBAAQ,GAAG,aAAa;AAAA,QACzB,WAAW,cAAc,SAAS;AACjC,kBAAQ,GAAG,YAAY;AAAA,QACxB,OAAO;AACN,kBAAQ,OAAO,KAAK,UAAU,KAAK,SAAS,SAAS;AACrD,cAAI,WAAW,OAAO,KAAK,aAAa,KAAK,SAAS,SAAS;AAC/D,cAAI,CAAC,UAAU;AACd;AAAA,UACD;AACA,sBAAY,SAAS;AAAA,QACtB;AAEA,eAAO;AAAA;AAAA;AAAA,mBAGS,0BAA0B,8BAA8B;AAAA;AAAA,+BAE5C,GAAG,KAAK;AAAA,cACzB,OAAO,MAAM,KAAK,UAAU,IAAI;AAAA;AAAA;AAAA;AAAA;AAAA,MAK5C;AACA,UAAI,OAAO,KAAK,gBAAgB,IAAI,aAAa,EAAE,KAAK,EAAE;AAC1D,WAAK,SAAS,KAAK,uBAAuB,EAAE,KAAK,IAAI;AAAA,IACtD;AAAA,IAEA,iBAAiB;AAChB,WAAK,SAAS,KAAK,iBAAiB,EAAE,GAAG,oBAAoB,CAAC,MAAM;AACnE,YAAI,YAAY,EAAE,EAAE,aAAa,EAAE,KAAK,oBAAoB;AAC5D,aAAK,kBAAkB,SAAS;AAChC,YAAI,YAAY,EAAE,EAAE,aAAa,EAAE,KAAK,GAAG,EACzC,KAAK,gBAAgB;AACvB,YAAI,YAAY,EAAE,EAAE,aAAa,EAC/B,KAAK,GAAG,EACR,KAAK,gBAAgB;AACvB,aAAK,mBAAmB,SAAS,EAAE,KAAK,CAAC,qBAAqB;AAC7D,cAAI,iBAAiB,QAAQ;AAC5B,gBAAI,iBAAiB,KAAK,UAAU,iBACnC,aAAa,gBAAgB,YAAY,SAC1C;AACA,iBAAK,sBACJ,kBACA,WACA,WACA,cACD;AACA,iBAAK,aAAa,SAAS;AAAA,UAC5B,OAAO;AACN,iBAAK,gBAAgB,SAAS;AAAA,UAC/B;AAAA,QACD,CAAC;AAAA,MACF,CAAC;AAAA,IACF;AAAA,IAEA,kBAAkB,WAAW;AAC5B,gBAAU,KAAK;AAAA;AAAA,MAEX,GAAG,YAAY;AAAA;AAAA,QAEb;AAAA,IACP;AAAA,IAEA,gBAAgB,WAAW;AAC1B,gBAAU,KACT;AAAA,MACG,GAAG,kBAAkB;AAAA,UAEzB;AAAA,IACD;AAAA,IAEA,aAAa,WAAW;AACvB,aAAO,MAAM,aACZ,WACA,kBACA,mBACA,WACD;AAAA,IACD;AAAA,IAEA,+BAA+B;AAC9B,UAAI,kBAAkB,CAAC;AACvB,UAAI,SAAS,KAAK,UAAU,KAAK,OAAO,OAAO,CAAC,MAC/C,CAAC,UAAU,QAAQ,QAAQ,OAAO,OAAO,EAAE,SAAS,EAAE,SAAS,CAChE;AACA,sBAAgB,KAAK;AAAA,QACpB,OAAO,GAAG,KAAK,OAAO;AAAA,QACtB,WAAW;AAAA,QACX,WAAW;AAAA,QACX,SAAS;AAAA,QACT,SAAS,OAAO,IAAI,CAAC,OAAQ;AAAA,UAC5B,OAAO,GAAG,GAAG,KAAK;AAAA,UAClB,OAAO,GAAG;AAAA,UACV,SAAS,KAAK,gBAAgB,SAAS,GAAG,SAAS;AAAA,QACpD,EAAE;AAAA,MACH,CAAC;AACD,aAAO;AAAA,IACR;AAAA,IAEA,mBAAmB,OAAO;AACzB,UAAI,kBAAkB,KAAK,UAAU,qBAAqB;AAG1D,wBAAkB,gBAAgB,OACjC,CAAC,UAAU,CAAC,MAAM,SAAS,UAAU,gBAAgB,YAAY,KAAK,CACvE;AAEA,UAAI,OAAO;AAAA,QACV,SAAS,KAAK;AAAA,QACd;AAAA,QACA;AAAA,MACD;AAEA,aAAO,OACL,KAAK,2CAA2C,IAAI,EACpD,KAAK,CAAC,MAAM;AACZ,YAAI,eAAe,EAAE,WAAW,CAAC;AACjC,uBAAe,aAAa,OAAO,CAAC,MAAM,EAAE,UAAU,CAAC;AACvD,YAAI,eAAe,aAAa,KAC/B,CAAC,MAAM,EAAE,SAAS,OAAO,QAAQ,IAClC;AACA,uBAAe,aAAa,OAC3B,CAAC,MACA,CAAC,CAAC,SAAS,iBAAiB,OAAO,QAAQ,IAAI,EAAE,SAAS,EAAE,IAAI,CAClE;AAEA,YAAI;AAAc,uBAAa,QAAQ,YAAY;AACnD,eAAO;AAAA,MACR,CAAC;AAAA,IACH;AAAA,IAEA,sBAAsB,QAAQ,WAAW,WAAW,gBAAgB;AACnE,UAAI,gBAAgB;AAAA;AAAA;AAAA,oBAGF,GAAG,QAAQ;AAAA;AAAA;AAAA;AAAA;AAAA;AAM7B,UAAI,sBAAoB;AACxB,UAAI,sBAAsB;AAE1B,aAAO,IAAI,WAAS;AACnB,YAAI,MAAM,SAAS,gBAAgB;AAClC,gCAAsB,KAAK,kBAAkB,OAAO,WAAW,IAAI;AAAA,QACpE,OAAO;AACN,iCAAuB,KAAK,kBAAkB,OAAO,SAAS;AAAA,QAC/D;AAAA,MACD,CAAC;AAED,UAAI,gBAAgB,gBAAgB,sBAAsB;AAC1D,gBAAU,YAAY,gBAAgB,QAAQ,mBAAmB,CAAC;AAClE,gBAAU,KAAK,aAAa;AAAA,IAC7B;AAAA,IAEA,kBAAkB,OAAO,WAAW,UAAQ,OAAO;AAClD,UAAI,QAAQ,MAAM,QAAQ,OAAO,GAAG,SAAS,IAAI,MAAM;AACvD,UAAI,UAAU,OAAO,QAAQ,MAAM;AAClC,gBAAQ,GAAG,IAAI;AAAA,MAChB,WAAW,aAAa,aAAa,SAAS;AAC7C,gBAAQ,SAAS,MAAM,GAAG,IAAI,IAAI,GAAG,KAAK;AAAA,MAC3C;AACA,UAAI,QAAQ,MAAM,QAAQ,OAAO,KAAK,mBAAmB,MAAM,IAAI;AAEnE,UAAI,eAAe,UAAU,0BAA0B,OAAO,MAAM,KAAK,QAAQ,IAAI,cAAc;AACnG,aAAO,4BAA4B,UAAU,aAAY,mBAAmB;AAAA;AAAA,MAExE;AAAA,uDACiD,MAAM,SAAS;AAAA,mCACnC,MAAM;AAAA;AAAA;AAAA,IAGxC;AAAA,IAEA,kBAAkB;AACjB,WAAK,SAAS,GAAG,SAAS,kBAAkB,CAAC,MAAM;AAClD,YAAI,UAAU,EAAE,EAAE,aAAa;AAC/B,YAAI,cAAc,QAAQ,SAAS,UAAU;AAE7C,YAAI,YAAY,QACd,QAAQ,iBAAiB,EACzB,KAAK,GAAG,EACR,KAAK,WAAW;AAClB,YAAI,QACH,OAAO,QAAQ,KAAK,OAAO,MAAM,WAC9B,mBAAmB,QAAQ,KAAK,OAAO,EAAE,KAAK,CAAC,IAC/C,QAAQ,KAAK,OAAO;AACxB,oBAAY,cAAc,gBAAgB,YAAY;AAEtD,eAAO,KAAK,UAAU,YAAY,OAAO,SAAS,EAAE,KAAK,MAAM;AAC9D,cAAI;AAAa;AACjB,iBAAO,KAAK,aAAa,WAAW,KAAK;AAAA,QAC1C,CAAC;AAAA,MACF,CAAC;AAAA,IACF;AAAA,IAEA,aAAa,WAAW,OAAO;AAC9B,UAAI,WAAW;AACf,UAAI,UAAU,IAAI;AACjB,mBAAW;AACX,gBAAQ;AAAA,MACT;AACA,UAAI,cAAc,WAAW;AAC5B,mBAAW;AACX,gBAAQ,IAAI;AAAA,MACb;AACA,aAAO,KAAK,UAAU,YAAY,IACjC,KAAK,SACL,WACA,UACA,KACD;AAAA,IACD;AAAA,EACD;;;AC/RC,SAAO,UAAU,uCAAuC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;;ACDzD,SAAO,QAAQ,cAAc;AAE7B,SAAO,MAAM,YAAY,MAAM,kBAAkB,OAAO,MAAM,SAAS;AAAA,QAClE,YAAY;AACf,aAAO;AAAA,IACR;AAAA,IAEA,iBAAiB;AAChB,aAAO,MAAM,eAAe,EAC1B,KAAK,MAAM;AACX,aAAK,aAAa,KAAK,aAAa,MAAM,GAAG,OAAO;AACpD,aAAK,oBAAoB,OAAO,MAAM,SAAS,KAAK,YAAY,CAAC;AAEjE,YAAI,OAAO,KAAK,kBAAkB,SAAS,UAAU;AACpD,iBAAO,OAAO,KAAK,mBAAmB,KAAK,kBAAkB,KAAK;AAAA,QACnE;AAEA,YAAI,KAAK,kBAAkB,UAAU;AACpC,eAAK,UAAU,KAAK,kBAAkB;AACtC,eAAK,aAAa;AAAA,QACnB,OAAO;AACN,eAAK,UAAU,KAAK,mBAAmB,WAAW,KAAK,kBAAkB,UAAU;AACnF,eAAK,aAAa,KAAK,mBAAmB,cAAc;AAAA,QACzD;AAAA,MACD,CAAC;AAAA,IACH;AAAA,IAEA,aAAa;AAAA,IAEb;AAAA,IAEA,aAAa,MAAM;AAClB,YAAM,aAAa,IAAI;AACvB,WAAK,cAAc;AAAA,IACpB;AAAA,IAEA,gBAAgB;AACf,UAAI,MAAK;AACT,UAAI,OAAO,KAAK;AAChB,UAAI,YAAY,KAAK,kBAAkB;AAEvC,WAAK,QAAQ,KAAK,KAAK,IAAI,SAAU,MAAM;AAE1C,YAAI,WAAW;AACf,YAAI,UAAU,YAAY,EAAE,WAAW,UAAU,QAAQ,GAAG;AAC3D,qBAAW,UAAU,SAAS,IAAI;AAAA,QACnC,WAAW,UAAU,UAAU;AAC9B,qBAAW,KAAK,UAAU;AAAA,QAC3B;AAGA,YAAI;AACJ,YAAI,KAAK,aAAa;AACrB,kBAAQ,KAAK,WACV,GAAG,oBAAoB,CAAC,KAAK,KAAK,cAAc,KAAK,MAAM,KAAK,QAAQ,CAAC,IACzE,GAAG,aAAa,CAAC,KAAK,KAAK,cAAc,KAAK,IAAI,CAAC;AAAA,QACvD,OAAO;AACN,kBAAQ,KAAK,UAAU;AAAA,QACxB;AAEA,YAAI,IAAI;AAAA,UACP,OAAO,KAAK,UAAU;AAAA,UACtB,KAAK,KAAK,UAAU;AAAA,UACpB,MAAM;AAAA,UACN,IAAI,KAAK,UAAU,MAAM;AAAA,UACzB,SAAS,IAAG;AAAA,UACZ;AAAA,UACA,cAAc,KAAK,oBAAoB;AAAA,QACxC;AAEA,YAAI,KAAK,SAAS,OAAO,GAAG,MAAM,aAAa,KAAK,KAAK,GAAG;AAC3D,YAAE,kBAAkB,WAAW,KAAK,MAAM,OAAO,CAAC;AAAA,QACnD;AAEA,YAAI,KAAK,cAAc;AACtB,YAAE,kBAAkB;AAAA,QACrB;AAEA,eAAO;AAAA,MACR,CAAC;AAAA,IACF;AAAA,IAEA,SAAS;AACR,WAAK,SAAS,KAAK,MAAM;AACxB,aAAK,aAAa;AAAA,MACnB,CAAC;AAAA,IACF;AAAA,IAEA,gBAAgB;AAAA,IAEhB;AAAA,IAEA,eAAe;AACd,YAAM,MAAK;AACX,YAAM,kBAAkB,KAAK,mBAAmB,mBAAmB;AACnE,YAAM,YAAY,KAAK,kBAAkB;AACzC,YAAM,cAAc;AAEpB,WAAK,QAAQ,MAAM;AACnB,WAAK,QAAQ,SAAS,cAAc;AAEpC,WAAK,QAAQ,IAAI,MAAM,KAAK,QAAQ,IAAI,KAAK,OAAO;AAAA,QACnD,YAAY;AAAA,QACZ,mBAAmB;AAAA,QACnB,qBAAqB;AAAA,QACrB,sBAAsB;AAAA,QACtB,6BAA6B;AAAA,QAC7B,sBAAsB;AAAA,QACtB,WAAW;AAAA,QACX,aAAa;AAAA,QACb,UAAU,UAAQ;AACjB,iBAAO,UAAU,QAAQ,KAAK,SAAS,KAAK,EAAE;AAAA,QAC/C;AAAA,QACA,gBAAgB,CAAC,MAAM,OAAO,QAAQ;AACrC,cAAI,CAAC,IAAG;AAAW;AACnB,iBAAO,GAAG,UAAU,KAAK,SAAS,KAAK,IAAI;AAAA,aACzC,UAAU,QAAQ,OAAO,KAAK,EAAE,OAAO,WAAW;AAAA,aAClD,UAAU,MAAM,OAAO,GAAG,EAAE,OAAO,WAAW;AAAA,UAChD,CAAC;AAAA,QACF;AAAA,QACA,oBAAoB,CAAC,MAAM,aAAa;AACvC,cAAI,CAAC,IAAG;AAAW;AACnB,cAAI,qBAAqB;AAEzB,cAAI,EAAE,WAAW,UAAU,QAAQ,GAAG;AACrC,iCAAqB;AAAA,UACtB,WAAW,UAAU,UAAU;AAC9B,iCAAqB,UAAU;AAAA,UAChC;AAEA,cAAI,oBAAoB;AACvB,mBAAO,GAAG,UAAU,KAAK,SAAS,KAAK,IAAI;AAAA,eACzC,qBAAqB,SAAS,QAAQ;AAAA,YACxC,CAAC;AAAA,UACF;AAAA,QACD;AAAA,QACA,gBAAgB,UAAQ;AAEvB,cAAG,wBAAwB;AAAA,YAC1B,iBAAiB;AAAA,UAClB,CAAC;AAAA,QACF;AAAA,QACA,mBAAmB,UAAQ;AAC1B,cAAI,OAAO,IAAG,SAAS,KAAK,EAAE;AAE9B,cAAI,OACH,sBAAsB,KAAK;AAAA,6BACH,OAAO,KAAK,MAAM,EAAE,OAAO,OAAO,OAAO,OAAO,KAAK,IAAI,EAAE,OAAO,OAAO;AAGlG,cAAI,SAAS,IAAG,SAAS;AACzB,cAAI,UAAU,EAAE,WAAW,MAAM,GAAG;AACnC,gBAAI,WAAW;AACf,mBAAO,OAAO,UAAU,IAAI;AAAA,UAC7B;AACA,iBAAO,oCAAoC,OAAO;AAAA,QACnD;AAAA,MACD,CAAC;AACD,WAAK,wBAAwB;AAC7B,WAAK,WAAW;AAAA,IACjB;AAAA,IAEA,0BAA0B;AAIzB,UAAI,aAAa,KAAK,aAAa,KAAK,kBAAkB;AAC1D,UAAI,WAAW,SAAS;AAAG;AAE3B,YAAM,aAAa,KAAK,MAAM,QAAQ,cAAc,CAAC;AACrD,YAAM,eAAe,eAAa,KAAK,MAAM,QAAQ,SAAS,IAAI,aAAa;AAC/E,YAAM,OACL;AAAA,MACG,WAAW,IAAI,WAAS;AAAA,oDACsB,aAAa,KAAK;AAAA,oBAClD;AAAA,QACZ,GAAG,KAAK;AAAA,eACD,EAAE,KAAK,EAAE;AAAA;AAGtB,WAAK,aAAa,KAAK,aAAa,EAAE,OAAO,IAAI;AAGjD,YAAM,mBAAmB,CAAC,UAAU,WAAW,MAAM,KAAK,MAAM,iBAAiB,KAAK,GAAG,CAAC;AAE1F,WAAK,aAAa,GAAG,SAAS,kBAAkB,OAAK;AACpD,cAAM,OAAO,EAAE,EAAE,aAAa;AAC9B,aAAK,aAAa,KAAK,gBAAgB,EAAE,YAAY,UAAU;AAC/D,aAAK,SAAS,UAAU;AAExB,cAAM,QAAQ,KAAK,KAAK,EAAE;AAC1B,yBAAiB,KAAK;AAAA,MACvB,CAAC;AAAA,IACF;AAAA,IAEA,aAAa;AACZ,YAAM,UAAU,KAAK,MACnB,IAAI,OAAK,EAAE,YAAY,EACvB,OAAO,OAAK,KAAK,EAAE,WAAW,QAAQ,CAAC;AAEzC,UAAI,QAAQ,QAAQ,IAAI,OAAK;AAC5B,cAAM,aAAa,EAAE,QAAQ,KAAK,EAAE;AACpC,cAAM,YAAY,MAAM,EAAE,OAAO,CAAC;AAClC,cAAM,iBAAiB,OAAO,GAAG,MAAM,mBAAmB,SAAS;AACnE,eAAO;AAAA,0BACgB;AAAA,aACb;AAAA;AAAA,0BAEa;AAAA,aACb;AAAA;AAAA;AAAA,MAGX,CAAC,EAAE,KAAK,EAAE;AAEV,cAAQ,UAAU;AAClB,WAAK,QAAQ,QAAQ,KAAK;AAAA,IAC3B;AAAA,IAEA,SAAS,MAAM;AACd,aAAO,KAAK,KAAK,KAAK,UAAQ,KAAK,SAAS,IAAI;AAAA,IACjD;AAAA,QAEI,gBAAgB;AACnB,aAAO;AAAA,QACN;AAAA,QACA;AAAA,MACD;AAAA,IACD;AAAA,EACD;;;ACjOA,SAAO,QAAQ,uBAAuB;AACtC,SAAO,QAAQ,wBAAwB;AAEvC,SAAO,MAAM,eAAe,MAAM,qBAAqB,OAAO,MAAM,SAAS;AAAA,WACrE,iBAAiB;AACvB,YAAM,QAAQ,OAAO,UAAU;AAC/B,UAAI,MAAM,WAAW,GAAG;AACvB,cAAM,UAAU,MAAM;AACtB,cAAM,gBAAgB,OAAO,kBAAkB,OAAO,EAAE,eAAe,CAAC;AACxE,cAAM,KAAK,cAAc,iBAAiB,SAAS;AACnD,eAAO,UAAU,KAAK;AACtB,eAAO;AAAA,MACR,OAAO;AACN,eAAO;AAAA,MACR;AAAA,IACD;AAAA,IAEA,qBAAqB;AAAA,IAAC;AAAA,QAElB,YAAY;AACf,aAAO;AAAA,IACR;AAAA,IAEA,iBAAiB;AAChB,aAAO,MAAM,eAAe,EAC1B,KAAK,MAAM;AACX,aAAK,aAAa,GAAG,gBAAgB,CAAC,KAAK,UAAU,CAAC;AACtD,aAAK,oBAAoB,OAAO,MAAM,SAAS,KAAK,YAAY,CAAC;AACjE,aAAK,gBAAgB,OAAO,UAAU,EAAE;AAAA,MACzC,CAAC;AAAA,IACH;AAAA,IAEA,aAAa;AACZ,WAAK,iBAAiB;AACtB,YAAM,WAAW;AAAA,IAClB;AAAA,IAEA,aAAa;AAAA,IAEb;AAAA,IAEA,gBAAgB;AACf,YAAM,cAAc;AACpB,WAAK,wBAAwB;AAAA,QAC5B,eAAe,KAAK;AAAA,MACrB,CAAC;AAAA,IACF;AAAA,IAEA,SAAS;AACR,UAAI,KAAK,UAAU;AAClB,aAAK,SAAS,QAAQ;AACtB;AAAA,MACD;AAEA,WAAK,SACH,KAAK,MAAM,KAAK,yBAAyB,CAAC,EAC1C,KAAK,aAAW;AAChB,aAAK,WAAW,IAAI,OAAO,MAAM,SAAS,OAAO;AAAA,MAClD,CAAC;AAAA,IACH;AAAA,IAEA,2BAA2B;AAC1B,YAAM,UAAU;AAAA,QACf,SAAS,KAAK;AAAA,QACd,QAAQ,KAAK;AAAA,QACb,MAAM,KAAK;AAAA,QACX,WAAW;AAAA,MACZ;AACA,YAAM,gBAAgB,KAAK;AAE3B,aAAO,IAAI,QAAQ,aAAW;AAC7B,YAAI,kBAAkB,WAAW;AAChC,iBAAO,OAAO,SAAS,OAAO,MAAM,SAAS,KAAK,QAAQ;AAC1D,kBAAQ,OAAO;AAAA,QAChB,OAAO;AACN,iBAAO,MAAM,SAAS,iBAAiB,eAAe,MAAM;AAC3D,kBAAM,MAAM,OAAO,QAAQ,iBAAiB,aAAa;AACzD,gBAAI,CAAC,KAAK;AACT,qBAAO,WAAW,GAAG,iEAAiE,CAAC,cAAc,KAAK,CAAC,CAAC,CAAC;AAC7G,qBAAO,UAAU,QAAQ,KAAK,SAAS,YAAY,SAAS;AAC5D;AAAA,YACD;AACA,mBAAO,OAAO,SAAS;AAAA,cACtB,WAAW;AAAA,gBACV,IAAI;AAAA,gBACJ,OAAO,IAAI;AAAA,gBACX,KAAK,IAAI;AAAA,gBACT,OAAO,IAAI;AAAA,gBACX,QAAQ,IAAI,UAAU,IAAI;AAAA,cAC3B;AAAA,YACD,CAAC;AACD,oBAAQ,OAAO;AAAA,UAChB,CAAC;AAAA,QACF;AAAA,MACD,CAAC;AAAA,IACF;AAAA,QAEI,gBAAgB;AACnB,UAAI,SAAS;AAAA,QACZ;AAAA,QACA;AAAA,MACD;AACA,UAAI,gBAAgB,OAAO,KAAK,KAAK;AACrC,UAAI,iBAAiB,kBAAkB,MAAM;AAC5C,eAAO,KAAK,iDAAiD;AAAA,MAC9D;AACA,aAAO;AAAA,IACR;AAAA,EACD;AAEA,SAAO,MAAM,WAAW,MAAM,SAAS;AAAA,IACtC,YAAY,SAAS;AACpB,QAAE,OAAO,MAAM,OAAO;AACtB,WAAK,YAAY,KAAK,aAAa;AAAA,QAClC,MAAM;AAAA,QACN,SAAS;AAAA,QACT,OAAO;AAAA,QACP,UAAU;AAAA,MACX;AACA,WAAK,YAAY;AAAA,QAChB,UAAU;AAAA,QACV,WAAW;AAAA,QACX,WAAW;AAAA,QACX,WAAW;AAAA,MACZ;AACA,WAAK,oBAAoB;AAAA,IAC1B;AAAA,IACA,sBAAsB;AACrB,aAAO,IAAI,QAAS,CAAC,YAAY;AAChC,YAAI,cAAc,aAAa,QAAQ,iBAAiB;AACxD,YAAI,WAAW,aAAa,QAAQ,cAAc;AAClD,YAAI,WAAW;AAAA,UACd,eAAe,cAAc,cAAc;AAAA,UAC3C,YAAY,WAAW,WAAW;AAAA,QACnC;AACA,gBAAQ,QAAQ;AAAA,MACjB,CAAC,EAAE,KAAK,cAAY;AACnB,aAAK,UAAU;AACf,aAAK,cAAc,QAAQ;AAC3B,aAAK,KAAK;AACV,aAAK,uBAAuB,QAAQ;AACpC,aAAK,KAAK;AAAA,MACX,CAAC;AAAA,IACF;AAAA,IACA,YAAY;AACX,UAAI,MAAK;AAGT,UAAG,KAAK,mBAAmB;AAC3B,QAAE,KAAK,OAAO,KAAK,WAAW,SAAS,IAAG,SAAS;AAClD,YAAG,OAAO,MAAM,SAAS,OAAO,GAAG;AAClC,cAAG,KAAK,cAAc,GAAG,OAAO,GAAG,WAAW;AAC7C,mBAAO,UAAU,QAAQ,SAAS,UAAU;AAAA,UAC7C,CAAC;AAAA,QACF;AAAA,MACD,CAAC;AAED,QAAE,KAAK,MAAM,EAAE,GAAG,QAAQ,WAAW;AACpC,YAAG,KAAK,aAAa,eAAe;AAAA,MACrC,CAAC;AAAA,IACF;AAAA,IAEA,OAAO;AACN,WAAK,WAAW,KAAK;AACrB,WAAK,OAAO,EAAE,OAAO,EAAE,SAAS,KAAK,QAAQ;AAC7C,WAAK,gBAAgB,OAAO,MAAM,aAAa,KAAK,eAAe,KAAK,UACvE,GAAG,yDAAyD,CAAC;AAC9D,WAAK,cAAc,IAAI,EAAC,cAAc,MAAK,CAAC;AAE5C,WAAK,KAAK,aAAa,KAAK,WAAW;AACvC,WAAK,QAAQ;AAAA,IACd;AAAA,IACA,uBAAuB,UAAU;AAChC,UAAI,MAAK;AACT,QAAE,IAAG,aAAa,EAAE,KAAK,cAAc,EAAE,OAAO;AAChD,UAAI,WAAY,SAAS,WAAY,GAAG,eAAe,IAAI,GAAG,eAAe;AAC7E,YAAM,MAAM,sDAAsD;AAClE,UAAG,cAAc,OAAO,GAAG;AAAA,IAC5B;AAAA,IACA,wBAAwB,QAAQ,OAAO;AACtC,mBAAa,WAAW,MAAM;AAC9B,mBAAa,QAAQ,QAAQ,KAAK;AAAA,IACnC;AAAA,IACA,OAAO;AACN,YAAM,MAAK;AACX,UAAI,YAAY,IAAG,SAAS,KAAK,kBAAkB;AACnD,gBAAU,GAAG,SAAS,QAAQ,WAAW;AACxC,YAAI,QAAS,EAAE,IAAI,EAAE,SAAS,sBAAsB,IAAK,eAAiB,EAAE,IAAI,EAAE,SAAS,qBAAqB,IAAK,cAAc;AACnI,YAAG,wBAAwB,mBAAmB,KAAK;AAAA,MACpD,CAAC;AAED,UAAG,SAAS,GAAG,SAAS,gBAAgB,WAAW;AAClD,YAAG,YAAY,WAAW,CAAC,IAAG,YAAY;AAC1C,YAAG,KAAK,aAAa,UAAU,YAAY,IAAG,YAAY,QAAQ;AAClE,YAAG,wBAAwB,gBAAgB,IAAG,YAAY,QAAQ;AAClE,YAAG,QAAQ;AACX,YAAG,uBAAuB,IAAG,WAAW;AAAA,MACzC,CAAC;AAAA,IACF;AAAA,IACA,UAAU;AAET,WAAK,SAAS,KAAK,yBAAyB,EAC1C,YAAY,kBAAkB,EAC9B,SAAS,iBAAiB;AAE5B,WAAK,SACH,KAAK,+DAA+D,EACpE,QAAQ,2BAA2B;AAErC,WAAK,SAAS,KAAK,sBAAsB,EACvC,KAAK,SAAS,EAAE,EAAE,KAAK,OAAO,MAAM,KAAK,MAAM,CAAC;AAClD,WAAK,SAAS,KAAK,sBAAsB,EACvC,KAAK,SAAS,EAAE,EAAE,KAAK,OAAO,MAAM,KAAK,OAAO,CAAC;AAEnD,WAAK,SAAS,KAAK,kBAAkB,EACnC,QAAQ,OAAO,MAAM,KAAK,OAAO,CAAC;AAEpC,WAAK,SAAS,KAAK,gBAAgB,EAAE,KAAK,4BAA4B;AAEtE,UAAI,YAAY,KAAK,SAAS,KAAK,kBAAkB;AACrD,gBAAU,KAAK,kBAAkB,EAAE,SAAS,QAAQ;AAEpD,gBAAU,KAAK,MAAM,EAAE,GAAG,SAAS,WAAW;AAC7C,kBAAU,KAAK,MAAM,EAAE,YAAY,QAAQ;AAC3C,UAAE,IAAI,EAAE,SAAS,QAAQ;AAAA,MAC1B,CAAC;AAAA,IACF;AAAA,IAEA,oBAAoB,MAAM;AACzB,WAAK,UAAW,OAAO,IAAI,EAAE,GAAG,OAAO,aAAa,SAAS,EAAE;AAC/D,aAAO,OAAO,SAAS,qBAAqB,IAAI;AAAA,IACjD;AAAA,IACA,cAAc,UAAU;AACvB,UAAI,MAAK;AACT,eAAS,WAAW;AACpB,WAAK,cAAc;AAAA,QAClB,QAAQ,OAAO,KAAK,KAAK,YAAY;AAAA,QACrC,QAAQ;AAAA,UACP,MAAM;AAAA,UACN,OAAO;AAAA,QACR;AAAA,QACA,UAAU;AAAA,QACV,YAAY;AAAA,QACZ,cAAc;AAAA,QACd,oBAAoB;AAAA,QACpB,kBAAkB;AAAA,QAClB,aAAa,SAAS;AAAA,QACtB,UAAU,SAAS;AAAA,QACnB,cAAc;AAAA,QACd,QAAQ,SAAS,OAAO,KAAK,UAAU,UAAU;AAChD,iBAAO,OAAO,KAAK;AAAA,YAClB,QAAQ,IAAG,qBAAqB;AAAA,YAChC,MAAM;AAAA,YACN,MAAM,IAAG,SAAS,OAAO,GAAG;AAAA,YAC5B,UAAU,SAAS,GAAG;AACrB,kBAAI,SAAS,EAAE,WAAW,CAAC;AAC3B,uBAAS,IAAG,eAAe,MAAM;AACjC,uBAAS,MAAM;AAAA,YAChB;AAAA,UACD,CAAC;AAAA,QACF;AAAA,QACA,iBAAiB;AAAA,QACjB,aAAa,SAAS,OAAO,SAAS;AACrC,kBAAQ,KAAK,SAAS,MAAM,OAAO;AAAA,QACpC;AAAA,QACA,YAAY,SAAS,OAAO;AAE3B,cAAI,UAAU,MAAM,WAAW,IAAG;AAClC,cAAG,OAAO,MAAM,SAAS,OAAO,GAAG;AAClC,mBAAO,UAAU,QAAQ,SAAS,MAAM,IAAI;AAAA,UAC7C;AAAA,QACD;AAAA,QACA,WAAW,SAAS,OAAO,OAAO,YAAY;AAC7C,cAAG,aAAa,OAAO,UAAU;AAAA,QAClC;AAAA,QACA,aAAa,SAAS,OAAO,OAAO,YAAY;AAC/C,cAAG,aAAa,OAAO,UAAU;AAAA,QAClC;AAAA,QACA,QAAQ,SAAS,WAAW,SAAS,SAAS,MAAM;AACnD,cAAI,KAAK,SAAO,WAAY,UAAU,cAAa,OAAU;AAE5D;AAAA,UACD;AAEA,cAAI,QAAQ,OAAO,MAAM,YAAY,IAAG,OAAO;AAE/C,gBAAM,IAAG,UAAU,SAAS,IAAG,oBAAoB,SAAS;AAE5D,cAAG,IAAG,UAAU;AACf,kBAAM,IAAG,UAAU,OAAO,IAAG,oBAAoB,OAAO;AAEzD,cAAG,IAAG,UAAU,QAAQ;AACvB,gBAAI,UAAW,UAAU,cAAc,QAAQ,aAAc,IAAI;AAEjE,kBAAM,IAAG,UAAU,UAAU;AAE7B,gBAAI;AACH,oBAAM,IAAG,UAAU,OAAO,IAAG,oBAAoB,OAAO,OAAO,EAAE,SAAS,GAAG,GAAG,CAAC;AAAA,UACnF;AAEA,iBAAO,UAAU,QAAQ,IAAG,SAAS,MAAM,IAAI;AAAA,QAChD;AAAA,QACA,UAAU,SAAS,MAAM,SAAS,MAAM;AACvC,cAAG,KAAK,SAAS,SAAS;AACzB,kBAAM,aAAa,EAAE,kBAAkB,KAAK,OAAO,YAAY,IAAI,GAAG;AAEtE,gBAAG,WAAW,SAAS,cAAc,GAAG;AACvC,kBAAG,KAAK,aAAa,cAAc,WAAW;AAC9C,kBAAG,KAAK,aAAa,YAAY,IAAI;AACrC,kBAAG,SAAS,KAAK,eAAe,EAAE,YAAY,cAAc;AAG5D,kBAAG,SAAS,KAAK,kBAAkB,EAAE,YAAY,QAAQ;AACzD,kBAAG,SAAS,KAAK,sBAAsB,EAAE,SAAS,QAAQ;AAAA,YAC3D;AAEA,gBAAG,SAAS,KAAK,eAAe,EAAE,YAAY,cAAc;AAC5D,uBAAW,SAAS,cAAc;AAAA,UACnC;AACA,iBAAO;AAAA,QACR;AAAA,MACD;AAEA,UAAG,KAAK,SAAS;AAChB,UAAE,OAAO,KAAK,aAAa,KAAK,OAAO;AAAA,MACxC;AAAA,IACD;AAAA,IACA,SAAS,OAAO,KAAK;AACpB,UAAI,OAAO;AAAA,QACV,SAAS,KAAK;AAAA,QACd,OAAO,KAAK,oBAAoB,KAAK;AAAA,QACrC,KAAK,KAAK,oBAAoB,GAAG;AAAA,QACjC,QAAQ,KAAK;AAAA,QACb,SAAS,KAAK,UAAU,YAAY,IAAI;AAAA,QACxC,WAAW,KAAK;AAAA,MACjB;AACA,aAAO;AAAA,IACR;AAAA,IACA,UAAU;AACT,WAAK,KAAK,aAAa,eAAe;AAAA,IACvC;AAAA,IACA,eAAe,QAAQ;AACtB,UAAI,MAAK;AAET,aAAQ,WAAU,CAAC,GAAG,IAAI,OAAK;AAC9B,UAAE,KAAK,EAAE;AACT,UAAE,WAAW,OAAO,MAAM,UAAU,EAAE,WAAW,IAAG,OAAO;AAG3D,YAAG,EAAE,aAAa,EAAE,YAAY,GAAG;AAClC,YAAE,WAAW;AAAA,QACd;AAEA,UAAE,KAAK,IAAG,WAAW,SAAS,QAAQ,QAAQ;AAC7C,YAAE,UAAU,EAAE;AAAA,QACf,CAAC;AAED,YAAG,CAAC,IAAG,UAAU;AAChB,YAAE,SAAS;AAGZ,UAAE,QAAQ,OAAO,SAAS,mBAAmB,EAAE,KAAK;AACpD,UAAE,MAAM,OAAO,SAAS,mBAAmB,EAAE,GAAG;AAGhD,YAAI,CAAC,OAAO,SAAS,SAAS,EAAE,KAAK,KAAK,EAAE,KAAK;AAChD,YAAE,QAAQ,OAAO,SAAS,SAAS,EAAE,KAAK,EAAE;AAAA,QAC7C;AAEA,YAAI,EAAE,SAAS,CAAC,OAAO,SAAS,SAAS,EAAE,GAAG,GAAG;AAChD,YAAE,MAAM,OAAO,SAAS,SAAS,EAAE,OAAO,CAAC;AAAA,QAC5C;AAEA,YAAG,8BAA8B,CAAC;AAClC,YAAG,eAAe,CAAC;AAEnB,UAAE,QAAQ,OAAO,MAAM,UAAU,EAAE,KAAK;AAExC,eAAO;AAAA,MACR,CAAC;AAAA,IACF;AAAA,IACA,eAAe,GAAG;AACjB,UAAI,OAAO;AACX,UAAG,KAAK,eAAe;AACtB,qBAAa,KAAK,UAAU,KAAK,cAAc,CAAC,MAAM;AAEtD,YAAI,WAAW,WAAW,GAAG,GAAG;AAC/B,uBAAa,OAAO,GAAG,MAAM,aAAa,UAAU,IACnD,aAAa;AAAA,QACf;AAEA,UAAE,kBAAkB,OAAO,GAAG,MAAM,IAAI,YAAY,aAAa;AACjE,UAAE,YAAY,OAAO,GAAG,MAAM,IAAI,YAAY,MAAM;AAAA,MACrD,OAAO;AACN,gBAAQ,EAAE;AACV,YAAI,CAAC,OAAO,GAAG,MAAM,aAAa,KAAK,KAAK,CAAC,OAAO;AACnD,kBAAQ,OAAO,GAAG,MAAM,IAAI,QAAQ,aAAa;AAAA,QAClD;AACA,UAAE,kBAAkB;AACpB,UAAE,YAAY,OAAO,GAAG,MAAM,mBAAmB,KAAK;AAAA,MACvD;AACA,aAAO;AAAA,IACR;AAAA,IACA,aAAa,OAAO,YAAY;AAC/B,UAAI,MAAK;AACT,aAAO,MAAM,mBAAmB,IAAG,SAAS,MAAM,IAAI;AACtD,aAAO,OAAO,KAAK;AAAA,QAClB,QAAQ,IAAG,uBAAuB;AAAA,QAClC,MAAM,IAAG,gBAAgB,KAAK;AAAA,QAC9B,UAAU,SAAS,GAAG;AACrB,cAAG,EAAE,KAAK;AACT,mBAAO,WAAW,GAAG,wBAAwB,CAAC;AAC9C,uBAAW;AAAA,UACZ;AAAA,QACD;AAAA,QACA,OAAO,WAAW;AACjB,qBAAW;AAAA,QACZ;AAAA,MACD,CAAC;AAAA,IACF;AAAA,IACA,gBAAgB,OAAO;AACtB,UAAI,MAAK;AACT,UAAI,OAAO;AAAA,QACV,MAAM,MAAM,KAAK,UAAU;AAAA,MAC5B;AAEA,WAAK,KAAK,UAAU,SAAS,IAAG,oBAAoB,MAAM,KAAK;AAE/D,UAAG,KAAK,UAAU;AACjB,aAAK,KAAK,UAAU,UAAW,MAAM,MAAM,cAAc,MAAM,IAAI,aAAc,IAAI;AAEtF,UAAG,KAAK,UAAU,KAAK;AACtB,YAAI,CAAC,MAAM,KAAK;AACf,gBAAM,MAAM,MAAM,MAAM,IAAI,GAAG,MAAM;AAAA,QACtC;AAEA,aAAK,KAAK,UAAU,OAAO,IAAG,oBAAoB,MAAM,GAAG;AAE3D,YAAI,KAAK,KAAK,UAAU,SAAS;AAChC,eAAK,KAAK,UAAU,OAAO,IAAG,oBAAoB,OAAO,MAAM,GAAG,EAAE,SAAS,GAAG,GAAG,CAAC;AAAA,QACrF;AAAA,MACD;AAEA,WAAK,UAAU,MAAM,WAAW,KAAK;AAErC,aAAO,EAAE,MAAY,WAAW,KAAK,UAAU;AAAA,IAChD;AAAA,IAEA,8BAA8B,OAAO;AACpC,UAAI,MAAM,QAAQ;AAEjB,cAAM,QAAQ,MAAM,QAAQ,EAAE,aAAa,OAAO,MAAM,KAAK,EAAE,UAAU,IAAI;AAC7E,cAAM,MAAM,MAAM,MAAM,EAAE,aAAa,OAAO,MAAM,GAAG,EAAE,IAAI,GAAG,KAAK,EAAE,UAAU,IAAI;AAAA,MACtF;AAAA,IACD;AAAA,EACD;;;AC1cA,SAAO,QAAQ,cAAc;AAE7B,SAAO,MAAM,gBAAgB,MAAM,sBAAsB,OAAO,MAAM,SAAS;AAAA,QAC1E,YAAY;AACf,aAAO;AAAA,IACR;AAAA,IAEA,iBAAiB;AAChB,aAAO,MAAM,eAAe,EAC1B,KAAK,MAAM;AACX,aAAK,aAAa,GAAG,iBAAiB,CAAC,GAAG,KAAK,OAAO,CAAC,CAAC;AACxD,aAAK,qBAAqB,OAAO,kBAAkB,KAAK,OAAO,EAAE,yBAAyB;AAAA,MAC3F,CAAC;AAAA,IACH;AAAA,IAEA,SAAS;AAAA,IAET;AAAA,IAEA,aAAa;AACZ,WAAK,eAAe;AACpB,WAAK,iBAAiB;AACtB,WAAK,eAAe;AACpB,WAAK,qBAAqB;AAC1B,YAAM,WAAW;AAAA,IAClB;AAAA,IAEA,aAAa;AACZ,UAAI,KAAK,eAAe,KAAK,mBAAmB;AAC/C;AAAA,MACD;AAEA,WAAK,qBAAqB;AAC1B,WAAK,8BAA8B;AACnC,WAAK,eAAe;AAAA,IACrB;AAAA,IAEA,gCAAgC;AAC/B,WAAK,KAAK,cAAc,GAAG,qBAAqB,GAAG,MAAM,KAAK,UAAU,CAAC;AACzE,WAAK,KAAK,cAAc,GAAG,gCAAgC,GAAG,MAAM,KAAK,8BAA8B,CAAC;AACxG,WAAK,0BAA0B;AAAA,IAChC;AAAA,IAEA,uBAAuB;AACtB,YAAM,qBAAqB;AAE3B,WAAK,aAAa,KAAK,kBAAkB;AACzC,WAAK,KAAK,uBAAuB;AACjC,WAAK,kBAAkB,KAAK,MAAM,KAAK,8BAA8B,EAAE,SAAS,gBAAgB;AAChG,WAAK,KAAK,KAAK,YAAY,aAAa;AAExC,WAAK,qBAAqB,KAAK,MAAM,KAAK,iBAAiB;AAC3D,WAAK,gBAAgB,KAAK,MAAM,KAAK,mBAAmB;AAExD,aAAO,MAAM,yBAAyB,KAAK,iBAAiB,IAAI;AAAA,IACjE;AAAA,IAEA,4BAA4B;AAC3B,WAAK,6BAA6B,KAAK,KAAK,WAC3C,GAAG,qBAAqB,GACxB,MAAM;AACL,aAAK,6BAA6B;AAClC,aAAK,KAAK,iBAAiB,KAAK;AAAA,MACjC,GACA,EAAC,WAAW,cAAa,CAC1B;AAEA,WAAK,gCAAgC,KAAK,KAAK,WAC9C,GAAG,SAAS,GACZ,MAAM;AACL,aAAK,gCAAgC;AACrC,aAAK,KAAK,iBAAiB,KAAK;AAAA,MACjC,CACD;AAEA,WAAK,6BAA6B,KAAK;AAAA,IACxC;AAAA,IAEA,qBAAqB;AAAA,IAErB;AAAA,IAEA,6BAA6B,MAAM;AAClC,WAAK,2BAA2B,OAAO,IAAI;AAC3C,WAAK,8BAA8B,OAAO,IAAI;AAAA,IAC/C;AAAA,IAEA,iBAAiB;AAChB,UAAI,KAAK,oBAAoB;AAC5B,aAAK,SAAS,KAAK,mBAAmB;AACtC,aAAK,eAAe,KAAK,mBAAmB;AAC5C,aAAK,iBAAiB;AAAA,MACvB,OAAO;AACN,eAAO,aAAa;AAAA,UACnB,MAAM,KAAK,sBACV,mBACA;AAAA,YACC,YAAY,CAAC,MAAM,CAAC,SAAS,OAAO,UAAU,CAAC;AAAA,YAC/C,eAAe,KAAK;AAAA,YACpB,WAAW;AAAA,UACZ,GACA,QACD;AAAA,UACA,MAAM,KAAK,sBAAsB,eAChC;AAAA,YACC,eAAe,KAAK;AAAA,YACpB,WAAW;AAAA,UACZ,GACA,cACD;AAAA,UACA,MAAM,KAAK,iBAAiB;AAAA,QAC7B,CAAC;AAAA,MACF;AAAA,IACD;AAAA,IAEA,mBAAmB;AAClB,WAAK,mBAAmB,MAAM;AAE9B,aAAO,gBAAgB,uBAAuB,EAAE,KAAK,cAAY;AAChE,aAAK,2BAA2B,SAAS,eAAe,KAAK,MAAM,SAAS,YAAY,IAAI,CAAC;AAC7F,aAAK,OAAO,IAAI,WAAS;AACxB,gBAAM,QAAQ,MAAM;AACpB,gBAAM,iBAAiB,KAAK,yBAAyB,MAAM,eAAe,CAAC;AAAA,QAC5E,CAAC;AACD,aAAK,wBAAwB;AAAA,MAC9B,CAAC;AACD,WAAK,oBAAoB;AAEzB,UAAI,CAAC,KAAK,OAAO,UAAU,CAAC,KAAK,aAAa,QAAQ;AACrD,aAAK,mBAAmB;AAAA,MACzB;AAAA,IACD;AAAA,IAEA,sBAAsB,SAAS,SAAS,UAAU;AACjD,aAAO,OAAO,GAAG,SAAS,SAAS;AAAA,QAClC;AAAA,QACA,QAAQ,CAAC,GAAG;AAAA,MACb,CAAC,EAAE,KAAK,WAAS;AAChB,aAAK,YAAY;AAAA,MAClB,CAAC;AAAA,IACF;AAAA,IAEA,sBAAsB;AACrB,WAAK,oBAAoB,IAAI,OAAO,OAAO,YAAY;AAAA,QACtD,WAAW,KAAK;AAAA,QAChB,MAAM;AAAA,QACN,SAAS;AAAA,QACT,SAAS;AAAA,UACR,eAAe;AAAA,UACf,cAAc;AAAA,UACd,cAAc;AAAA,UACd,cAAc;AAAA,QACf;AAAA,QACA,gBAAgB,EAAC,SAAS,KAAK,QAAO;AAAA,QACtC,SAAS,KAAK,gBAAgB,CAAC;AAAA,QAC/B,mBAAmB,KAAK,qBAAqB;AAAA,MAC9C,CAAC;AAED,WAAK,qBAAqB,KAAK,kBAAkB,UAAU;AAAA,IAC5D;AAAA,IAEA,0BAA0B;AACzB,WAAK,cAAc,IAAI,OAAO,OAAO,YAAY;AAAA,QAChD,WAAW,KAAK;AAAA,QAChB,MAAM;AAAA,QACN,SAAS;AAAA,QACT,QAAQ;AAAA,QACR,SAAS;AAAA,UACR,eAAe;AAAA,UACf,cAAc;AAAA,UACd,cAAc;AAAA,UACd,cAAc;AAAA,UACd,cAAc;AAAA,QACf;AAAA,QACA,eAAe,MAAM,KAAK,sBAAsB;AAAA,QAChD,SAAS,KAAK;AAAA,QACd,mBAAmB,KAAK,qBAAqB;AAAA,MAC9C,CAAC;AAED,WAAK,qBAAqB,KAAK,YAAY,UAAU;AACrD,WAAK,YAAY,UAAU,KAAK,oBAAoB,EAAE,KAAK;AAAA,IAC5D;AAAA,IAEA,qBAAqB;AACpB,YAAM,yBACL,MAAM,GAAG,6DAA6D;AAAA,SAChE,GAAG,6CAA6C;AAEvD,YAAM,mBACL;AAAA,MACG,GAAG,WAAW;AAAA;AAGlB,YAAM,oBAAoB;AAE1B,YAAM,mBAAmB;AAAA;AAAA,gBAEX;AAAA;AAAA,KAEX;AAAA,KACA;AAAA;AAGH,WAAK,mBAAmB,OAAO,gBAAgB;AAC/C,WAAK,eAAe,KAAK,mBAAmB,KAAK,kBAAkB;AAAA,IACpE;AAAA,IAEA,YAAY;AACX,UAAI,KAAK,mBAAmB;AAC3B;AAAA,MACD;AAEA,WAAK,KAAK,iBAAiB,KAAK;AAEhC,UAAI,KAAK,cAAc;AACtB,aAAK,aAAa,OAAO;AAAA,MAC1B;AAEA,WAAK,iBAAiB,IAAI;AAC1B,WAAK,oBAAoB;AACzB,WAAK,YAAY,UAAU;AAC3B,WAAK,kBAAkB,UAAU;AAAA,IAClC;AAAA,IAEA,oBAAoB,cAAc;AACjC,YAAM,SAAS,aAAa,kBAAkB;AAC9C,UAAI,UAAU,CAAC;AACf,aAAO,MAAM,IAAI,iBAAe;AAC/B,gBAAQ,KAAK,OAAO,QAAQ,YAAY;AAAA,MACzC,CAAC;AACD,aAAO,KAAK,kBAAkB,OAAO;AAAA,IACtC;AAAA,IAEA,+BAA+B;AAC9B,WAAK,iBAAiB,KAAK;AAE3B,YAAM,SAAS,KAAK,oBAAoB,KAAK,WAAW;AACxD,YAAM,eAAe,KAAK,oBAAoB,KAAK,iBAAiB;AAEpE,WAAK,qBAAqB;AAAA,QACzB;AAAA,QACA;AAAA,MACD;AAEA,aAAO,MAAM,cAAc,KAAK,KAAK,SAAS,sBAAsB,KAAK,kBAAkB;AAC3F,WAAK,eAAe;AAAA,IACrB;AAAA,IAEA,kCAAkC;AACjC,WAAK,qBAAqB,OAAO,kBAAkB,KAAK,OAAO,EAAE,yBAAyB;AAC1F,WAAK,iBAAiB,KAAK;AAC3B,WAAK,iBAAiB;AAAA,IACvB;AAAA,IAEA,gCAAgC;AAC/B,aAAO,QAAQ,GAAG,oDAAoD,GAAG,MAAM;AAC9E,aAAK,qBAAqB;AAC1B,eAAO,MAAM,cAAc,KAC1B,KAAK,SAAS,sBAAsB,KAAK,kBAC1C,EAAE,KAAK,MAAM,KAAK,eAAe,CAAC;AAElC,aAAK,iBAAiB,KAAK;AAAA,MAC5B,CAAC;AAAA,IACF;AAAA,IAEA,iBAAiB,MAAM;AACtB,WAAK,6BAA6B,IAAI;AACtC,WAAK,oBAAoB;AAAA,IAC1B;AAAA,IAEA,wBAAwB;AACvB,UAAI,SAAS,KAAK,kBAAkB;AACpC,YAAM,SAAS,IAAI,OAAO,GAAG,OAAO;AAAA,QACnC,OAAO,GAAG,mBAAmB,CAAC,GAAG,KAAK,OAAO,CAAC,CAAC;AAAA,QAC/C,QAAQ;AAAA,UACP;AAAA,YACC,WAAW;AAAA,YACX,WAAW;AAAA,YACX,OAAO;AAAA,YACP,SAAS,CAAC,aAAa,gBAAgB;AAAA,YACvC,MAAM;AAAA,UACP;AAAA,UACA;AAAA,YACC,OAAO;AAAA,YACP,WAAW;AAAA,YACX,WAAW;AAAA,YACX,WAAW,MAAM;AAChB,qBAAO;AAAA,gBACN,SAAS;AAAA,gBACT,SAAS;AAAA,kBACR,eAAe,KAAK;AAAA,gBACrB;AAAA,cACD;AAAA,YACD;AAAA,YACA,SAAS;AAAA,YACT,YAAY;AAAA,UACb;AAAA,UACA;AAAA,YACC,WAAW;AAAA,YACX,WAAW;AAAA,YACX,YAAY;AAAA,UACb;AAAA,UACA;AAAA,YACC,OAAO;AAAA,YACP,WAAW;AAAA,YACX,WAAW;AAAA,YACX,sBAAsB;AAAA,UACvB;AAAA,UACA;AAAA,YACC,WAAW;AAAA,YACX,WAAW;AAAA,UACZ;AAAA,UACA;AAAA,YACC,OAAO;AAAA,YACP,WAAW;AAAA,YACX,WAAW;AAAA,YACX,SAAS,CAAC,eAAe,UAAU;AAAA,YACnC,sBAAsB;AAAA,UACvB;AAAA,UACA;AAAA,YACC,WAAW;AAAA,YACX,WAAW;AAAA,YACX,OAAO;AAAA,YACP,YAAY;AAAA,UACb;AAAA,UACA;AAAA,YACC,OAAO;AAAA,YACP,WAAW;AAAA,YACX,WAAW;AAAA,YACX,SAAS,CAAC,SAAS,OAAO,SAAS;AAAA,YACnC,SAAS;AAAA,UACV;AAAA,UACA;AAAA,YACC,OAAO;AAAA,YACP,WAAW;AAAA,YACX,WAAW;AAAA,YACX,YAAY;AAAA,YACZ,SAAS,CAAC,aAAa,gBAAgB,cAAc,WAAW;AAAA,YAChE,SAAS;AAAA,UACV;AAAA,UACA;AAAA,YACC,WAAW;AAAA,YACX,WAAW;AAAA,UACZ;AAAA,UACA;AAAA,YACC,OAAO;AAAA,YACP,WAAW;AAAA,YACX,WAAW;AAAA,YACX,SAAS,OAAO;AAAA,YAChB,YAAY;AAAA,UACb;AAAA,UACA;AAAA,YACC,OAAO;AAAA,YACP,WAAW;AAAA,YACX,WAAW;AAAA,YACX,SAAS,OAAO;AAAA,YAChB,sBAAsB;AAAA,UACvB;AAAA,UACA;AAAA,YACC,OAAO;AAAA,YACP,WAAW;AAAA,YACX,WAAW;AAAA,YACX,YAAY;AAAA,YACZ,SAAS,CAAC,UAAU,aAAa,WAAW,UAAU,OAAO;AAAA,YAC7D,SAAS;AAAA,UACV;AAAA,UACA;AAAA,YACC,WAAW;AAAA,YACX,WAAW;AAAA,YACX,OAAO;AAAA,YACP,YAAY;AAAA,UACb;AAAA,UACA;AAAA,YACC,OAAO;AAAA,YACP,WAAW;AAAA,YACX,WAAW;AAAA,YACX,SAAS,CAAC,SAAS,OAAO,SAAS;AAAA,YACnC,SAAS;AAAA,UACV;AAAA,UACA;AAAA,YACC,OAAO;AAAA,YACP,WAAW;AAAA,YACX,WAAW;AAAA,YACX,SAAS,OAAO;AAAA,YAChB,YAAY;AAAA,UACb;AAAA,UACA;AAAA,YACC,WAAW;AAAA,YACX,WAAW;AAAA,UACZ;AAAA,UACA;AAAA,YACC,OAAO;AAAA,YACP,WAAW;AAAA,YACX,WAAW;AAAA,YACX,SAAS,OAAO;AAAA,YAChB,SAAS;AAAA,UACV;AAAA,UACA;AAAA,YACC,OAAO;AAAA,YACP,WAAW;AAAA,YACX,WAAW;AAAA,YACX,SAAS;AAAA,UACV;AAAA,UACA;AAAA,YACC,WAAW;AAAA,YACX,WAAW;AAAA,YACX,YAAY;AAAA,UACb;AAAA,UACA;AAAA,YACC,OAAO;AAAA,YACP,WAAW;AAAA,YACX,WAAW;AAAA,YACX,SAAS,CAAC,QAAQ,OAAO,cAAc,KAAK;AAAA,YAC5C,YAAY;AAAA,UACb;AAAA,UACA;AAAA,YACC,WAAW;AAAA,YACX,WAAW;AAAA,UACZ;AAAA,UACA;AAAA,YACC,OAAO;AAAA,YACP,WAAW;AAAA,YACX,WAAW;AAAA,YACX,YAAY;AAAA,UACb;AAAA,QACD;AAAA,QACA,sBAAsB,GAAG,KAAK;AAAA,QAC9B,gBAAgB,CAAC,WAAW;AAC3B,cAAI,QAAQ;AACZ,cAAI,MAAM,mBAAmB,aAAa;AACzC,kBAAM,aAAa,MAAM;AACzB,kBAAM,aAAa,MAAM,cAAc,gBAAgB,MAAM,iBAAiB,MAAM;AACpF,kBAAM,gBAAgB,KAAK;AAC3B,kBAAM,eAAe;AACrB,mBAAO,MAAM,8EAA8E,EAAC,QAAQ,MAAK,CAAC,EAAE,KAAK,CAAC,QAAO;AACxH,mBAAK,YAAY,WAAW,UAAU,EAAC,cAAc,IAAI,YAAY,QAAQ,IAAI,YAAY,SAAS,MAAM,MAAK,CAAC;AAAA,YACnH,CAAC;AAAA,UACF,OAAO;AACN,iBAAK,YAAY,WAAW,UAAU,EAAC,cAAc,MAAM,OAAO,SAAS,MAAM,OAAO,QAAQ,MAAM,MAAK,CAAC;AAAA,UAC7G;AACA,iBAAO,KAAK;AAAA,QACb;AAAA,MACD,CAAC;AACD,aAAO,KAAK;AAAA,IACb;AAAA,IAEA,oBAAoB;AACnB,UAAI,cAAc;AAAA,QACjB,EAAC,OAAO,GAAG,YAAY,GAAG,OAAO,WAAU;AAAA,QAC3C,EAAC,OAAO,GAAG,kBAAkB,GAAG,OAAO,WAAU;AAAA,MAClD;AACA,UAAI,eAAe,CAAC;AACpB,UAAI,kBAAkB,CAAC;AACvB,UAAI,4BAA4B,CAAC;AAEjC,aAAO,SAAS,KAAK,OAAO,EAAE,OAAO,IAAI,QAAM;AAC9C,YAAI,CAAC,QAAQ,UAAU,EAAE,SAAS,GAAG,SAAS,GAAG;AAChD,sBAAY,KAAK,EAAC,OAAO,GAAG,OAAO,OAAO,GAAG,UAAS,CAAC;AAAA,QACxD;AACA,YAAI,OAAO,MAAM,mBAAmB,SAAS,GAAG,SAAS,GAAG;AAC3D,cAAI,GAAG,aAAa,YAAY;AAC/B,gBAAI,CAAC,GAAG,WAAW,GAAG,YAAY,oCAAoC;AACrE;AAAA,YACD;AAAA,UACD;AACA,uBAAa,KAAK,EAAC,OAAO,GAAG,OAAO,OAAO,GAAG,UAAS,CAAC;AACxD,oCAA0B,KAAK,EAAC,OAAO,GAAG,OAAO,OAAO,GAAG,UAAS,CAAC;AAAA,QACtE;AACA,YAAI,CAAC,QAAQ,QAAQ,EAAE,SAAS,GAAG,SAAS,GAAG;AAC9C,0BAAgB,KAAK,EAAC,OAAO,GAAG,OAAO,OAAO,GAAG,UAAS,CAAC;AAAA,QAC5D;AAAA,MACD,CAAC;AAED,aAAO;AAAA,QACN;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,MACD;AAAA,IACD;AAAA,IAEA,kBAAkB,OAAO;AACxB,aAAO,MAAM,OAAO,CAAC,MAAM,UAAU,MAAM,QAAQ,IAAI,MAAM,KAAK;AAAA,IACnE;AAAA,EAED;;;ACleA,SAAO,QAAQ,cAAc;AAE7B,SAAO,MAAM,YAAY,MAAM,kBAAkB,OAAO,MAAM,SAAS;AAAA,QAClE,YAAY;AACf,aAAO;AAAA,IACR;AAAA,IAEA,iBAAiB;AAChB,aAAO,MAAM,eAAe,EAAE,KAAK,MAAM;AACxC,aAAK,aAAa,KAAK,aAAa,MAAM,GAAG,QAAQ;AAAA,MACtD,CAAC;AAAA,IACF;AAAA,IAEA,aAAa;AACZ,WAAK,cAAc;AACnB,WAAK,mBAAmB;AACxB,WAAK,WAAW;AAAA,IACjB;AAAA,IAEA,aAAa;AACZ,WAAK,SAAS;AAAA,QACb;AAAA,QACA,GAAG,KAAK,wBAAwB,EAAE,IAAI,QAAM,GAAG,SAAS;AAAA,QACxD,KAAK,KAAK;AAAA,QACV,KAAK,KAAK;AAAA,QACV;AAAA,MACD;AAAA,IACD;AAAA,IAEA,aAAa,MAAM;AAClB,YAAM,aAAa,IAAI;AACvB,WAAK,QAAQ,KAAK,KAAK,IAAI,OAAK;AAE/B,UAAE,aAAa,KAAK,cAAc,CAAC;AACnC,eAAO;AAAA,MACR,CAAC;AAAA,IACF;AAAA,IAEA,SAAS;AACR,WAAK,oBAAoB,EAAE,KAAK,MAAM;AACrC,aAAK,kBAAkB;AAEvB,YAAI,CAAC,KAAK,SAAS;AAClB,eAAK,cAAc;AAAA,QACpB,OAAO;AACN,eAAK,QAAQ,mBAAmB,KAAK,OAAO,KAAK,UAAU;AAAA,QAC5D;AAAA,MACD,CAAC;AAAA,IACF;AAAA,IAEA,oBAAoB;AACnB,UAAI,OAAO,KAAK,MAAM,IAAI,KAAK,UAAU,KAAK,IAAI,CAAC,EAAE,KAAK,EAAE;AAE5D,WAAK,MAAM,KAAK,8BAA8B,EAAE,SAAS,YAAY;AAErE,WAAK,QAAQ,KAAK;AAAA;AAAA,MAEd;AAAA;AAAA,GAEH;AAED,WAAK,aAAa;AAAA,IACnB;AAAA,IAEA,kBAAkB,MAAM;AAEvB,UAAI,cACH,KAAK,wBAAwB,EAAE,IAAI,QAAM,GAAG,SAAS,KAAK,CAAC;AAC5D,YAAM,cAAc,KAAK,KAAK,eAAe;AAC7C,oBAAc,YAAY,OAAO,WAAS,UAAU,WAAW;AAC/D,UAAI,YAAY;AAChB,UAAI,MAAM;AACV,kBAAY,QAAQ,CAAC,OAAO,UAAU;AACrC,YAAI,KAAK,UAAU,CAAC,KAAK;AACxB,cAAI,SAAS;AAAG,yBAAa,OAAO,GAAG,KAAK,MAAM;AAAA;AAC7C,yBAAa,0BAA0B,GAAG,KAAK,MAAM;AAC1D,gBAAM;AAAA,QACP;AAAA,MACD,CAAC;AACD,mBAAa;AACb,aAAO;AAAA,IACR;AAAA,IAEA,UAAU,MAAM;AACf,WAAK,QAAQ,UAAU,KAAK,IAAI;AAChC,YAAM,eAAe,KAAK;AAC1B,YAAM,QAAQ,WAAW,KAAK,KAAK,KAAK,eAAe,OAAO;AAC9D,YAAM,gBAAgB,OAAO,MAAM,YAAY,KAAK;AACpD,YAAM,SAAS,CAAC,KAAK,aAAa,aAAa;AAC/C,YAAM,QAAQ,KAAK,aAChB,mBAAmB,sBAAsB,KAAK,oBAAoB,YAClE;AAAA,MACC,OAAO,SAAS,KAAK;AAAA;AAGzB,UAAI,UAAU,KAAK,kBAAkB,IAAI;AAEzC,YAAM,qBAAqB,KAAK,aAC7B,qCAAqC;AAAA,MACpC,OAAO,MAAM,KAAK,UAAU,IAAI;AAAA,aAEjC;AAEH,aAAO;AAAA;AAAA;AAAA;AAAA;AAAA,oCAK2B,OAAO,KAAK,IAAI;AAAA,QAC5C,KAAK,cAAc,IAAI;AAAA;AAAA;AAAA;AAAA,kCAIG;AAAA,qBACb;AAAA,eACN;AAAA,cACD,KAAK,cAAc,IAAI;AAAA;AAAA;AAAA,oBAGjB;AAAA;AAAA,SAEX;AAAA;AAAA;AAAA,OAGF;AAAA;AAAA;AAAA;AAAA,sCAI+B;AAAA,mCACH,KAAK,cAAc,IAAI;AAAA,iBACzC,gCAAgC,KAAK,uBAAuB,KAAK;AAAA,UACxE;AAAA;AAAA;AAAA;AAAA,OAIH;AAAA;AAAA;AAAA;AAAA,IAIN;AAAA,IAEA,sBAAsB;AACrB,aAAO,OACL,KAAK;AAAA,QACL,QAAQ;AAAA,QACR,MAAM;AAAA,UACL,SAAS,KAAK;AAAA,UACd,OAAO,KAAK,MAAM,IAAI,QAAK,GAAE,IAAI;AAAA,QAClC;AAAA,MACD,CAAC,EACA,KAAK,OAAK;AACV,aAAK,aAAa,OAAO,OACxB,KAAK,cAAc,CAAC,GACpB,EAAE,OACH;AAAA,MACD,CAAC;AAAA,IACH;AAAA,IAEA,kBAAkB;AAAA,IAgBlB;AAAA,IAEA,gBAAgB;AACf,UAAI,MAAK;AACT,WAAK,UAAU,IAAI,OAAO,MAAM,YAAY;AAAA,QAC3C,SAAS,KAAK;AAAA,QACd,OAAO,KAAK;AAAA,QACZ,SAAS,KAAK;AAAA,QACd,YAAY,KAAK;AAAA,MAClB,CAAC;AACD,WAAK,QAAQ,GAAG,SAAS,cAAc,SAAS,GAAG;AAClD,UAAE,eAAe;AACjB,UAAE,gBAAgB;AAClB,YAAI,OAAO,EAAE,IAAI,EAAE,KAAK,EAAE;AAC1B,eAAO,mBAAmB,IAAI;AAC9B,YAAG,QAAQ,KAAK,IAAI;AACpB,eAAO;AAAA,MACR,CAAC;AAAA,IACF;AAAA,EACD;AAEA,SAAO,MAAM,cAAc,MAAM,YAAY;AAAA,IAC5C,YAAY,MAAM;AACjB,QAAE,OAAO,MAAM,IAAI;AACnB,UAAI,MAAK;AAET,WAAK,YAAY,KAAK,SAAS;AAC/B,WAAK,UAAU,KAAK,WAAW;AAC9B,YAAG,QAAQ;AAAA,MACZ,CAAC;AAAA,IACF;AAAA,IACA,UAAU;AAET,WAAK,YAAY,EAAE,cAAc;AACjC,UAAI,KAAK,UAAU,WAAW,GAAG;AAChC,YAAI,OAAO,OAAO,gBAAgB,gBAAgB;AAClD,aAAK,YAAY,EAAE,IAAI,EAAE,SAAS,MAAM;AAAA,MACzC;AAAA,IACD;AAAA,IACA,mBAAmB,QAAQ,aAAa;AACvC,UAAI,MAAK;AAET,UAAI,QAAQ;AAEX,aAAK,QAAQ,KAAK,MAAM,OAAO,MAAM;AACrC,aAAK,aAAa;AAAA,MACnB;AAEA,aAAO,IAAI,QAAQ,aAAW;AAC7B,cAAM,QAAQ,KAAK,MAAM,IAAI,SAAS,IAAG;AACxC,gBAAM,QAAQ,oBAAoB,GAAE,QAAQ;AAC5C,cAAI,KAAK,IAAG,QAAQ,KAAK,KAAK,EAAE,IAAI,CAAC;AAErC,cAAI,OAAO;AACX,cAAI,IAAI;AACP,oBAAQ,GAAG;AACX,qBAAS,GAAG;AAAA,UACb;AAEA,cAAI,CAAC,IAAI;AACR,iBAAK,IAAG,QACN,KAAK,6BAA6B,GAAE,QAAQ,IAAI,EAChD,IAAI,CAAC;AACP,oBAAQ,GAAG,sBAAsB,EAAE;AACnC,qBAAS,GAAG,sBAAsB,EAAE;AAAA,UACrC;AAEA,iBAAO;AAAA,YACN,KAAK,GAAE;AAAA,YACP,MAAM,GAAE;AAAA,YACR,MAAM,GAAE;AAAA,YACR,GAAG;AAAA,YACH,GAAG;AAAA,YACH;AAAA,UACD;AAAA,QACD,CAAC;AACD,aAAK,aAAa;AAClB,gBAAQ;AAAA,MACT,CAAC;AAAA,IACF;AAAA,IACA,KAAK,SAAS;AACb,WAAK,UACH,KAAK,MAAM,KAAK,mBAAmB,CAAC,EACpC,KAAK,MAAM,KAAK,MAAM,OAAO,CAAC;AAAA,IACjC;AAAA,IACA,MAAM,SAAS;AACd,YAAM,MAAK;AACX,YAAM,QAAQ,KAAK;AACnB,YAAM,aAAa,MAAM,UAAU,UAAQ,KAAK,SAAS,OAAO;AAEhE,UAAI,UAAU;AAAA,QACb,OAAO;AAAA,QACP,kBAAkB,SAAS,OAAO;AACjC,gBAAM,QAAQ,oBAAoB,MAAM,OAAO,QAAQ;AACvD,cAAI,YAAY,IAAG,QAAQ,KAAK,KAAK,EAAE,IAAI,CAAC;AAE5C,cAAI,CAAC,WAAW;AACf;AAAA,UACD;AAEA,cAAI,cACF,OAAO,eACP,SAAS,gBAAgB,WAC1B,OAAO,UAAU,sBAAsB;AAExC,iBAAO;AAAA,YACN,GAAG,KAAK;AAAA,YACR,GAAG,KAAK,MAAM;AAAA,YACd,GAAG,KAAK;AAAA,UACT;AAAA,QACD;AAAA,QACA,SAAS;AAAA,QACT,SAAS;AAAA,QACT,iBAAiB;AAAA,MAClB;AAGA,WAAK,OAAO,IAAI,WACf,KAAK,UAAU,IAAI,CAAC,GACpB,sBACA,OACA,OACD;AACA,WAAK,cAAc;AACnB,WAAK,KAAK,KAAK;AAAA,IAChB;AAAA,IACA,gBAAgB;AACf,YAAM,cAAc,KAAK,UAAU,KAAK,mBAAmB;AAC3D,YAAM,aAAa,KAAK;AACxB,UAAI,oBAAoB;AAExB,WAAK,KAAK,OAAO,eAAe,WAAW;AAC1C,cAAM,SAAS,WAAW,KAAK,SAAS;AACxC,YAAI,CAAC,UAAU,OAAO,WAAW,GAAG;AACnC,sBAAY,KAAK,EAAE;AACnB;AAAA,QACD;AAEA,iCAAyB;AACzB,cAAM,OAAO,OAAO,IAAI,QAAQ,EAAE,KAAK,EAAE;AACzC,oBAAY,KAAK,IAAI;AAAA,MACtB,CAAC;AAED,WAAK,KAAK,OAAO,gBAAgB,eAAe;AAChD,WAAK,KAAK,OAAO,kBAAkB,eAAe;AAClD,WAAK,KAAK,OAAO,WAAW,MAAM;AACjC,UAAE,QAAQ,EAAE,IAAI,aAAa,wBAAwB;AAAA,MACtD,CAAC;AAGD,kBAAY,GAAG,SAAS,oBAAoB,OAAK;AAChD,cAAM,SAAS,EAAE;AACjB,cAAM,QAAQ,KAAK,KAAK,MAAM,UAC7B,QAAK,GAAE,SAAS,KAAK,KAAK,SAAS,IACpC;AAEA,aAAK,KAAK,KAAK,KAAK;AACpB,aAAK,KAAK,MAAM,OAAO,OAAO,GAAG;AAAA,UAChC,KAAK,OAAO;AAAA,UACZ,GAAG,OAAO;AAAA,UACV,GAAG,OAAO;AAAA,UACV,MAAM,KAAK,KAAK,SAAS;AAAA,QAC1B,CAAC;AACD,aAAK,KAAK,oBAAoB;AAC9B,aAAK,KAAK,WAAW,IAAI;AAAA,MAC1B,CAAC;AAGD,QAAE,QAAQ,EAAE,GAAG,aAAa,wBAAwB;AAEpD,0CAAoC;AACnC,qBAAa,iBAAiB;AAC9B,wBAAgB;AAChB,4BAAoB,WAAW,iBAAiB,GAAI;AAAA,MACrD;AAEA,iCAA2B;AAC1B,oBAAY,KAAK;AAAA,MAClB;AAEA,iCAA2B;AAC1B,oBAAY,KAAK;AAAA,MAClB;AAEA,wBAAkB,KAAK;AACtB,eAAO;AAAA,gBACM;AAAA;AAAA,MAEd;AAAA,IACD;AAAA,IACA,WAAW;AACV,aAAO,IAAI,QAAQ,aAAW;AAC7B,YAAI,YAAY;AAChB,eAAO,QACN;AAAA,UACC,YAAY;AAAA,UACZ,YAAY;AAAA,UACZ,YAAY;AAAA,UACZ,YAAY;AAAA,QACb,GACA,OACD;AAAA,MACD,CAAC;AAAA,IACF;AAAA,EACD;;;AC1XA,SAAO,QAAQ,oBAAoB;AACnC,SAAO,QAAQ,cAAc;AAE7B,SAAO,MAAM,UAAU,MAAM,gBAAgB,OAAO,MAAM,SAAS;AAAA,QAC9D,YAAY;AACf,aAAO;AAAA,IACR;AAAA,IAEA,iBAAiB;AAChB,YAAM,eAAe;AACrB,WAAK,aAAa,GAAG,WAAW,CAAC,KAAK,UAAU,CAAC;AAAA,IAClD;AAAA,IAEA,aAAa;AAAA,IACb;AAAA,IAEA,mBAAmB;AAClB,WAAK,WAAW;AAAA,IACjB;AAAA,IAEA,SAAS;AACR,WAAK,WAAW,EACd,KAAK,MAAM;AACX,aAAK,gBAAgB;AAAA,MACtB,CAAC;AACF,WAAK,aAAa,KAAK,aAAa,EAAE,OAAO,aAAa;AAAA,IAC3D;AAAA,IAEA,kBAAkB;AACjB,WAAK,SAAS,OAAO,IAAI,cAAc;AAEvC,WAAK,QAAQ,KAAK,YAAY,KAAK,2CAA2C;AAE9E,QAAE,KAAK,QAAQ,YAAY;AAC3B,WAAK,MAAM,EAAE,IAAI,KAAK,MAAM,EAAE,QAAQ,OAAO,MAAM,aAAa,QAC/D,OAAO,MAAM,aAAa,IAAI;AAE/B,QAAE,UAAU,OAAO,MAAM,aAAa,OACrC,OAAO,MAAM,aAAa,OAAO,EAAE,MAAM,KAAK,GAAG;AAElD,QAAE,QAAQ,MAAM,EAAE,MAAM,KAAK,GAAG;AAChC,UAAI,KAAK,OAAO,YAAY,KAAK,OAAO,SAAS,QAAQ;AACxD,aAAK,OAAO,SAAS,QACpB,YAAU,EAAE,QAAQ,MAAM,EAAE,UAAU,OAAO,WAAW,IAAI,EAAE,MAAM,KAAK,GAAG,CAC7E;AACA,YAAI,aAAa,KAAK,OAAO,SAAS,GAAG,SAAS,YAAY,QAAQ;AACtE,aAAK,IAAI,MAAM,YAAY,CAAC;AAAA,MAC7B;AAAA,IACD;AAAA,IAEA,aAAa;AACZ,UAAI,oBAAoB,KAAK,YAAY,KAAK,SAAS,qBAAqB;AAE5E,UAAI,SAAS,KAAK,OAAO,KAAK,QAAK,GAAE,cAAc,cAAc,GAAE,cAAc,aAAa,GAAG;AAChG,aAAK,OAAO;AAAA,MACb,WAAY,SAAS,KAAK,OAAO,KAAK,QAAK,GAAE,cAAc,UAAU,KACpE,SAAS,KAAK,OAAO,KAAK,QAAK,GAAE,cAAc,WAAW,GAAG;AAC7D,aAAK,OAAO;AAAA,MACb;AACA,aAAO,OAAO,KAAK;AAAA,QAClB,QAAQ;AAAA,QACR,MAAM;AAAA,UACL,SAAS,KAAK;AAAA,UACd,SAAS,SAAS,YAAY,IAAI;AAAA,UAClC,MAAM,KAAK;AAAA,QACZ;AAAA,MACD,CAAC,EAAE,KAAK,OAAK;AACZ,aAAK,SAAS,EAAE;AAAA,MAEjB,CAAC;AAAA,IACF;AAAA,QAGI,gBAAgB;AACnB,aAAO;AAAA,QACN;AAAA,QACA;AAAA,MACD;AAAA,IACD;AAAA,EAGD;;;ACpFA,6BAAoC;AAAA,IACnC,YAAY,EAAE,YAAY,SAAS,MAAM,YAAY;AACpD,UAAI,CAAC,SAAS;AACb,eAAO,MAAM,GAAG,kBAAkB,CAAC;AAAA,MACpC;AAEA,WAAK,aAAa;AAClB,WAAK,UAAU;AACf,WAAK,OAAO;AACZ,WAAK,WAAW;AAChB,WAAK,SAAS;AACd,WAAK,SAAS,KAAK,YAAY,KAAK,SAAS;AAE7C,aAAO,MAAM,aAAa,sBAAsB,MAAM;AACrD,aAAK,KAAK;AACV,aAAK,WAAW;AAChB,aAAK,aAAa;AAClB,aAAK,oBAAoB;AACzB,aAAK,eAAe;AACpB,aAAK,YAAY;AAAA,MAClB,CAAC;AAAA,IACF;AAAA,IAEA,OAAO;AACN,WAAK,SAAS,IAAI,OAAO,GAAG,OAAO;AAAA,QAClC,OAAO,GAAG,gBAAgB,CAAC,GAAG,KAAK,OAAO,CAAC,CAAC;AAAA,QAC5C,QAAQ;AAAA,UACP;AAAA,YACC,WAAW;AAAA,YACX,OAAO,GAAG,aAAa;AAAA,YACvB,WAAW;AAAA,UACZ;AAAA,UACA;AAAA,YACC,WAAW;AAAA,YACX,WAAW;AAAA,UACZ;AAAA,UACA;AAAA,YACC,WAAW;AAAA,YACX,WAAW;AAAA,YACX,QAAQ;AAAA,UACT;AAAA,QACD;AAAA,MACD,CAAC;AACD,WAAK,OAAO,WAAW,KAAK,QAAQ;AACpC,WAAK,OAAO,mBAAmB,GAAG,MAAM,GAAG,MAAM;AAChD,eAAO,WAAW;AAAA,UACjB,SAAS,GAAG,QAAQ;AAAA,UACpB,WAAW;AAAA,QACZ,CAAC;AAED,eAAO,KAAK;AAAA,UACX,QACC;AAAA,UACD,MAAM;AAAA,YACL,YAAY,KAAK,SAAS;AAAA,YAC1B,UAAU,KAAK,OAAO,WAAW;AAAA,UAClC;AAAA,UACA,UAAU,OAAK;AACd,iBAAK,WAAW,QAAQ,EAAE;AAC1B,iBAAK,WAAW,OAAO;AACvB,iBAAK,OAAO,KAAK;AAAA,UAClB;AAAA,QACD,CAAC;AAAA,MACF,CAAC;AAAA,IACF;AAAA,IAEA,UAAU;AACT,WAAK,aAAa;AAClB,WAAK,eAAe;AACpB,WAAK,oBAAoB;AAAA,IAC1B;AAAA,IAEA,cAAc;AACb,UAAI,CAAC,KAAK,SAAS,QAAQ;AAC1B,aAAK,cAAc;AAAA,MACpB;AAEA,WAAK,OAAO,KAAK;AAAA,IAClB;AAAA,IAEA,eAAe;AACd,YAAM,cAAc,KAAK,OAAO,UAAU,aAAa;AACvD,YAAM,UAAU,YAAY,SAAS;AACrC,UAAI,SAAS;AAEb,eAAS,aAAa,KAAK,QAAQ;AAClC,YAAI,QAAQ,KAAK,aAAa,SAAS;AAEvC,kBAAU;AAAA;AAAA;AAAA,uBAGU,MAAM;AAAA,mBACV,MAAM;AAAA,kBACP,MAAM;AAAA;AAAA;AAAA;AAAA,SAIf,OAAO,MAAM,KAAK,QAAQ,MAAM,IAAI,IAAI,iBAAiB;AAAA;AAAA;AAAA,SAGzD,GAAG,MAAM,KAAK;AAAA;AAAA;AAAA,4DAGqC,MAAM;AAAA,UACxD,OAAO,MAAM,KAAK,UAAU,IAAI;AAAA;AAAA;AAAA;AAAA;AAAA,MAKxC;AAEA,kBAAY,KAAK;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAMb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAQH;AAED,UAAI,SACH,QAAQ,uBAAuB,uBAAuB,EAAE,IACxD;AAAA,QACC,QAAQ;AAAA,QACR,WAAW;AAAA,QACX,UAAU,YAAU;AACnB,eAAK,OAAO,OACX,OAAO,UACP,GACA,KAAK,OAAO,OAAO,OAAO,UAAU,CAAC,EAAE,EACxC;AACA,eAAK,OAAO,UACX,UACA,KAAK,UAAU,KAAK,MAAM,CAC3B;AACA,eAAK,QAAQ;AAAA,QACd;AAAA,MACD,CACD;AAAA,IACD;AAAA,IAEA,iBAAiB;AAChB,UAAI,iBAAiB,KAAK,0BAA0B,EAAE,uBACrD,gBACD,EAAE;AACF,qBAAe,UAAU,MAAM,KAAK,qBAAqB;AAAA,IAC1D;AAAA,IAEA,sBAAsB;AACrB,UAAI,gBAAgB,KAAK,0BAA0B,EAAE,uBACpD,cACD;AAEA,eAAS,MAAM,GAAG,MAAM,cAAc,QAAQ,OAAO;AACpD,sBAAc,KAAK,GAAG,EAAE,UAAU,MACjC,KAAK,cACJ,cAAc,KAAK,GAAG,EAAE,aAAa,gBAAgB,CACtD;AAAA,MACF;AAAA,IACD;AAAA,IAEA,4BAA4B;AAC3B,aAAO,KAAK,OAAO,UAAU,aAAa,EAAE,SAAS;AAAA,IACtD;AAAA,IAEA,cAAc,WAAW;AACxB,WAAK,SAAS,KAAK,OAAO,OAAO,WAAS,UAAU,SAAS;AAC7D,WAAK,OAAO,UAAU,UAAU,KAAK,UAAU,KAAK,MAAM,CAAC;AAC3D,WAAK,QAAQ;AAAA,IACd;AAAA,IAEA,gBAAgB;AACf,YAAM,UAAU,KAAK,OAAO,UAAU,aAAa,EAAE,SAAS;AAC9D,UAAI,eAAe,QAAQ,uBAAuB,cAAc;AAChE,WAAK,SAAS,CAAC;AAEf,eAAS,MAAM,GAAG,MAAM,aAAa,QAAQ,OAAO;AACnD,aAAK,OAAO,KACX,aAAa,KAAK,GAAG,EAAE,aAAa,gBAAgB,CACrD;AAAA,MACD;AAEA,WAAK,OAAO,UAAU,UAAU,KAAK,UAAU,KAAK,MAAM,CAAC;AAAA,IAC5D;AAAA,IAEA,uBAAuB;AACtB,UAAI,SAAS,IAAI,OAAO,GAAG,OAAO;AAAA,QACjC,OAAO,GAAG,cAAc,CAAC,GAAG,KAAK,OAAO,CAAC,CAAC;AAAA,QAC1C,QAAQ;AAAA,UACP;AAAA,YACC,OAAO,GAAG,eAAe;AAAA,YACzB,WAAW;AAAA,YACX,WAAW;AAAA,YACX,SAAS,KAAK,uBAAuB;AAAA,YACrC,SAAS;AAAA,UACV;AAAA,QACD;AAAA,MACD,CAAC;AACD,aAAO,mBAAmB,GAAG,MAAM,GAAG,MAAM;AAC3C,aAAK,SAAS,OAAO,WAAW,EAAE,UAAU,CAAC;AAC7C,aAAK,OAAO,UAAU,UAAU,KAAK,UAAU,KAAK,MAAM,CAAC;AAC3D,aAAK,QAAQ;AACb,eAAO,KAAK;AAAA,MACb,CAAC;AACD,aAAO,KAAK;AAAA,IACb;AAAA,IAEA,aAAa;AACZ,WAAK,SAAS,KAAK,SAAS;AAC5B,WAAK,OAAO,OAAO,OAAK,EAAE,SAAS;AAAA,IACpC;AAAA,IAEA,aAAa,YAAY;AACxB,aACC,OAAO,KAAK,aAAa,KAAK,SAAS,UAAU,KACjD,OAAO,MAAM,cAAc,UAAU;AAAA,IAEvC;AAAA,IAEA,yBAAyB;AACxB,YAAM,gBAAgB;AAAA,QACrB;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA,KAAK,KAAK,eAAe;AAAA,MAC1B;AAEA,YAAM,oBAAoB;AAAA,QACzB;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA,GAAG,OAAO,MAAM;AAAA,MACjB;AAEA,aAAO,OAAO,MAAM,WAClB,OAAO,KAAK,WAAW,wBAAwB,CAAC,EAChD,OACA,WACC,CAAC,cAAc,SAAS,MAAM,SAAS,KACvC,CAAC,kBAAkB,SAAS,MAAM,SAAS,CAC7C,EACC,IAAI,WAAS;AACb,eAAO;AAAA,UACN,OAAO,GAAG,MAAM,KAAK;AAAA,UACrB,OAAO,MAAM;AAAA,UACb,SAAS,KAAK,OAAO,SAAS,MAAM,SAAS;AAAA,QAC9C;AAAA,MACD,CAAC;AAAA,IACH;AAAA,EACD;;;ACrQA,SAAO,QAAQ,cAAc;AAE7B,SAAO,MAAM,aAAa,MAAM,mBAAmB,OAAO,MAAM,SAAS;AAAA,WACjE,iBAAiB;AACvB,YAAM,QAAQ,OAAO,UAAU;AAC/B,UAAI,MAAM,WAAW,GAAG;AACvB,cAAM,UAAU,MAAM;AACtB,cAAM,gBAAgB,OAAO,kBAAkB,OAAO,EAAE,aAAa,CAAC;AACtE,YAAI,CAAC,cAAc,mBAAmB;AACrC,iBAAO,SAAS;AAAA,YACf,OAAO,GAAG,OAAO;AAAA,YACjB,WAAW;AAAA,YACX,SAAS,GAAG,qCAAqC;AAAA,UAClD,CAAC;AACD,iBAAO,UAAU,QAAQ,SAAS,MAAM;AACxC,iBAAO;AAAA,QACR;AACA,cAAM,KAAK,cAAc,iBAAiB;AAC1C,eAAO,UAAU,KAAK;AACtB,eAAO;AAAA,MACR;AACA,aAAO;AAAA,IACR;AAAA,QAEI,YAAY;AACf,aAAO;AAAA,IACR;AAAA,IAEA,iBAAiB;AAChB,aAAO,MAAM,eAAe,EAC1B,KAAK,MAAM;AACX,aAAK,aAAa,OAAO,UAAU,EAAE;AACrC,aAAK,aAAa,GAAG,KAAK,UAAU;AACpC,aAAK,YAAY,KAAK,cAAc;AACpC,aAAK,cAAc;AAEnB,aAAK,WAAW,KAAK;AAAA,UACpB,OAAO,GAAG,cAAc;AAAA,UACxB,QAAQ,MAAM;AACb,iBAAK,0BAA0B;AAAA,UAChC;AAAA,QACD,CAAC;AACD,eAAO,KAAK,UAAU;AAAA,MACvB,CAAC;AAAA,IACH;AAAA,IAEA,oBAAoB;AAAA,IAEpB;AAAA,IAEA,qBAAqB;AACpB,WAAK,QAAQ,OAAO,KAAK,KAAK,SAAS,CAAC;AAAA,IACzC;AAAA,IAEA,YAAY;AACX,aAAO,OAAO,GAAG,QAAQ,gBAAgB,KAAK,UAAU,EACtD,KAAK,WAAS;AACd,aAAK,QAAQ;AACb,aAAK,MAAM,gBAAgB,KAAK,MAAM,KAAK,MAAM,WAAW,IAAI;AAChE,aAAK,MAAM,SAAS,KAAK,MAAM,KAAK,MAAM,UAAU,IAAI;AACxD,aAAK,UAAU,KAAK,MAAM;AAAA,MAC3B,CAAC;AAAA,IACH;AAAA,IAEA,aAAa;AACZ,WAAK,eAAe;AACpB,WAAK,iBAAiB;AACtB,WAAK,mBAAmB;AACxB,YAAM,WAAW;AAAA,IAClB;AAAA,IAEA,aAAa;AACZ,UAAI,KAAK,MAAM,QAAQ,SAAS,GAAG;AAClC,aAAK,KAAK,UAAU,SAAS,YAAY;AAAA,MAC1C;AACA,WAAK,uBAAuB;AAC5B,WAAK,WAAW;AAAA,IACjB;AAAA,IAEA,aAAa;AACZ,YAAM,WAAW;AACjB,WAAK,WAAW,KAAK,UAAU,WAAW;AAAA,IAC3C;AAAA,IAEA,gBAAgB;AACf,aAAO,MAAM,cAAc,KAAK,KAAK,SAAS,aAAa,KAAK,SAAS;AACzE,WAAK,wBAAwB;AAAA,QAC5B,mBAAmB,KAAK;AAAA,MACzB,CAAC;AAAA,IACF;AAAA,IAEA,cAAc;AAAA,IAEd;AAAA,IAEA,mBAAmB;AAClB,UAAI,KAAK,UAAU,KAAK,MAAM,aAAa,MAAM,KAAK,UAAU,KAAK,YAAY,IAAI,CAAC,GAAG;AACxF,aAAK,KAAK,cAAc,GAAG,WAAW,GAAG,QAAQ;AAAA,MAClD,OAAO;AACN,aAAK,KAAK,gBAAgB;AAAA,MAC3B;AAAA,IACD;AAAA,IAEA,4BAA4B;AAC3B,YAAM,UAAU,KAAK,YAAY,IAAI;AAErC,aAAO,GAAG,UAAU,gBAAgB,KAAK,YAAY,WAAW,OAAO,EAAE,KAAK,OAAK;AAClF,YAAI,EAAE,KAAK;AACV,iBAAO,WAAW;AAAA,YACjB,WAAW;AAAA,YACX,SAAS,GAAG,mCAAmC;AAAA,UAChD,CAAC;AACD;AAAA,QACD;AACA,eAAO,WAAW;AAAA,UACjB,WAAW;AAAA,UACX,SAAS,GAAG,eAAe;AAAA,QAC5B,CAAC;AAED,aAAK,MAAM,gBAAgB;AAC3B,aAAK,iBAAiB;AAAA,MACvB,CAAC;AAAA,IACF;AAAA,IAEA,aAAa;AACZ,WAAK,OAAO,KAAK,CAAC,KAAK,MAAM,YAAY,KAAK,MAAM,iBAAiB,CAAC;AACtE,aAAO,MAAM,WAAW;AAAA,IACzB;AAAA,IAEA,SAAS;AACR,YAAM,aAAa,KAAK;AACxB,UAAI,KAAK,UAAU,eAAe,KAAK,OAAO,YAAY;AACzD,aAAK,OAAO,OAAO,KAAK,IAAI;AAC5B;AAAA,MACD;AAEA,WAAK,SAAS,IAAI,OAAO,MAAM,YAAY;AAAA,QAC1C,SAAS,KAAK;AAAA,QACd,OAAO,KAAK;AAAA,QACZ;AAAA,QACA,OAAO,KAAK;AAAA,QACZ,WAAW,KAAK;AAAA,QAChB,SAAS,KAAK;AAAA,QACd,UAAU;AAAA,QACV,eAAe,KAAK;AAAA,MACrB,CAAC;AAAA,IACF;AAAA,IAEA,gBAAgB;AACf,UAAI,OAAO,OAAO,SAAS,KAAK,OAAO;AAEvC,UAAI,gBAAgB,mBAAI,OAAO;AAC/B,UAAI,MAAM,OAAO,MAAM,YAAY,KAAK,OAAO;AAC/C,aAAO,gBAAgB;AACvB,UAAI,cAAc;AAClB,UAAI,cAAc;AAElB,UAAI,KAAK,KAAK,aAAa;AAC1B,sBAAc,OAAO,KAAK,UAAU,KAAK,SAAS,KAAK,KAAK,WAAW;AAAA,MACxE;AAEA,WAAK,KAAK,OAAO,QAAQ,CAAC,OAAO;AAChC,cAAM,iBACL,QAAQ,CAAC,QAAQ,QAAQ,cAAc,aAAa,GAAG,GAAG,SAAS,KAChE,CAAC,GAAG;AAER,YAAI,kBAAkB,CAAC,aAAa;AAEnC,wBAAc;AAAA,QACf;AAAA,MACD,CAAC;AAGD,UAAI,YAAY,KAAK,OAAO,OAAO,CAAC,OAAO,GAAG,QAAQ,CAAC,IAAI,GAAG,UAAU;AAExE,UAAI,UAAU,KAAK,QAAM,OAAO,MAAM,aAAa,SAAS,GAAG,SAAS,CAAC,KAAK,UAAU,SAAS,GAAG;AACnG,sBAAc;AAAA,MACf;AAEA,UAAI,CAAC,aAAa;AACjB,sBAAc,OAAO,KAAK,UAAU,KAAK,SAAS,MAAM;AAAA,MACzD;AAEA,aAAO;AAAA,QACN;AAAA,QACA;AAAA,MACD;AAAA,IACD;AAAA,IAEA,oBAAoB;AACnB,aAAO;AAAA,QACN,OAAO,GAAG,mBAAmB,MAAM,4BAA4B;AAAA,QAC/D,QAAQ,MAAM,KAAK,qBAAqB;AAAA,QACxC,UAAU;AAAA,MACX;AAAA,IACD;AAAA,IAEA,uBAAuB;AACtB,aAAO,MAAM,aAAa,KAAK,SAAS,MAAM;AAC7C,YAAI,eAAe;AAAA,UAClB,YAAY;AAAA,UACZ,SAAS,KAAK;AAAA,UACd,UAAU,KAAK;AAAA,UACf,MAAM,OAAO,SAAS,KAAK,OAAO;AAAA,QACnC,CAAC;AAAA,MACF,CAAC;AAAA,IACF;AAAA,QAEI,gBAAgB;AACnB,aAAO;AAAA,IACR;AAAA,EACD;AAGA,SAAO,MAAM,WAAW,cAAc,SAAU,SAAS;AACxD,QAAI,UAAU,CAAC;AAEf,WAAO,kBAAkB,EACvB,KAAK,CAAC,kBAAkB;AACxB,UAAI,eAAe;AAClB,sBAAc,QAAQ,WAAS;AAC9B,cAAI,QAAQ,QAAQ,OAAO,OAAO,KAAK,MAAM,iBAAiB,iBAAiB,MAAM;AACrF,kBAAQ,KAAK,EAAE,MAAM,MAAM,MAAM,MAAa,CAAC;AAAA,QAChD,CAAC;AAAA,MACF;AAEA,aAAO;AAAA,IACR,CAAC;AAEF,iCAA6B;AAC5B,aAAO,OAAO,KAAK,mEAAmE,EAAE,QAAQ,CAAC,EAC/F,KAAK,OAAK,EAAE,OAAO;AAAA,IACtB;AAAA,EACD;AAGA,SAAO,MAAM,WAAW,qBAAqB,SAAU,SAAS,eAAe;AAC9E,QAAI,SAAS;AAEb,WAAO,MAAM,WAAW,YAAY,OAAO,EAAE,KAAK,aAAW;AAC5D,eAAS,kBAAkB,SAAS,aAAa;AACjD,aAAO,KAAK;AAAA,IACb,CAAC;AAED,+BAA2B,YAAY,YAAY,SAAS;AAC3D,aAAO,OAAO,KAAK;AAAA,QAClB,QAAQ;AAAA,QACR,MAAM;AAAA,UACL;AAAA,UACA;AAAA,UACA;AAAA,UACA;AAAA,QACD;AAAA,QACA,UAAU,SAAU,GAAG;AACtB,cAAI,KAAK,EAAE;AACX,cAAI,GAAG,SAAS;AACf,mBAAO,QAAQ,uBAAuB;AACtC,mBAAO,eAAe,GAAG,qBAAqB,GAAG;AAAA,UAClD;AACA,iBAAO,UAAU,QAAQ,SAAS,UAAU,GAAG,iBAAiB;AAAA,QACjE;AAAA,MACD,CAAC;AAAA,IACF;AAEA,+BAA2B,SAAS,gBAAe;AAGlD,UAAI;AAAQ,eAAO;AAEnB,YAAM,gBAAgB,sBAAsB,QAAQ,IAAI,YAAU,OAAO,IAAI,GAAG,cAAa;AAC7F,YAAM,gBAAgB,OAAO,SAAS,OAAO,EAAE,OAAO,OAAO,QAAM;AAClE,eAAQ,GAAG,cAAc,YAAc,GAAG,cAAc;AAAA,MACzD,CAAC;AACD,YAAM,UAAU,cAAc,SAAS;AACvC,YAAM,uBAAuB,UAAU,GAAG,MAAM,IAAI,GAAG,gBAAgB;AAEvE,UAAI,iBAAiB,MAAM;AAC1B,YAAI,SAAS;AACZ,gBAAM,SAAS,OAAO,WAAW;AACjC,cAAI,CAAC,OAAO,mBAAmB,OAAO,mBAAmB,oBAAoB;AAC5E,8BAAkB,OAAO,YAAY,OAAO,YAAY,OAAO,OAAO,EAAE,KACvE,MAAM,OAAO,KAAK,GAClB,CAAC,QAAQ,OAAO,SAAS,GAAG,CAC7B;AAAA,UACD,OAAO;AACN,mBAAO,UAAU,QAAQ,KAAK,YAAU,OAAO,QAAQ,OAAO,eAAe,EAAE,KAAK;AAAA,UACrF;AAAA,QACD,OAAO;AACN,iBAAO,UAAU,QAAQ,kBAAkB,EAAC,YAAY,QAAO,CAAC;AAAA,QACjE;AAAA,MACD;AAEA,eAAS,IAAI,OAAO,GAAG,OAAO;AAAA,QAC7B,OAAO,GAAG,kBAAkB;AAAA,QAC5B,QAAQ;AAAA,QACR;AAAA,QACA;AAAA,MACD,CAAC;AACD,aAAO;AAAA,IACR;AAEA,mCAA+B,gBAAgB,iBAAgB,OAAO;AACrE,qBAAe,KAAK,kBAAkB;AACtC,YAAM,gBAAgB,OAAO,SAAS,OAAO,EAAE,OAAO,OAAO,QAAM;AAClE,eAAO,GAAG,cAAc,YAAY,GAAG,cAAc;AAAA,MACtD,CAAC;AAED,UAAI,SAAS;AAAA,QACZ;AAAA,UACC,WAAW;AAAA,UACX,WAAW;AAAA,UACX,OAAO,GAAG,qBAAqB;AAAA,UAC/B,MAAM;AAAA,UACN,YAAY,SAAS;AAAA,UACrB,sBAAsB,SAAS;AAAA,UAC/B,SAAS;AAAA,UACT,SAAS,eAAe;AAAA,QACzB;AAAA,QACA;AAAA,UACC,WAAW;AAAA,UACX,WAAW;AAAA,UACX,YAAY,UAAU;AAAA,QACvB;AAAA,QACA;AAAA,UACC,WAAW;AAAA,UACX,WAAW;AAAA,UACX,OAAO,GAAG,mBAAmB;AAAA,UAC7B,sBAAsB;AAAA,UACtB,aAAa,CAAC,QAAQ,MAAM,EAAE,SAAS,OAAO,IAC7C,GAAG,mCAAmC,IAAI;AAAA,QAC5C;AAAA,MACD;AAEA,UAAI,YAAY,QAAQ;AACvB,eAAO,KAAK;AAAA,UACX,WAAW;AAAA,UACX,WAAW;AAAA,UACX,OAAO,GAAG,SAAS;AAAA,UACnB,SAAS;AAAA,QACV,CAAC;AAAA,MACF;AAEA,UAAI,cAAc,SAAS,GAAG;AAC7B,eAAO,KAAK;AAAA,UACX,WAAW;AAAA,UACX,WAAW;AAAA,UACX,OAAO,GAAG,kBAAkB;AAAA,UAC5B,SAAS,cAAc,IAAI,QAAO,GAAE,OAAO,GAAG,OAAO,OAAO,GAAG,UAAU,EAAE;AAAA,UAC3E,SAAS,cAAc;AAAA,UACvB,sBAAsB;AAAA,QACvB,CAAC;AAAA,MACF,OAAO;AACN,iBAAS,CAAC;AAAA,UACT,WAAW;AAAA,UACX,SAAS;AAAA;AAAA;AAAA,QAGL,GAAG,qHAAqH;AAAA;AAAA;AAAA;AAAA,QAI7H,CAAC;AAAA,MACF;AAEA,aAAO;AAAA,IACR;AAAA,EACD;;;AC5WA,SAAO,QAAQ,cAAc;AAE7B,SAAO,MAAM,YAAY,MAAM,kBAAkB,OAAO,MAAM,SAAS;AAAA,WAC/D,iBAAiB;AACvB,YAAM,QAAQ,OAAO,UAAU;AAC/B,UAAI,CAAC,MAAM,MAAM,OAAO,KAAK,eAAe,QAAQ;AACnD,YAAI;AACJ,YAAI,OAAO,KAAK,eAAe,GAAG,YAAY,gBAAgB;AAC7D,0BAAgB;AAAA,QACjB,OAAO;AACN,0BAAgB,OAAO,KAAK,eAAe,GAAG;AAAA,QAC/C;AACA,eAAO,UAAU,QAAQ,iBAAiB,SAAS,aAAa;AAChE,eAAO;AAAA,MACR,WAAW,CAAC,MAAM,MAAO,MAAM,OAAO,kBAAkB,CAAC,SAAS,MAAM,EAAE,GAAI;AAC7E,eAAO,MAAM,GAAG,4FAA4F,CAAC;AAAA,MAC9G;AACA,aAAO;AAEP,wBAAkB,eAAe;AAChC,eAAO,OAAO,KAAK,eAAe,KAAK,OAAK,EAAE,kBAAkB,aAAa;AAAA,MAC9E;AAAA,IACD;AAAA,QAEI,YAAY;AACf,aAAO;AAAA,IACR;AAAA,IAEA,OAAO;AACN,YAAM,KAAK;AAEX,WAAK,wBAAwB;AAAA,QAC5B,oBAAoB,KAAK;AAAA,MAC1B,CAAC;AAAA,IACF;AAAA,IAEA,iBAAiB;AAChB,YAAM,eAAe;AAGrB,WAAK,UAAU,KAAK,mBAAmB,WAAW;AAClD,WAAK,aAAa,KAAK,mBAAmB,cAAc;AAExD,WAAK,gBAAgB,OAAO,UAAU,EAAE;AACxC,WAAK,aAAa,KAAK;AACvB,WAAK,UAAU,KAAK,kBAAkB;AAAA,IACvC;AAAA,IAEA,gBAAgB;AAEf,WAAK,UAAU,CAAC;AAChB,WAAK,QAAQ,KAAK;AAAA,QACjB,MAAM;AAAA,QACN,IAAI;AAAA,UACH,OAAO,GAAG,SAAS;AAAA,UACnB,WAAW;AAAA,QACZ;AAAA,MACD,CAAC;AACD,WAAK,QAAQ,KAAK;AAAA,QACjB,MAAM;AAAA,QACN,IAAI;AAAA,UACH,OAAO,KAAK,iBAAiB,GAAG,IAAI,IAAI,GAAG,MAAM;AAAA,UACjD,WAAW,KAAK,iBAAiB,eAAe;AAAA,QACjD;AAAA,MACD,CAAC;AAAA,IACF;AAAA,IAEA,eAAe,KAAK;AACnB,YAAM,OACL,QAAQ,IAAI,IAAI,KAAK,KAAK,MAAM,IAAI,SAAS,IAAI,EAAE,SAAS,OAAO,QAAQ,IAAI,IAC5E,KACA;AACJ,aAAO;AAAA,IACR;AAAA,QAEI,iBAAiB;AACpB,YAAM,IAAI,KAAK,YAAY,IAAI,EAC7B,KAAK,YAAU,OAAO,OAAO,kBAAkB;AACjD,aAAO,KAAK,EAAE,OAAO;AAAA,IACtB;AAAA,IAEA,gBAAgB;AACf,WAAK,QAAQ,KAAK,gBAAgB,EAAE,OAAO;AAC3C,WAAK,QAAQ,QAAQ,KAAK,gBAAgB,CAAC;AAAA,IAC5C;AAAA,IAEA,SAAS;AACR,WAAK,cAAc;AACnB,WAAK,cAAc;AACnB,WAAK,YAAY;AACjB,WAAK,eAAe;AACpB,WAAK,aAAa;AAAA,IACnB;AAAA,IAEA,cAAc,OAAO;AACpB,YAAM,aAAa,MAAM,iBACxB,iDAAiD,GAAG,iBAAiB,eAAe;AAErF,UAAI,OAAO;AACX,UAAI,MAAM,qBAAqB,MAAM,sBAAsB,KAAK,SAAS;AACxE,eAAO;AAAA,YACE,OAAO,MAAM,cAAc,MAAM,mBAAmB,MAAM,cAAc;AAAA,aACvE,GAAG,mBAAmB,CAAC,MAAM,iBAAiB,CAAC;AAAA;AAAA;AAAA,MAG1D;AAEA,YAAM,qBAAqB,aAAa,MAAM,oBAAoB,IAAI;AACtE,YAAM,SACL,MAAM,UAAU,WAAW,6CAA6C,GAAG,MAAM,MAAM,eACtF,MAAM,UAAU,YAAY,kDAAkD,GAAG,MAAM,MAAM,eAC5F;AAEH,aAAO;AAAA;AAAA,MAEH;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA;AAAA;AAAA,IAGL;AAAA,IAEA,oBAAoB;AACnB,UAAI,gBAAgB,KAAK;AACzB,UAAI,kBAAkB;AAAA,QACrB,CAAC,iBAAiB,sBAAsB,KAAK,iBAAiB,IAAI;AAAA,QAClE,CAAC,iBAAiB,wBAAwB,KAAK,SAAS,IAAI;AAAA,MAC7D;AACA,UAAI,UAAU,CAAC;AACf,UAAI,kBAAkB,QAAQ;AAC7B,kBAAU,gBAAgB,OAAO;AAAA,UAChC,CAAC,iBAAiB,oBAAoB,KAAK,QAAQ,IAAI;AAAA,UACvD,CAAC,iBAAiB,gBAAgB,UAAU,cAAc,IAAI;AAAA,QAC/D,CAAC;AAAA,MACF,WAAW,QAAQ,CAAC,QAAQ,OAAO,GAAG,aAAa,GAAG;AACrD,kBAAU,gBAAgB,OAAO;AAAA,UAChC,CAAC,iBAAiB,gBAAgB,KAAK,eAAe,IAAI;AAAA,UAC1D,CAAC,iBAAiB,iBAAiB,MAAM,OAAO,KAAK,cAAc,IAAI;AAAA,QACxE,CAAC;AAAA,MACF,OAAO;AACN,YAAI,KAAK;AACT,YAAI,iBAAiB,gBAAgB;AACpC,eAAK;AACL,0BAAgB,OAAO,KAAK;AAAA,QAC7B;AAEA,kBAAU,gBAAgB,OAAO;AAAA,UAChC,CAAC,iBAAiB,oBAAoB,KAAK,YAAY,IAAI;AAAA,UAC3D,CAAC,iBAAiB,UAAU,KAAK,QAAQ,IAAI;AAAA,UAC7C,CAAC,iBAAiB,iBAAiB,IAAI,eAAe,IAAI;AAAA,UAC1D,CAAC,iBAAiB,gBAAgB,UAAU,cAAc,IAAI;AAAA,QAC/D,CAAC;AAAA,MACF;AAEA,aAAO;AAAA,IACR;AAAA,IAEA,wBAAwB;AACvB,UAAI,gBAAgB,KAAK;AACzB,UAAI;AACJ,UAAI,QAAQ,CAAC,QAAQ,OAAO,GAAG,aAAa,GAAG;AAC9C,eAAO,GAAG,eAAe,CAAC,aAAa,CAAC;AAAA,MACzC,WAAW,CAAC,iBAAiB,CAAC,OAAO,KAAK,eAAe,QAAQ;AAEhE,eAAO;AAAA,UACN,SAAS;AAAA,UACT,KAAK,GAAG,kBAAkB;AAAA,UAC1B,OAAO,GAAG,mBAAmB;AAAA,QAC9B;AAAA,MACD,OAAO;AAEN,eAAO;AAAA,UACN,SAAS;AAAA,UACT,KAAK,GAAG,WAAW;AAAA,UACnB,OAAO,GAAG,eAAe;AAAA,QAC1B;AAAA,MACD;AAEA,YAAM,OAAO,OAAO,MAAM,WAAW,KAAK,OAAO,IAChD,MAAM,KAAK;AAAA;AAAA;AAAA,OAGP,KAAK;AAAA;AAAA;AAAA,OAIT,MAAO,GAAG,4BAA4B;AAEvC,aAAO;AAAA;AAAA,MAEH;AAAA;AAAA;AAAA,IAGL;AAAA,IAEA,eAAe;AACd,UAAI,CAAC,KAAK,iBAAiB,CAAC,OAAO,KAAK,eAAe,QAAQ;AAC9D,eAAO,gBAAgB;AAAA,UACtB,YAAY,OAAO,QAAQ;AAAA,QAC5B;AACA,eAAO,QAAQ,eAAe;AAAA,MAC/B,OAAO;AACN,YAAI,OAAO,MAAM,sBAAsB;AAAA,MACxC;AAAA,IACD;AAAA,EACD;;;AClNA,SAAO,QAAQ,cAAc;AAE7B,SAAO,MAAM,WAAW,MAAM,iBAAiB,OAAO,MAAM,SAAS;AAAA,WAC7D,iBAAiB;AACvB,YAAM,QAAQ,OAAO,UAAU;AAC/B,UAAI,MAAM,WAAW,GAAG;AACvB,cAAM,qBAAqB,OAAO,kBAAkB,QAAQ,MAAM;AAClE,eAAO,UACN,QACA,QACA,mBAAmB,eAAe,OAAO,KAAK,WAC/C;AACA,eAAO;AAAA,MACR;AACA,aAAO,kCAAkC;AAAA,IAC1C;AAAA,QAEI,YAAY;AACf,aAAO;AAAA,IACR;AAAA,IAEA,OAAO;AACN,UAAI,CAAC,kCAAkC,GAAG;AACzC,cAAM,KAAK;AAAA,MACZ;AAAA,IACD;AAAA,IAEA,aAAa;AACZ,WAAK,cAAc;AACnB,WAAK,aAAa;AAClB,WAAK,MAAM,KAAK,8BAA8B,EAAE,SAAS,WAAW;AACpE,WAAK,wBAAwB;AAC7B,WAAK,KAAK,WAAW,GAAG,kBAAkB,GAAG,MAAM;AAClD,eAAO,MAAM,SAAS,YAAY,CAAC,OAAO,MAAM,SAAS;AACzD,aAAK,QAAQ;AAAA,MACd,CAAC;AAAA,IACF;AAAA,IAEA,uBAAuB;AACtB,WAAK,aAAa,EAAE;AAAA,8BACQ,KAAK,qBAAqB;AAAA;AAAA,MAElD,KAAK,sBAAsB;AAAA;AAAA,SAExB,EAAE,KAAK;AACd,WAAK,aAAa,OAAO,KAAK,UAAU;AAAA,IACzC;AAAA,IAEA,WAAW;AACV,UAAI,OAAO,MAAM,SAAS;AAC1B,UAAI,OAAO,MAAM,SAAS,WAAW;AACpC,eAAO,OAAO,MAAM;AAAA,UACnB,UAAU,mBAAmB,KAAK,WAAW,KAAK;AAAA,QACnD,CAAC;AAAA,MACF;AACA,aAAO;AAAA,IACR;AAAA,IAEA,kBAAkB;AACjB,YAAM,QAAQ,OAAO,UAAU;AAC/B,YAAM,OAAO,EAAE;AACf,YAAM,cAAc,MAAM,MAAM,SAAS;AACzC,UAAI,gBAAgB;AAAQ;AAE5B,aAAO,YAAY,IAAI;AAAA,QACtB,MAAM;AAAA,QACN,OAAO,GAAG,MAAM;AAAA,QAChB,OAAO;AAAA,MACR,CAAC;AAAA,IACF;AAAA,IAEA,iBAAiB;AAChB,aAAO,MAAM,eAAe,EAAE,KAAK,MAAM;AACxC,aAAK,aAAa,GAAG,cAAc;AAEnC,cAAM,QAAQ,OAAO,UAAU;AAC/B,aAAK,iBAAiB,MAAM,MAAM,CAAC,EAAE,KAAK,GAAG;AAC7C,aAAK,UAAU,CAAC,CAAC,QAAQ,UAAU,KAAK,KAAK,gBAAgB,IAAI,CAAC;AAClE,aAAK,WAAW,KAAK,mBAAmB,YAAY;AAEpD,aAAK,aAAa,KAAK,WAAW,OAAO,KAAK,gBAAgB,CAAC;AAAA,MAChE,CAAC;AAAA,IACF;AAAA,IAEA,kBAAkB;AACjB,YAAM,QAAQ;AAAA,QACb;AAAA,UACC,OAAO,GAAG,MAAM;AAAA,UAChB,QAAQ,MAAM;AACb,mBAAO,UAAU,QAAQ,QAAQ,MAAM;AAAA,UACxC;AAAA,QACD;AAAA,QACA;AAAA,UACC,OAAO,GAAG,YAAY;AAAA,UACtB,QAAQ,MAAM;AACb,mBAAO,OACN,GAAG,MAAM,GACT,YAAU;AACT,kBAAI,OAAO,MAAM,QAAQ,GAAG,IAAI,IAAI;AACnC,uBAAO,MACN,GACC,4CACD,CACD;AAAA,cACD;AACA,oBAAM,OAAO;AAAA,gBACZ,WAAW,OAAO;AAAA,gBAClB,QAAQ,KAAK;AAAA,cACd;AACA,qBAAO,KAAK;AAAA,gBACX,QACC;AAAA,gBACD,MAAM;AAAA,cACP,CAAC;AAAA,YACF,GACA,GAAG,mBAAmB,GACtB,GAAG,QAAQ,CACZ;AAAA,UACD;AAAA,QACD;AAAA,QACA;AAAA,UACC,OAAO,GAAG,YAAY;AAAA,UACtB,QAAQ,MAAM;AACb,gBAAI,OAAO,GAAG,aAAa;AAAA,cAC1B,QAAQ,KAAK;AAAA,cACb,cAAc;AAAA,gBACb,oBAAoB,CAAC,MAAM;AAAA,cAC5B;AAAA,cACA,YAAY,UAAQ;AACnB,uBAAO,WAAW,GAAG,oBAAoB,CAAC;AAC1C,uBACE,KACA,mCACA;AAAA,kBACC,MAAM,KAAK;AAAA,gBACZ,CACD,EACC,KAAK,OAAK;AACV,sBAAI,EAAE,SAAS;AACd,2BAAO,WACN,GAAG,sBAAsB;AAAA,sBACxB,EAAE;AAAA,oBACH,CAAC,CACF;AAAA,kBACD;AAAA,gBACD,CAAC;AAAA,cACH;AAAA,YACD,CAAC;AAAA,UACF;AAAA,QACD;AAAA,MACD;AAEA,aAAO;AAAA,IACR;AAAA,IAEA,0BAA0B;AACzB,WAAK,cAAc,KAAK,KACtB,WAAW,GAAG,KAAK,GAAG,MAAM;AAC5B,eAAO,aAAa,IACnB,KAAK,kBAAkB,GACvB,KAAK,cACN;AACA,aAAK,QAAQ,QAAQ,eAAe,EAAE,SAAS,KAAK;AAAA,MACrD,CAAC,EACA,KAAK;AAEP,WAAK,aAAa,KAAK,KACrB,WAAW,GAAG,OAAO,GAAG,MACxB,OAAO,aAAa,MAAM,KAAK,cAAc,CAC9C,EACC,KAAK;AAEP,WAAK,KAAK,sBAAsB,GAAG,eAAe,GAAG,MAAM;AAC1D,YAAI,WAAW,KAAK,kBAAkB,IAAI;AAC1C,YAAI,SAAS,QAAQ;AACpB,wBAAc,8CAA8C;AAAA,YAC3D,OAAO,KAAK,UAAU,QAAQ;AAAA,UAC/B,CAAC;AAAA,QACF;AAAA,MACD,CAAC;AAAA,IACF;AAAA,IAEA,aAAa;AACZ,WAAK,SAAS,KAAK,KAAK,OACtB,OACA,QAAM,OAAO,MAAM,cAAc,GAAG,SAAS,KAAK,CAAC,GAAG,MACvD,EACC,IAAI,QAAM,GAAG,SAAS,EACtB,OAAO,CAAC,QAAQ,YAAY,UAAU,CAAC;AAAA,IAC1C;AAAA,IAEA,aAAa,MAAM;AAClB,YAAM,aAAa,IAAI;AAEvB,WAAK,OAAO,KAAK,KAAK,IAAI,OAAK,KAAK,cAAc,CAAC,CAAC;AAGpD,YAAM,EAAE,YAAY,KAAK;AACzB,UAAI,YAAY,aAAa;AAC5B,aAAK,KAAK,KAAK,CAAC,GAAG,MAAM;AACxB,cAAI,EAAE,aAAa,CAAC,EAAE,WAAW;AAChC,mBAAO;AAAA,UACR;AACA,cAAI,CAAC,EAAE,aAAa,EAAE,WAAW;AAChC,mBAAO;AAAA,UACR;AACA,iBAAO;AAAA,QACR,CAAC;AAAA,MACF;AAAA,IACD;AAAA,IAEA,cAAc,GAAG;AAChB,UAAI,aAAa;AACjB,UAAI,OAAO;AACX,UAAI,EAAE,WAAW;AAChB,qBAAa;AACb,eAAO;AAAA,MACR,WAAW,OAAO,MAAM,cAAc,EAAE,SAAS,GAAG;AACnD,qBAAa;AACb,eAAO;AAAA,MACR,OAAO;AACN,qBAAa;AACb,eAAO;AAAA,MACR;AAEA,UAAI,QAAQ,EAAE,aAAa,EAAE;AAC7B,cAAQ,MAAM,MAAM,GAAG,EAAE;AACzB,QAAE,SAAS;AACX,QAAE,aAAa;AACf,QAAE,QAAQ;AAEV,QAAE,eAAe;AAAA,KACd,OAAO,MAAM,KAAK,UAAU;AAAA,WACtB;AAAA,KACN,EAAE,aAAa,kDAAkD;AAAA;AAEpE,aAAO;AAAA,IACR;AAAA,IAEA,gBAAgB;AACf,YAAM,cAAc;AACpB,aAAO,MAAM,cAAc,KAC1B,QACA,aACA,OAAO,MAAM,SAAS,SACvB;AACA,WAAK,wBAAwB;AAAA,QAC5B,aAAa,KAAK;AAAA,MACnB,CAAC;AAAA,IACF;AAAA,IAEA,SAAS;AACR,WAAK,QAAQ,MAAM,EAAE,YAAY,gBAAgB;AACjD,UAAI,OAAO,MAAM,SAAS,WAAW;AACpC,aAAK,iBAAiB;AAAA,MACvB,OAAO;AACN,cAAM,OAAO;AACb,aAAK,cAAc;AAAA,MACpB;AAAA,IACD;AAAA,IAEA,eAAe;AAAA,IAAC;AAAA,IAEhB,cAAc;AACb,UAAI,OAAO,MAAM,SAAS,WAAW;AACpC,aAAK,iBAAiB;AAAA,MACvB,OAAO;AACN,cAAM,YAAY;AAAA,MACnB;AAAA,IACD;AAAA,IAEA,mBAAmB;AAClB,UAAI,OAAO,KAAK,KACd,IAAI,OAAK;AACT,cAAM,aAAa,EAAE,aAAa;AAClC,YAAI,iBACH,EAAE,SAAS,UACR,qCACD,EAAE,kBACO,EAAE,sBACV,OAAO,MAAM,KAAK,YAAY;AAAA,UAC/B,OAAO;AAAA,UACP,QAAQ;AAAA,QACT,CAAC;AACH,cAAM,OAAO,OAAO,EAAE,IAAI;AAC1B,cAAM,YAAY,EAAE,QAAQ,WAAW,QAAQ;AAC/C,eAAO;AAAA,eACI,KAAK,cAAc,CAAC;AAAA,kBACjB,uDAAuD;AAAA;AAAA,yFAEgB;AAAA;AAAA;AAAA,QAGjF;AAAA;AAAA;AAAA,yCAGiC,EAAE;AAAA,mCACR,KAAK,kBAAkB,CAAC;AAAA;AAAA;AAAA;AAAA,MAIxD,CAAC,EACA,KAAK,EAAE;AAET,WAAK,QAAQ,SAAS,gBAAgB;AACtC,WAAK,QAAQ,MAAM,EAAE,KACpB;AAAA,MACG;AAAA,UAEJ;AAAA,IACD;AAAA,IAEA,uBAAuB;AACtB,YAAM,QAAQ,OAAO,OAAO,MAAM;AAClC,YAAM,UAAU,MAAM,MAAM,CAAC;AAE7B,aAAO,QACL,IAAI,CAAC,QAAQ,OAAM;AACnB,YAAI,OAAM,QAAQ,SAAS,GAAG;AAC7B,iBAAO,SAAS;AAAA,QACjB;AACA,cAAM,SAAQ,QAAQ,OAAO,CAAC,KAAK,MAAM,MAAM;AAC9C,cAAI,KAAK,IAAG;AACX,mBAAO,MAAM;AAAA,UACd;AACA,iBAAO;AAAA,QACR,GAAG,gBAAgB;AAEnB,eAAO,YAAY,WAAU;AAAA,MAC9B,CAAC,EACA,KAAK,eAAe;AAAA,IACvB;AAAA,IAEA,kBAAkB;AACjB,YAAM,mBAAmB,KAAK,qBAAqB;AAEnD,UAAI,uBAAuB,CAAC,OAAO,MAAM,SAAS,YAC/C,6EAA6E,GAC9E,YACD,QACE;AAEH,UAAI,sBAAsB,CAAC,OAAO,MAAM,SAAS,YAC9C;AAAA,aACQ,GAAG,MAAM;AAAA;AAAA;AAAA,aAGT,GAAG,SAAS;AAAA,cAEpB;AAEH,UAAI,eAAe;AAAA;AAAA,MAEf;AAAA,+BACyB;AAAA;AAAA,KAE1B;AAAA;AAGH,aAAO,KAAK,yBACX,cACA,kCACD;AAAA,IACD;AAAA,IAEA,cAAc,MAAM;AACnB,aAAO,KAAK,YACT,oBAAoB,KAAK,OACzB,KAAK,cAAc,IAAI;AAAA,IAC3B;AAAA,IAEA,kBAAkB,MAAM;AACvB,YAAM,CAAC,QAAQ,KAAK,SAAS,MAAM,GAAG;AACtC,UAAI;AACJ,UAAI,SAAS,OAAO,SAAS,SAAS,GAAG;AACxC,qBAAa,aAAa,KAAK,QAAQ;AAAA,MACxC,OAAO;AACN,qBAAa,OAAO,SAAS,YAAY,IAAI;AAAA,MAC9C;AACA,aAAO;AAAA,IACR;AAAA,IAEA,cAAc,MAAM;AACnB,aAAO,KAAK,cAAc,IAAI;AAC9B,YAAM,YAAY,KAAK,YACpB,OAAO,KAAK,WAAW,SAAS,KAAK,SAAS,IAC9C;AACH,YAAM,YAAY,KAAK,cAAc,IAAI;AAEzC,aAAO;AAAA;AAAA;AAAA;AAAA,mCAI0B,KAAK;AAAA;AAAA,gDAEQ,KAAK;AAAA,iCACpB,qBAAqB,KAAK;AAAA,QACnD,KAAK;AAAA;AAAA;AAAA;AAAA;AAAA,YAKD;AAAA;AAAA;AAAA,YAGA,KAAK,kBAAkB,IAAI;AAAA;AAAA;AAAA,IAGtC;AAAA,IAEA,eAAe,MAAM;AACpB,aAAO;AAAA;AAAA,MAEH,aAAa,KAAK,QAAQ;AAAA;AAAA;AAAA,IAG/B;AAAA,IAEA,eAAe;AACd,YAAM,aAAa;AACnB,WAAK,kBAAkB;AAAA,IACxB;AAAA,IAEA,oBAAoB;AACnB,WAAK,QAAQ,GAAG,aAAa,wBAAwB,OAAK;AACzD,UAAE,gBAAgB;AAClB,UAAE,cAAc,aAAa,QAC5B,QACA,EAAE,EAAE,aAAa,EAAE,KAAK,WAAW,CACpC;AACA,UAAE,OAAO,MAAM,UAAU;AACzB,eAAO,aAAa,IACnB,CAAC,EAAE,MAAM,EAAE,EAAE,aAAa,EAAE,KAAK,WAAW,EAAE,CAAC,GAC/C,KAAK,cACN;AAAA,MACD,CAAC;AAED,WAAK,QAAQ,GACZ,YACA,OAAK;AACJ,UAAE,eAAe;AAAA,MAClB,GACA,KACD;AAEA,WAAK,QAAQ,GAAG,WAAW,wBAAwB,OAAK;AACvD,UAAE,eAAe;AACjB,UAAE,gBAAgB;AAClB,UAAE,OAAO,MAAM,UAAU;AAAA,MAC1B,CAAC;AAED,WAAK,QAAQ,GAAG,QAAQ,OAAK;AAC5B,UAAE,gBAAgB;AAClB,UAAE,eAAe;AACjB,cAAM,MAAM,EAAE,EAAE,MAAM,EAAE,QAAQ,eAAe;AAE/C,YAAI,eAAe,EAAE,cAAc;AACnC,YAAI,CAAC;AAAc;AAEnB,YAAI,aAAa,SAAS,aAAa,MAAM,SAAS,GAAG;AACxD,cAAI,OAAO,GAAG,aAAa;AAAA,YAC1B,OAAO,aAAa;AAAA,YACpB,QAAQ,KAAK;AAAA,UACd,CAAC;AAAA,QACF,WAAW,aAAa,QAAQ,MAAM,GAAG;AACxC,cAAI,IAAI,QAAQ,UAAU,EAAE,WAAW,GAAG;AACzC,kBAAM,YAAY,aAAa,QAAQ,MAAM;AAC7C,kBAAM,cAAc,mBACnB,IAAI,KAAK,WAAW,CACrB;AACA,mBAAO,aAAa,MAAM,WAAW;AACrC,mBAAO,WACN,QAAQ,sBAAsB,aAC/B;AAAA,UACD;AAAA,QACD;AAAA,MACD,CAAC;AAAA,IACF;AAAA,IAEA,qBAAqB;AACpB,YAAM,mBAAmB;AACzB,WAAK,yBAAyB;AAAA,IAC/B;AAAA,IAEA,iBAAiB;AAChB,YAAM,eAAe;AACrB,WAAK,yBAAyB;AAAA,IAC/B;AAAA,IAEA,2BAA2B;AAC1B,YAAM,iBACL,CAAC,OAAO,aAAa,aACrB,OAAO,aAAa,eAAe,KAAK;AACzC,YAAM,eAAe,CAAE,MAAK,WAAW,KAAK,QAAQ,SAAS;AAE7D,WAAK,WAAW,OAAO,CAAC,cAAc;AACtC,WAAK,YAAY,OAAO,CAAC,YAAY;AAAA,IACtC;AAAA,EACD;AAEA,SAAO,MAAM,SAAS,YACrB,OAAO,kBAAkB,MAAM,EAAE,aAAa;AAE/C,+CAA6C;AAC5C,UAAM,QAAQ,OAAO,UAAU;AAC/B,QAAI,MAAM,OAAO,QAAQ;AAGxB,aAAO,UAAU,QAAQ,QAAQ,MAAM;AACvC,aAAO;AAAA,IACR;AACA,WAAO;AAAA,EACR;;;AC/dA,wBAAO;;;AC/BP,SAAO,QAAQ,cAAc;AAC7B,SAAO,QAAQ,6BAA6B;AAE5C,SAAO,MAAM,sBAAsB,MAAM,oBAAoB;AAAA,IAC5D,YAAY,MAAM;AACjB,QAAE,OAAO,MAAM,IAAI;AACnB,WAAK,KAAK;AAAA,IACX;AAAA,IAEA,OAAO;AACN,UAAI,MAAK;AACT,UAAG,SAAS,IAAI,OAAO,GAAG,OAAO;AAAA,QAChC,OAAQ,IAAG,SAAS,IAAG,WAAW,GAAG,cAAc;AAAA,QACnD,oBAAoB;AAAA,QACpB,QAAQ,IAAG,WAAW;AAAA,QACtB,sBAAsB,GAAG,QAAQ;AAAA,QACjC,gBAAgB,WAAW;AAC1B,cAAG,cAAc;AAAA,QAClB;AAAA,MACD,CAAC;AAED,QAAE,QAAQ,EAAE,GAAG,mBAAmB,SAAS,OAAO,YAAY;AAC7D,YAAG,IAAG,OAAO,SAAS;AACrB,cAAI,UAAU,EAAE,IAAG,OAAO,YAAY,mBAAmB,OAAO;AAGhE,cAAI,gBAAgB,QAAQ,KAAK,0BAA0B,EAAE,IAAI,WAAW;AAC3E,mBAAO,EAAE,IAAI,EAAE,KAAK,gBAAgB;AAAA,UACrC,CAAC;AAGD,cAAG,cAAc;AAGjB,wBAAc,KAAK,WAAW,IAAI;AAElC,YAAE,KAAK,eAAe,SAAS,IAAG,UAAU;AAC3C,oBAAQ,KAAK,sBAAqB,WAAU,IAAI,EAAE,KAAK,WAAW,IAAI;AAAA,UACvE,CAAC;AAAA,QACF;AAAA,MACD,CAAC;AACD,UAAG,QAAQ;AACX,UAAG,OAAO,KAAK;AAAA,IAChB;AAAA,IAEA,aAAa;AACZ,UAAI,MAAK;AACT,UAAI,mBAAmB,OAAO,KAAK,iBAAiB,CAAC;AAErD,UAAI,SAAS;AAAA,QACZ;AAAA,UAAC,OAAM,GAAG,WAAW;AAAA,UAAG,WAAU;AAAA,UACjC,WAAU;AAAA,UAAoB,SAAS;AAAA,UACvC,MAAM;AAAA,UACN,UAAU,MAAM;AACf,gBAAI,SAAS,IAAG,WAAW;AAC3B,gBAAG,WAAW,EAAE,QAAQ,WAAS;AAChC,kBAAI,MAAM,aAAa,oBAAoB;AAC1C,oBAAG,OAAO,gBAAgB,MAAM,WAAW,QAAQ,CAAC;AACpD,oBAAG,OAAO,gBAAgB,MAAM,WAAW,UAAU,CAAC;AAAA,cACvD;AAAA,YACD,CAAC;AACD,gBAAG,uBAAuB,MAAM;AAChC,gBAAG,qBAAqB;AAAA,UACzB;AAAA,QACD;AAAA,QACA;AAAA,UAAC,OAAM,GAAG,UAAU;AAAA,UAAG,WAAU;AAAA,UAChC,WAAU;AAAA,UAAY,SAAS;AAAA,UAAI,QAAQ;AAAA,QAAC;AAAA,QAC7C;AAAA,UAAC,OAAM,GAAG,QAAQ;AAAA,UAAG,WAAU;AAAA,UAC9B,WAAU;AAAA,UAAU,SAAS;AAAA,QAAG;AAAA,QACjC,EAAC,WAAW,eAAc;AAAA,QAC1B;AAAA,UAAC,OAAM,GAAG,MAAM;AAAA,UAAG,WAAU;AAAA,UAC5B,WAAU;AAAA,QAAU;AAAA,QACrB;AAAA,UAAC,OAAM,GAAG,aAAa;AAAA,UAAG,WAAU;AAAA,UACnC,WAAU;AAAA,UAAe,SAAQ;AAAA,QAAM;AAAA,QACxC,EAAC,WAAW,gBAAe;AAAA,QAC3B;AAAA,UAAC,OAAM,GAAG,SAAS;AAAA,UAAG,WAAU;AAAA,UAC/B,WAAU;AAAA,QAAS;AAAA,QACpB,EAAC,WAAW,gBAAe;AAAA,QAC3B,EAAC,WAAU,eAAe,WAAU,cAAa;AAAA,QACjD,EAAC,WAAW,gBAAe;AAAA,QAC3B;AAAA,UAAC,OAAM,GAAG,oBAAoB;AAAA,UAAG,WAAU;AAAA,UAC1C,WAAU;AAAA,QAAoB;AAAA,MAChC;AAEA,aAAO;AAAA,IAER;AAAA,IAEA,uBAAuB;AACtB,UAAI,MAAK;AACT,aAAO,MAAM,aAAa,SAAS,MAAM;AACxC,YAAI,aAAa,OAAO,KAAK,aAAa,SAAS,gBAAgB,EAAE,QAAQ,MAAM,IAAI;AACvF,YAAG,OAAO,UAAU,UAAU,EAAE,MAAM,EAAE,YAAY,UAAU;AAAA,MAC/D,CAAC;AAAA,IACF;AAAA,IAEA,UAAU;AACT,WAAK,aAAa;AAAA,IACnB;AAAA,IAEA,uBAAuB,QAAQ;AAC9B,UAAI,MAAK;AACT,UAAI,UAAQ,sBAAsB,QAAQ;AACzC,YAAI,cAAc,iBAAiB;AACnC,oBAAY,OAAO,kBAAkB,eAAe,QAAQ,WAAS;AACpE,cAAG,OAAO,gBAAgB,OAAO,QAAQ,CAAC;AAAA,QAC3C,CAAC;AAED,oBAAY,OAAO,kBAAkB,iBAAiB,QAAQ,WAAS;AACtE,cAAG,OAAO,gBAAgB,OAAO,UAAU,CAAC;AAAA,QAC7C,CAAC;AAAA,MACF;AAAA,IACD;AAAA,IAEA,eAAe;AACd,UAAI,SAAS,KAAK,OAAO;AACzB,UAAI,SAAS,EAAE,OAAO,mBAAmB,OAAO;AAEhD,UAAI,CAAC,KAAK,aAAa;AACtB,aAAK,cAAc,CAAC;AAAA,MACrB;AAEA,UAAI,OAAO;AAAA,QACV,QAAQ;AAAA,QACR,YAAY,gBAAc,KAAK,YAAY,KAAK,UAAU;AAAA,MAC3D;AAEA,UAAI,KAAK,KAAK;AACb,eAAO;AAAA,UACN,SAAS,KAAK,IAAI;AAAA,UAClB,SAAS,KAAK,IAAI;AAAA,UAClB,QAAQ;AAAA,UACR,YAAY,gBAAc;AACzB,iBAAK,IAAI,YAAY,oBAAoB,UAAU;AACnD,iBAAK,cAAc;AAAA,UACpB;AAAA,QACD;AAAA,MACD;AAEA,QAAE,qFACA,GAAG,oBAAoB,IAAE,wKAGzB,GAAG,gBAAgB,IAAE,UAAU,EAAE,SAAS,OAAO,MAAM,CAAC;AAC1D,aACE,KAAK,yBAAyB,EAC9B,GAAG,SAAQ,MAAM,IAAI,OAAO,GAAG,aAAa,IAAI,CAAC;AACnD,WAAK,cAAc;AAAA,IACpB;AAAA,IAEA,gBAAe;AACd,UAAI,SAAS,KAAK,OAAO;AACzB,UAAI,SAAS,EAAE,OAAO,mBAAmB,OAAO,EAAE,KAAK,cAAc,EAAE,MAAM;AAE7E,UAAI,QAAQ,CAAC;AACb,UAAI,KAAK,eAAe,KAAK,YAAY,QAAQ;AAChD,gBAAQ,MAAM,OAAO,KAAK,WAAW;AAAA,MACtC;AACA,UAAI,SAAS;AACZ,gBAAQ,MAAM,OAAO,QAAQ,UAAU,CAAC;AAAA,MACzC;AAEA,UAAG,MAAM,QAAQ;AAChB,UAAE,KAAK,OAAO,SAAS,IAAG,GAAG;AAC5B,cAAI,CAAC,EAAE;AAAW;AAClB,YAAE,WAAW,OAAO,OAAO,aAAa,EAAE,QAAQ;AAElD,YAAE,KAAK,uSAKY,CAAC,CAAC,EACnB,SAAS,MAAM;AAAA,QAClB,CAAC;AAAA,MACF;AAAA,IACD;AAAA,IAEA,gBAAgB;AACf,UAAI,MAAK;AACT,UAAI,MAAM,IAAG,OAAO,gBAAgB;AAEpC,UAAI,cAAc,KAAK,WAAW;AAClC,UAAG,CAAC;AAAa;AAEjB,UAAI,uBACH,EAAE,IAAI,EAAE,IAAG,OAAO,OAAO,EAAE,KAAK,0BAA0B,GAAG,SAAS,SAAQ;AAC7E,eAAO,EAAE,OAAO,EAAE,KAAK,gBAAgB;AAAA,MACxC,CAAC;AAEF,UAAG,mBAAmB,KAAK,aAAa,oBAAoB;AAAA,IAC7D;AAAA,IAEA,aAAa;AACZ,UAAI,MAAK;AACT,UAAI,SAAS,KAAK,OAAO,WAAW,IAAI;AACxC,UAAI,QAAQ;AACX,eAAO,uBAAuB,IAAG,IAAI,IAAI;AACzC,eAAO,wBAAwB,IAAG,IAAI,IAAI;AAAA,MAC3C;AAEA,aAAO;AAAA,IACR;AAAA,IAEA,mBAAmB,KAAK,aAAa,sBAAsB;AAC1D,UAAI,MAAK;AACT,UAAG,OAAO,KAAK;AAEf,UAAI,YAAY,iBAAiB;AACjC,UAAI,qBAAqB,CAAC;AAC1B,aAAO,KAAK,WAAW,EAAE,QAAQ,WAAS;AACzC,2BAAmB,UAAU,YAAY,kBAAkB,aAAa,UAAU,YAAY;AAAA,MAC/F,CAAC;AAED,UAAI,gBAAgB,oBAAmB;AACtC,2BAAmB,gBAAiB,YAAY,UAAU,IAAK,WAAW;AAAA,MAC3E;AACA,UAAI,mBAAmB,cAAc,SAAS;AAC7C,2BAAmB,wBAAwB,CAAC;AAAA,UAAC,qBAAqB,YAAY;AAAA,UAC7E,qBAAqB,YAAY;AAAA,QAAkB,CAAC;AAAA,MACtD;AACA,UAAI,CAAE,YAAW,qBAAoB;AACpC,2BAAmB,WAAW,OAAO,QAAQ;AAAA,MAC9C;AACA,UAAI,CAAE,kBAAiB,uBAAuB,mBAAmB,cAAc,QAAQ;AACtF,2BAAmB,iBAAiB,OAAO,QAAQ;AAAA,MACpD;AACA,aAAO,OAAO,KAAK;AAAA,QAClB,QAAO;AAAA,QACP,MAAM,EAAE,KAAK,mBAAkB;AAAA,QAC/B;AAAA,QACA,UAAU,SAAS,GAAG;AACrB,cAAG,CAAC,EAAE,KAAK;AACV,mBAAO,WAAW;AAAA,cACjB,SAAS,GAAG,4BAA4B,CAAC,YAAY,gBAAgB,CAAC;AAAA,cACtE,WAAW;AAAA,YACZ,CAAC;AACD,gBAAI,iBAAiB,aAAa;AACjC,kBAAG,gBAAgB,EAAE,SAAS,YAAY,cAAc;AAAA,YACzD;AAEA,gBAAI,sBAAsB;AACzB,kBAAG,gBAAgB,EAAE,SAAS,oBAAoB;AAAA,YACnD;AACA,gBAAI,SAAS;AACZ,sBAAQ,WAAW;AAAA,YACpB;AAAA,UACD,OAAO;AACN,mBAAO,SAAS,GAAG,kEAAkE,CAAC;AAAA,UACvF;AAAA,QACD;AAAA,MACD,CAAC;AAAA,IAEF;AAAA,IAEA,gBAAgB,KAAK,UAAU;AAC9B,UAAI,IAAI,WAAW,QAAQ;AAC1B,eAAO,KAAK;AAAA,UACX,QAAO;AAAA,UACP,MAAM;AAAA,YACL,SAAS,IAAI;AAAA,YACb,MAAM,IAAI;AAAA,YACV,WAAW,KAAK,UAAU,CAAC,QAAQ,CAAC;AAAA,UACrC;AAAA,UACA,UAAS,SAAS,GAAG;AACpB,gBAAG,CAAC,EAAE,KAAK;AACV,qBAAO,WAAW;AAAA,gBACjB,SAAS,GAAG,yCAAyC,CAAC,QAAQ,CAAC;AAAA,gBAC/D,WAAW;AAAA,cACZ,CAAC;AACD;AAAA,YACD,OAAO;AACN,qBAAO,WAAW;AAAA,gBACjB,SAAS,GAAG,8CAA8C;AAAA,gBAC1D,WAAW;AAAA,cACZ,CAAC;AACD;AAAA,YACD;AAAA,UACD;AAAA,QACD,CAAC;AAAA,MACF;AAAA,IAED;AAAA,IAEA,gBAAgB,KAAK,aAAa;AACjC,aAAO,KAAK;AAAA,QACX,QAAO;AAAA,QACP,MAAM;AAAA,UACL,SAAS,IAAI;AAAA,UACb,MAAM,IAAI;AAAA,UACV,aAAa,KAAK,UAAU,WAAW;AAAA,QACxC;AAAA,QACA,UAAS,SAAS,GAAG;AACpB,cAAG,CAAC,EAAE,KAAK;AACV;AAAA,UACD,OAAO;AACN,mBAAO,WAAW;AAAA,cACjB,SAAS,GAAG,mEAAmE;AAAA,cAC/E,WAAW;AAAA,YACZ,CAAC;AACD;AAAA,UACD;AAAA,QACD;AAAA,MACD,CAAC;AAAA,IAEF;AAAA,EACD;AAEA,8BAA4B;AAC3B,UAAM,UAAU;AAAA,MACf,SAAS;AAAA,QACR,aAAa;AAAA,UACZ,oBAAoB;AAAA,UACpB,WAAW;AAAA,UACX,eAAe;AAAA,UACf,YAAY;AAAA,UACZ,YAAY;AAAA,UACZ,UAAU;AAAA,QACX;AAAA,QACA,eAAe,CAAC,WAAW,UAAU;AAAA,QACrC,iBAAiB,CAAC;AAAA,MACnB;AAAA,MACA,QAAQ;AAAA,QACP,aAAa;AAAA,UACZ,oBAAoB;AAAA,UACpB,eAAe;AAAA,UACf,YAAY;AAAA,UACZ,qBAAqB;AAAA,UACrB,sBAAsB;AAAA,UACtB,eAAe;AAAA,QAChB;AAAA,QACA,eAAe,CAAC,aAAa;AAAA,QAC7B,iBAAiB,CAAC,UAAU,UAAU;AAAA,MACvC;AAAA,IACD;AAEA,WAAO;AAAA,EACR;;;AClVC,SAAO,UAAU,yBAAyB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;;ACA1C,SAAO,UAAU,oBAAoB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;;ACArC,SAAO,UAAU,kBAAkB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;;ACAnC,SAAO,UAAU,mBAAmB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;;ACApC,SAAO,UAAU,iBAAiB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;",
  "names": []
}
