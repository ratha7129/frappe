{
  "version": 3,
  "sources": ["../../../../../apps/frappe/frappe/public/js/integrations/razorpay.js"],
  "sourcesContent": ["/* HOW-TO\n\nRazorpay Payment\n\n1. \tInclude checkout script in your code\n\t{{ include_script('checkout.bundle.js) }}\n\n2.\tCreate the Order controller in your backend\n\tdef get_razorpay_order(self):\n\t\tcontroller = get_payment_gateway_controller(\"Razorpay\")\n\n\t\tpayment_details = {\n\t\t\t\"amount\": 300,\n\t\t\t...\n\t\t\t\"reference_doctype\": \"Conference Participant\",\n\t\t\t\"reference_docname\": self.name,\n\t\t\t...\n\t\t\t\"receipt\": self.name\n\t\t}\n\n\t\treturn controller.create_order(**payment_details)\n\n3. \tInititate the payment in client using checkout API\n\tfunction make_payment(ticket) {\n\t\tvar options = {\n\t\t\t\"name\": \"<CHECKOUT MODAL TITLE>\",\n\t\t\t\"description\": \"<CHECKOUT MODAL DESCRIPTION>\",\n\t\t\t\"image\": \"<CHECKOUT MODAL LOGO>\",\n\t\t    \"prefill\": {\n\t\t\t\t\"name\": \"<CUSTOMER NAME>\",\n\t\t\t\t\"email\": \"<CUSTOMER EMAIL>\",\n\t\t\t\t\"contact\": \"<CUSTOMER PHONE>\"\n\t\t    },\n\t\t    \"theme\": {\n\t\t\t\t\"color\": \"<MODAL COLOR>\"\n\t\t    },\n\t\t    \"doctype\": \"<REFERENCE DOCTYPE>\",\n\t\t    \"docname\": \"<REFERENCE DOCNAME\"\n\t\t};\n\n\t\trazorpay = new frappe.checkout.razorpay(options)\n\t\trazorpay.on_open = () => {\n\t\t\t<SCRIPT TO RUN WHEN MODAL OPENS>\n\t\t}\n\t\trazorpay.on_success = () => {\n\t\t\t<SCRIPT TO RUN ON PAYMENT SUCCESS>\n\t\t}\n\t\trazorpay.on_fail = () => {\n\t\t\t<SCRIPT TO RUN ON PAYMENT FAILURE>\n\t\t}\n\t\trazorpay.init() // Creates the order and opens the modal\n\t}\n*/\n\nfrappe.provide(\"frappe.checkout\");\n\nfrappe.require('https://checkout.razorpay.com/v1/checkout.js').then(() => {\n\tfrappe.checkout.razorpay = class RazorpayCheckout {\n\t\tconstructor(opts) {\n\t\t\tObject.assign(this, opts);\n\t\t}\n\n\t\tinit() {\n\t\t\tfrappe.run_serially([\n\t\t\t\t() => this.get_key(),\n\t\t\t\t() => this.make_order(),\n\t\t\t\t() => this.prepare_options(),\n\t\t\t\t() => this.setup_handler(),\n\t\t\t\t() => this.show()\n\t\t\t]);\n\t\t}\n\n\t\tshow() {\n\t\t\tthis.razorpay = new Razorpay(this.options);\n\t\t\tthis.razorpay.once('ready', (response) => {\n\t\t\t\tthis.on_open && this.on_open(response);\n\t\t\t})\n\t\t\tthis.razorpay.open();\n\t\t}\n\n\t\tget_key() {\n\t\t\treturn new Promise(resolve => {\n\t\t\t\tfrappe.call(\"frappe.integrations.doctype.razorpay_settings.razorpay_settings.get_api_key\").then(res => {\n\t\t\t\t\tthis.key = res.message;\n\t\t\t\t\tresolve(true);\n\t\t\t\t})\n\t\t\t});\n\t\t}\n\n\t\tmake_order() {\n\t\t\treturn new Promise(resolve => {\n\t\t\t\tfrappe.call(\"frappe.integrations.doctype.razorpay_settings.razorpay_settings.get_order\", {\n\t\t\t\t\tdoctype: this.doctype,\n\t\t\t\t\tdocname: this.docname\n\t\t\t\t}).then(res => {\n\t\t\t\t\tthis.order = res.message;\n\t\t\t\t\tresolve(true);\n\t\t\t\t})\n\t\t\t});\n\t\t}\n\n\t\torder_success(response) {\n\t\t\tfrappe.call(\"frappe.integrations.doctype.razorpay_settings.razorpay_settings.order_payment_success\", {\n\t\t\t\tintegration_request: this.order.integration_request,\n\t\t\t\tparams: {\n\t\t\t\t\trazorpay_payment_id: response.razorpay_payment_id,\n\t\t\t\t\trazorpay_order_id: response.razorpay_order_id,\n\t\t\t\t\trazorpay_signature: response.razorpay_signature\n\t\t\t\t}\n\t\t\t})\n\t\t}\n\n\t\torder_fail(response) {\n\t\t\tfrappe.call( \"frappe.integrations.doctype.razorpay_settings.razorpay_settings.order_payment_failure\", {\n\t\t\t\tintegration_request: this.order.integration_request,\n\t\t\t\tparams: response\n\t\t\t})\n\t\t}\n\n\t\tprepare_options() {\n\t\t\tthis.options = {\n\t\t\t\t\"key\": this.key,\n\t\t\t\t\"amount\": this.order.amount_due,\n\t\t\t\t\"currency\": this.order.currency,\n\t\t\t\t\"name\": this.name,\n\t\t\t\t\"description\": this.description,\n\t\t\t\t\"image\": this.image,\n\t\t\t\t\"order_id\": this.order.id,\n\t\t\t\t\"prefill\": this.prefill,\n\t\t\t\t\"theme\": this.theme,\n\t\t\t\t\"modal\": this.modal\n\t\t\t};\n\t\t}\n\n\t\tsetup_handler() {\n\t\t\tthis.options.handler = (response) => {\n\t\t\t\tif (response.error) {\n\t\t\t\t\tthis.order_fail(response);\n\t\t\t\t\tthis.on_fail && this.on_fail(response);\n\t\t\t\t}\n\t\t\t\telse if (response.razorpay_payment_id) {\n\t\t\t\t\tthis.order_success(response);\n\t\t\t\t\tthis.on_success && this.on_success(response);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n});\n"],
  "mappings": ";;AAsDA,SAAO,QAAQ,iBAAiB;AAEhC,SAAO,QAAQ,8CAA8C,EAAE,KAAK,MAAM;AACzE,WAAO,SAAS,WAAW,MAAM,iBAAiB;AAAA,MACjD,YAAY,MAAM;AACjB,eAAO,OAAO,MAAM,IAAI;AAAA,MACzB;AAAA,MAEA,OAAO;AACN,eAAO,aAAa;AAAA,UACnB,MAAM,KAAK,QAAQ;AAAA,UACnB,MAAM,KAAK,WAAW;AAAA,UACtB,MAAM,KAAK,gBAAgB;AAAA,UAC3B,MAAM,KAAK,cAAc;AAAA,UACzB,MAAM,KAAK,KAAK;AAAA,QACjB,CAAC;AAAA,MACF;AAAA,MAEA,OAAO;AACN,aAAK,WAAW,IAAI,SAAS,KAAK,OAAO;AACzC,aAAK,SAAS,KAAK,SAAS,CAAC,aAAa;AACzC,eAAK,WAAW,KAAK,QAAQ,QAAQ;AAAA,QACtC,CAAC;AACD,aAAK,SAAS,KAAK;AAAA,MACpB;AAAA,MAEA,UAAU;AACT,eAAO,IAAI,QAAQ,aAAW;AAC7B,iBAAO,KAAK,6EAA6E,EAAE,KAAK,SAAO;AACtG,iBAAK,MAAM,IAAI;AACf,oBAAQ,IAAI;AAAA,UACb,CAAC;AAAA,QACF,CAAC;AAAA,MACF;AAAA,MAEA,aAAa;AACZ,eAAO,IAAI,QAAQ,aAAW;AAC7B,iBAAO,KAAK,6EAA6E;AAAA,YACxF,SAAS,KAAK;AAAA,YACd,SAAS,KAAK;AAAA,UACf,CAAC,EAAE,KAAK,SAAO;AACd,iBAAK,QAAQ,IAAI;AACjB,oBAAQ,IAAI;AAAA,UACb,CAAC;AAAA,QACF,CAAC;AAAA,MACF;AAAA,MAEA,cAAc,UAAU;AACvB,eAAO,KAAK,yFAAyF;AAAA,UACpG,qBAAqB,KAAK,MAAM;AAAA,UAChC,QAAQ;AAAA,YACP,qBAAqB,SAAS;AAAA,YAC9B,mBAAmB,SAAS;AAAA,YAC5B,oBAAoB,SAAS;AAAA,UAC9B;AAAA,QACD,CAAC;AAAA,MACF;AAAA,MAEA,WAAW,UAAU;AACpB,eAAO,KAAM,yFAAyF;AAAA,UACrG,qBAAqB,KAAK,MAAM;AAAA,UAChC,QAAQ;AAAA,QACT,CAAC;AAAA,MACF;AAAA,MAEA,kBAAkB;AACjB,aAAK,UAAU;AAAA,UACd,OAAO,KAAK;AAAA,UACZ,UAAU,KAAK,MAAM;AAAA,UACrB,YAAY,KAAK,MAAM;AAAA,UACvB,QAAQ,KAAK;AAAA,UACb,eAAe,KAAK;AAAA,UACpB,SAAS,KAAK;AAAA,UACd,YAAY,KAAK,MAAM;AAAA,UACvB,WAAW,KAAK;AAAA,UAChB,SAAS,KAAK;AAAA,UACd,SAAS,KAAK;AAAA,QACf;AAAA,MACD;AAAA,MAEA,gBAAgB;AACf,aAAK,QAAQ,UAAU,CAAC,aAAa;AACpC,cAAI,SAAS,OAAO;AACnB,iBAAK,WAAW,QAAQ;AACxB,iBAAK,WAAW,KAAK,QAAQ,QAAQ;AAAA,UACtC,WACS,SAAS,qBAAqB;AACtC,iBAAK,cAAc,QAAQ;AAC3B,iBAAK,cAAc,KAAK,WAAW,QAAQ;AAAA,UAC5C;AAAA,QACD;AAAA,MACD;AAAA,IACD;AAAA,EACD,CAAC;",
  "names": []
}
